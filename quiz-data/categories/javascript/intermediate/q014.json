{
  "id": "js_intermediate_014",
  "version": "1.0",
  "category": "javascript",
  "level": "intermediate",
  "tags": ["function", "hoisting", "declaration", "execution"],
  "question": {
    "text": "次のコードは正常に動作しますか？\nsayHello();\nfunction sayHello() {\n  console.log('Hello!');\n}",
    "hint": "関数宣言は巻き上げられます",
    "animation": {
      "type": "code_typing",
      "duration": 1500
    },
    "visual": {
      "type": "code_editor",
      "content": "sayHello();\n// 定義前に呼び出し\n\nfunction sayHello() {\n  console.log('Hello!');\n}\n// 動作する？"
    }
  },
  "choices": [
    {
      "id": "A",
      "text": "はい、正常に動作します",
      "animation": "slide_in_left"
    },
    {
      "id": "B",
      "text": "いいえ、エラーになります",
      "animation": "slide_in_right"
    },
    {
      "id": "C",
      "text": "undefinedが出力されます",
      "animation": "slide_in_left"
    },
    {
      "id": "D",
      "text": "何も出力されません",
      "animation": "slide_in_right"
    }
  ],
  "correct": "A",
  "explanation": {
    "text": "関数宣言は「巻き上げ（hoisting）」により、定義前でも呼び出せます。これは、JavaScriptエンジンが実行前に関数宣言を先に処理するためです。",
    "example": "// これは動作する（関数宣言）\nsayHello();\n// 'Hello!'\nfunction sayHello() {\n  console.log('Hello!');\n}\n\n// これはエラー（関数式）\n// greet();\n// TypeError: greet is not a function\nconst greet = function() {\n  console.log('Hi!');\n};\n\n// これもエラー（アロー関数）\n// welcome();\n// TypeError: welcome is not a function\nconst welcome = () => console.log('Welcome!');",
    "relatedCommands": ["function declaration", "function expression", "var hoisting"],
    "furtherReading": "関数式やアロー関数は巻き上げられないので、定義前に呼び出すとエラーになります。"
  },
  "difficulty": {
    "score": 5,
    "timeLimit": 40,
    "points": 25
  },
  "statistics": {
    "attempts": 0,
    "correctRate": 0
  }
}
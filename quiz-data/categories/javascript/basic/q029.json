{
  "id": "js_basic_029",
  "version": "1.0",
  "category": "javascript",
  "level": "basic",
  "tags": ["mixed_data_types", "type_checking", "typeof"],
  "question": {
    "text": "配列 data = [42, 'hello', true, null, undefined] の各要素の型を表示するコードは？",
    "hint": "typeof演算子を使って各要素の型を調べます",
    "animation": {
      "type": "code_typing",
      "duration": 1500
    },
    "visual": {
      "type": "code_editor",
      "content": "const data = [42, 'hello', true, null, undefined];\n// 各要素の型を表示\n_"
    }
  },
  "choices": [
    {
      "id": "A",
      "text": "for (let i = 0; i < data.length; i++) { console.log(typeof data[i]); }",
      "animation": "slide_in_left"
    },
    {
      "id": "B",
      "text": "for (let i = 0; i < data.length; i++) { console.log(data[i].type); }",
      "animation": "slide_in_right"
    },
    {
      "id": "C",
      "text": "console.log(typeof data);",
      "animation": "slide_in_left"
    },
    {
      "id": "D",
      "text": "for (let item of data) { console.log(item instanceof String); }",
      "animation": "slide_in_right"
    }
  ],
  "correct": "A",
  "explanation": {
    "text": "typeof演算子は値の型を文字列で返します。配列の各要素に対してtypeofを使用することで、混在するデータ型を確認できます。",
    "example": "const data = [42, 'hello', true, null, undefined];\nfor (let i = 0; i < data.length; i++) {\n  console.log(typeof data[i]);\n}\n// 'number', 'string', 'boolean', 'object', 'undefined' が表示される",
    "relatedCommands": ["instanceof", "Array.isArray", "型変換"],
    "furtherReading": "typeof null は 'object' を返すJavaScriptの有名な特殊ケースです。"
  },
  "difficulty": {
    "score": 5,
    "timeLimit": 70,
    "points": 25
  },
  "statistics": {
    "attempts": 0,
    "correctRate": 0
  }
}
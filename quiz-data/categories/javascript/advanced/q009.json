{
  "id": "js_advanced_009",
  "version": "1.0",
  "category": "javascript",
  "level": "advanced",
  "tags": ["method-chaining", "filter", "map", "advanced"],
  "question": {
    "text": "SNSアプリで投稿データから「いいね数が100以上の投稿のタイトルのみ」を抽出する処理をメソッドチェーンで記述すると？",
    "hint": "filterで条件絞り込み→mapで変換の順序でチェーンします",
    "animation": {
      "type": "code_typing",
      "duration": 2500
    },
    "visual": {
      "type": "code_editor",
      "content": "// SNS投稿データの処理\nconst posts = [\n  {id: 1, title: 'JavaScriptの基礎', likes: 150, author: 'yamada'},\n  {id: 2, title: 'Reactを学ぼう', likes: 89, author: 'tanaka'},\n  {id: 3, title: 'Node.js入門', likes: 203, author: 'sato'},\n  {id: 4, title: 'CSSテクニック', likes: 45, author: 'suzuki'}\n];\n// いいね100以上の投稿タイトルのみ取得"
    }
  },
  "choices": [
    {
      "id": "A",
      "text": "posts.filter(post => post.likes >= 100).map(post => post.title)",
      "animation": "slide_in_left"
    },
    {
      "id": "B",
      "text": "posts.map(post => post.title).filter(post => post.likes >= 100)",
      "animation": "slide_in_right"
    },
    {
      "id": "C",
      "text": "posts.filter(post => post.likes >= 100).forEach(post => post.title)",
      "animation": "slide_in_left"
    },
    {
      "id": "D",
      "text": "posts.map(post => post.likes >= 100).filter(post => post.title)",
      "animation": "slide_in_right"
    }
  ],
  "correct": "A",
  "explanation": {
    "text": "メソッドチェーンは処理を左から右に順次実行します。まずfilterで条件に合致する要素を絞り込み、その後mapで必要なプロパティのみを抽出します。順序が重要です。",
    "example": "const users = [{name: 'A', age: 25}, {name: 'B', age: 17}];\nconst adultNames = users\n  .filter(user => user.age >= 18)\n  // 成人のみ\n  .map(user => user.name);\n  // 名前のみ\nconsole.log(adultNames);\n// ['A']",
    "relatedCommands": ["reduce", "sort", "slice"],
    "furtherReading": "メソッドチェーンは可読性とパフォーマンスを両立させるJavaScriptの強力な機能です。"
  },
  "difficulty": {
    "score": 6,
    "timeLimit": 70,
    "points": 30
  },
  "statistics": {
    "attempts": 0,
    "correctRate": 0
  }
}
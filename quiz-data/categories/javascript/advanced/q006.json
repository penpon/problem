{
  "id": "js_advanced_006",
  "version": "1.0",
  "category": "javascript",
  "level": "advanced",
  "tags": ["filter", "array", "condition", "new-array"],
  "question": {
    "text": "ECサイトで商品検索機能を実装する際、特定の価格帯の商品のみを抽出して新しい配列を作成するメソッドは？",
    "hint": "filterメソッドは条件に合致する全ての要素で新しい配列を作成します",
    "animation": {
      "type": "code_typing",
      "duration": 2000
    },
    "visual": {
      "type": "code_editor",
      "content": "// 商品データから価格フィルタリング\nconst products = [\n  {name: 'スマートフォン', price: 89800, category: 'electronics'},\n  {name: 'イヤホン', price: 12800, category: 'electronics'},\n  {name: 'ケーブル', price: 1200, category: 'accessories'},\n  {name: 'ケース', price: 2980, category: 'accessories'}\n];\n// 価格が10000円以上の商品を抽出"
    }
  },
  "choices": [
    {
      "id": "A",
      "text": "const expensive = products.filter(p => p.price >= 10000);",
      "animation": "slide_in_left"
    },
    {
      "id": "B",
      "text": "const expensive = products.select(p => p.price >= 10000);",
      "animation": "slide_in_right"
    },
    {
      "id": "C",
      "text": "const expensive = products.where(p => p.price >= 10000);",
      "animation": "slide_in_left"
    },
    {
      "id": "D",
      "text": "const expensive = products.extract(p => p.price >= 10000);",
      "animation": "slide_in_right"
    }
  ],
  "correct": "A",
  "explanation": {
    "text": "filterメソッドは条件関数がtrueを返す全ての要素で新しい配列を作成します。元の配列は変更されません。検索機能やデータの絞り込みに最適です。",
    "example": "const numbers = [1, 2, 3, 4, 5, 6];\nconst evenNumbers = numbers.filter(n => n % 2 === 0);\nconsole.log(evenNumbers);\n// [2, 4, 6]\nconsole.log(numbers);\n// [1, 2, 3, 4, 5, 6] (元の配列は変更なし)",
    "relatedCommands": ["find", "map", "reduce"],
    "furtherReading": "filterは関数型プログラミングの基本的な概念で、データの不変性を保ちながら操作できます。"
  },
  "difficulty": {
    "score": 5,
    "timeLimit": 50,
    "points": 25
  },
  "statistics": {
    "attempts": 0,
    "correctRate": 0
  }
}
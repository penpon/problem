{
  "id": "js_advanced_005",
  "version": "1.0",
  "category": "javascript",
  "level": "advanced",
  "tags": ["find", "array", "search", "object"],
  "question": {
    "text": "Webアプリでユーザー管理機能を実装する際、特定のIDのユーザー情報を取得するのに最適なメソッドは？",
    "hint": "findメソッドは条件に合致する最初の要素を返します",
    "animation": {
      "type": "code_typing",
      "duration": 2000
    },
    "visual": {
      "type": "code_editor",
      "content": "// ユーザーデータベースから特定ユーザーを検索\nconst users = [\n  {id: 1, name: '山田太郎', role: 'admin'},\n  {id: 2, name: '田中花子', role: 'user'},\n  {id: 3, name: '佐藤次郎', role: 'editor'}\n];\n// ID=2のユーザー情報を取得したい"
    }
  },
  "choices": [
    {
      "id": "A",
      "text": "const user = users.find(u => u.id === 2);",
      "animation": "slide_in_left"
    },
    {
      "id": "B",
      "text": "const user = users.search(u => u.id === 2);",
      "animation": "slide_in_right"
    },
    {
      "id": "C",
      "text": "const user = users.locate(u => u.id === 2);",
      "animation": "slide_in_left"
    },
    {
      "id": "D",
      "text": "const user = users.get(u => u.id === 2);",
      "animation": "slide_in_right"
    }
  ],
  "correct": "A",
  "explanation": {
    "text": "findメソッドは配列内で条件に合致する最初の要素を返し、見つからない場合はundefinedを返します。データベース操作のような単一レコード検索に最適です。",
    "example": "const products = [\n  {id: 1, name: 'ノートPC', price: 89800},\n  {id: 2, name: 'マウス', price: 2980}\n];\nconst product = products.find(p => p.id === 1);\nconsole.log(product);\n// {id: 1, name: 'ノートPC', price: 89800}",
    "relatedCommands": ["findIndex", "filter", "includes"],
    "furtherReading": "findは最初にマッチした要素のみを返すため、パフォーマンス的にも優れています。"
  },
  "difficulty": {
    "score": 5,
    "timeLimit": 50,
    "points": 25
  },
  "statistics": {
    "attempts": 0,
    "correctRate": 0
  }
}
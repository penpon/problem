{
  "id": "js-advanced-05",
  "title": "イベント委譲の基礎",
  "description": "動的に生成した要素のイベントを親要素で一括処理するイベント委譲を学びます。ECサイトのカート追加ボタンなどで使う重要なテクニックです。",
  "category": "javascript-advanced",
  "instructions": [
    "商品リストを動的に生成し、各商品に「追加」ボタンを配置する",
    "親要素（#list）に1つだけclickイベントリスナーを設定する",
    "クリックされた要素がボタンかどうかをclassListで判定する",
    "カート件数（#cart-count）を増やして表示する"
  ],
  "implementationPoints": [
    "必須: 親要素に1つだけイベントリスナーを設定すること",
    "必須: event.targetを使ってクリックされた要素を取得すること",
    "必須: classList.contains()でボタンかどうかを判定すること",
    "推奨: dataset属性で商品IDを取得すること"
  ],
  "files": {
    "html": {
      "template": "",
      "expected": "__INCLUDE__: /problems/frontend/expected/js-advanced-05/files.html.expected"
    },
    "css": {
      "template": "",
      "expected": "__INCLUDE__: /problems/frontend/expected/js-advanced-05/files.css.expected"
    },
    "js": {
      "template": "// 商品データ（配列）\nconst products = [\n  { id: 1, name: 'ノートパソコン', price: 89800 },\n  { id: 2, name: 'マウス', price: 1980 },\n  { id: 3, name: 'キーボード', price: 4980 }\n];\n\nlet cartCount = 0;\n\n// TODO: 商品一覧は <template> + DOM 操作で生成（textContent/appendChild）\n// TODO: 各商品ボタンに data-id を付与し add-btn クラスを付ける\n// TODO: 親要素 #list に1つだけ click リスナー（イベント委譲）\n// TODO: e.target.classList.contains('add-btn') で判定\n// TODO: カート件数を更新して #cart-count に textContent で反映\n\nfunction renderProducts() {\n  // ここに実装してください\n}\n\n// イベント委譲の設定\nfunction setupEventDelegation() {\n  // ここに実装してください\n}\n\nrenderProducts();\nsetupEventDelegation();",
      "expected": "__INCLUDE__: /problems/frontend/expected/js-advanced-05/files.js.expected"
    }
  }
}

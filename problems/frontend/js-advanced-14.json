{
  "id": "js-advanced-14",
  "title": "商品カード（Bootstrap版）",
  "description": "Bootstrap 5を活用して実用的な商品カードシステムを構築し、Bootstrapコンポーネントの統合とレスポンシブ開発手法を習得します",
  "category": "javascript-advanced",
  "difficulty": 4,
  "instructions": [
    "Bootstrap 5を活用した実用的な商品カードシステムを構築する",
    "Bootstrapコンポーネント（Card、Badge、Button、Toast、Accordion等）を統合する",
    "Bootstrap APIとカスタムJavaScriptを組み合わせる",
    "Vanilla版とBootstrap版の比較により最適な開発手法を理解する"
  ],
  "files": {
    "html": {
      "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>課題実装</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n    <div class=\"container\">\n        <h1>課題を実装してください</h1>\n        <!-- ここに実装してください -->\n    </div>\n    \n    <script src=\"script.js\"></script>\n</body>\n</html>",
      "expected": "<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <title>Bootstrap最小カード</title>\n  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n</head>\n<body class=\"p-3\">\n  <h1 class=\"h3 mb-3\">Bootstrap最小カード</h1>\n\n  <div class=\"card\" style=\"max-width: 320px;\">\n    <img src=\"https://via.placeholder.com/640x360?text=Product\" class=\"card-img-top\" alt=\"product\">\n    <div class=\"card-body\">\n      <h5 class=\"card-title\" id=\"pName\">サンプル商品</h5>\n      <p class=\"card-text\"><span id=\"pPrice\">¥2,980</span></p>\n      <div class=\"d-flex gap-2\">\n        <button id=\"likeBtn\" class=\"btn btn-outline-danger btn-sm\">❤ <span id=\"likeCnt\">0</span></button>\n        <button id=\"cartBtn\" class=\"btn btn-primary btn-sm\">カートに追加</button>\n      </div>\n    </div>\n  </div>\n\n  <!-- Toast -->\n  <div class=\"toast-container position-fixed bottom-0 end-0 p-3\">\n    <div id=\"addedToast\" class=\"toast\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n      <div class=\"toast-header\">\n        <strong class=\"me-auto\">通知</strong>\n        <small>今</small>\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"toast\" aria-label=\"Close\"></button>\n      </div>\n      <div class=\"toast-body\" id=\"toastBody\">カートに追加しました</div>\n    </div>\n  </div>\n\n  <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\"></script>\n  <script>\n    const state = { name:'サンプル商品', price:2980, likes:0 };\n    const pName = document.getElementById('pName');\n    const pPrice = document.getElementById('pPrice');\n    const likeBtn = document.getElementById('likeBtn');\n    const likeCnt = document.getElementById('likeCnt');\n    const cartBtn = document.getElementById('cartBtn');\n    const toastEl = document.getElementById('addedToast');\n    const toastBody = document.getElementById('toastBody');\n    const toast = new bootstrap.Toast(toastEl);\n\n    const render = () => {\n      pName.textContent = state.name;\n      pPrice.textContent = '¥' + state.price.toLocaleString();\n      likeCnt.textContent = state.likes;\n    };\n\n    likeBtn.addEventListener('click', () => {\n      state.likes = state.likes ? 0 : 1;\n      render();\n    });\n\n    cartBtn.addEventListener('click', () => {\n      toastBody.textContent = pName.textContent + ' をカートに追加しました';\n      toast.show();\n    });\n\n    render();\n  </script>\n</body>\n</html>"
    },
    "css": {
      "template": "/* 基本的なスタイル */\nbody {\n    font-family: Arial, sans-serif;\n    margin: 40px;\n    background: #f5f5f5;\n}\n\n.container {\n    max-width: 800px;\n    margin: 0 auto;\n    background: white;\n    padding: 20px;\n    border-radius: 10px;\n    box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n}\n\n/* ここに実装してください */",
      "expected": "/* 最小スタイル（Bootstrapに依存） */\nbody{font-family:system-ui,-apple-system,'Segoe UI',sans-serif;margin:16px}"
    },
    "js": {
      "template": "// JavaScript実装エリア\n\n// ここに実装してください\nconsole.log('課題実装を開始してください');",
      "expected": "// 最小ロジック（いいね切替 + Toast）\nconst state={name:'サンプル商品',price:2980,likes:0};\nconst pName=document.getElementById('pName');\nconst pPrice=document.getElementById('pPrice');\nconst likeBtn=document.getElementById('likeBtn');\nconst likeCnt=document.getElementById('likeCnt');\nconst cartBtn=document.getElementById('cartBtn');\nconst toastEl=document.getElementById('addedToast');\nconst toastBody=document.getElementById('toastBody');\nconst toast=new bootstrap.Toast(toastEl);\n\nconst render=()=>{\n  pName.textContent=state.name;\n  pPrice.textContent='¥'+state.price.toLocaleString();\n  likeCnt.textContent=state.likes;\n};\n\nlikeBtn.addEventListener('click',()=>{\n  state.likes=state.likes?0:1;\n  render();\n});\n\ncartBtn.addEventListener('click',()=>{\n  toastBody.textContent=pName.textContent+' をカートに追加しました';\n  toast.show();\n});\n\nrender();"
    }
  },
  "expectedResult": {
    "render": "カードの画像・商品名・価格が表示される",
    "like": "いいねのトグルで数が0/1で変化する",
    "toast": "カートに追加クリックでToastが表示される",
    "behavior": "2つのボタンが正しく機能する"
  },
  "checks": [
    {
      "id": "doctype",
      "name": "DOCTYPE宣言",
      "type": "structure",
      "message": "DOCTYPE html宣言が必要です"
    },
    {
      "id": "html",
      "name": "<html>タグ",
      "type": "structure",
      "message": "<html>タグが必要です"
    },
    {
      "id": "head",
      "name": "<head>セクション",
      "type": "structure",
      "message": "<head>セクションが必要です"
    },
    {
      "id": "body",
      "name": "<body>セクション",
      "type": "structure",
      "message": "<body>セクションが必要です"
    },
    {
      "id": "title",
      "name": "<title>タグ",
      "type": "structure",
      "message": "<title>タグと内容が必要です"
    },
    {
      "id": "css-content",
      "name": "CSSスタイル",
      "type": "css",
      "message": "CSSでスタイルを設定してください"
    },
    {
      "id": "js-content",
      "name": "JavaScript",
      "type": "js",
      "message": "JavaScriptで動的な動作を実装してください"
    }
  ]
}
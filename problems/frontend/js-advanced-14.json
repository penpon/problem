{
  "id": "js-advanced-14",
  "title": "商品カード（Bootstrap版）",
  "description": "Bootstrap 5を活用して実用的な商品カードシステムを構築し、Bootstrapコンポーネントの統合とレスポンシブ開発手法を習得します",
  "category": "javascript-advanced",
  "difficulty": 4,
  "instructions": [
    "Bootstrap 5を活用した実用的な商品カードシステムを構築する",
    "Bootstrapコンポーネント（Card、Badge、Button、Toast、Accordion等）を統合する",
    "Bootstrap APIとカスタムJavaScriptを組み合わせる",
    "Vanilla版とBootstrap版の比較により最適な開発手法を理解する"
  ],
  "files": {
    "html": {
      "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>課題実装</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n    <div class=\"container\">\n        <h1>課題を実装してください</h1>\n        <!-- ここに実装してください -->\n    </div>\n    \n    <script src=\"script.js\"></script>\n</body>\n</html>",
      "expected": "<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>商品カード（Bootstrap版） - 実用的なECコンポーネント</title>\n    <!-- Bootstrap CSS -->\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\n    <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n    <div class=\"container py-5\">\n        <header class=\"text-center mb-5\">\n            <h1 class=\"display-4 text-white\">🛍️ 商品カードデモ（Bootstrap版）</h1>\n            <p class=\"lead text-white-50\">Bootstrap 5を使ったレスポンシブなECサイトコンポーネント</p>\n        </header>\n        \n        <main>\n            <div class=\"row justify-content-center\">\n                <div class=\"col-lg-6 col-md-8 col-sm-12\">\n                    <div class=\"card shadow-lg\" id=\"product-card\">\n                        <!-- 商品画像セクション -->\n                        <div class=\"position-relative\">\n                            <img id=\"main-image\" src=\"../shared/images/simple-product.svg\" alt=\"ワイヤレスイヤホン\" class=\"card-img-top\">\n                            <div class=\"d-flex gap-2 p-2 bg-light\">\n                                <img src=\"../shared/images/simple-product.svg\" alt=\"メイン画像\" class=\"thumbnail active img-thumbnail\" style=\"width: 60px; height: 60px; object-fit: cover;\" data-image=\"../shared/images/simple-product.svg\">\n                                <div class=\"thumbnail placeholder img-thumbnail d-flex align-items-center justify-content-center\" style=\"width: 60px; height: 60px; cursor: pointer;\" data-image=\"https://via.placeholder.com/400x300/4299e1/white?text=Side+View\">📱</div>\n                                <div class=\"thumbnail placeholder img-thumbnail d-flex align-items-center justify-content-center\" style=\"width: 60px; height: 60px; cursor: pointer;\" data-image=\"https://via.placeholder.com/400x300/48bb78/white?text=In+Box\">📦</div>\n                                <div class=\"thumbnail placeholder img-thumbnail d-flex align-items-center justify-content-center\" style=\"width: 60px; height: 60px; cursor: pointer;\" data-image=\"https://via.placeholder.com/400x300/ed8936/white?text=Features\">✨</div>\n                            </div>\n                            \n                            <div class=\"position-absolute top-0 start-0 m-2\">\n                                <span class=\"badge bg-danger me-1\" id=\"sale-badge\">25% OFF</span>\n                                <span class=\"badge bg-success\">NEW</span>\n                            </div>\n                        </div>\n                \n                <!-- 商品情報セクション -->\n                <div class=\"product-info\">\n                    <div class=\"product-header\">\n                        <h2 class=\"product-title\" id=\"product-title\">プレミアム ワイヤレスイヤホン</h2>\n                        <button class=\"wishlist-btn\" id=\"wishlist-btn\" aria-label=\"お気に入りに追加\">\n                            <span class=\"heart-icon\">🤍</span>\n                        </button>\n                    </div>\n                    \n                    <div class=\"rating-section\">\n                        <div class=\"stars\" id=\"rating-stars\">\n                            <span class=\"star filled\">★</span>\n                            <span class=\"star filled\">★</span>\n                            <span class=\"star filled\">★</span>\n                            <span class=\"star filled\">★</span>\n                            <span class=\"star\">★</span>\n                        </div>\n                        <span class=\"rating-text\">4.2 / 5.0</span>\n                        <span class=\"review-count\">(<span id=\"review-count\">127</span> レビュー)</span>\n                    </div>\n                    \n                            <div class=\"mb-3\">\n                                <span class=\"h4 text-primary fw-bold\" id=\"current-price\">¥12,800</span>\n                                <span class=\"text-muted text-decoration-line-through ms-2\" id=\"original-price\">¥16,000</span>\n                                <span class=\"badge bg-warning text-dark ms-2\" id=\"discount-amount\">¥3,200お得</span>\n                            </div>\n                    \n                            <div class=\"mb-3 d-flex flex-wrap gap-1\">\n                                <span class=\"badge bg-secondary\">🔋 24時間バッテリー</span>\n                                <span class=\"badge bg-secondary\">🎵 ハイレゾ対応</span>\n                                <span class=\"badge bg-secondary\">💧 防水IPX7</span>\n                                <span class=\"badge bg-secondary\">🎧 ノイズキャンセリング</span>\n                            </div>\n                            \n                            <div class=\"mb-3\">\n                                <div class=\"d-flex align-items-center\">\n                                    <div class=\"progress flex-grow-1 me-2\" style=\"height: 8px;\">\n                                        <div class=\"progress-bar bg-warning\" role=\"progressbar\" id=\"stock-fill\" style=\"width: 75%;\" aria-valuenow=\"15\" aria-valuemin=\"0\" aria-valuemax=\"20\"></div>\n                                    </div>\n                                    <span class=\"text-warning fw-bold\">残り<span id=\"stock-count\">15</span>個</span>\n                                </div>\n                            </div>\n                    \n                    <div class=\"quantity-selector\">\n                        <label for=\"quantity\">数量:</label>\n                        <div class=\"quantity-controls\">\n                            <button class=\"qty-btn\" id=\"qty-minus\">-</button>\n                            <input type=\"number\" id=\"quantity\" value=\"1\" min=\"1\" max=\"15\">\n                            <button class=\"qty-btn\" id=\"qty-plus\">+</button>\n                        </div>\n                    </div>\n                    \n                            <div class=\"d-grid gap-2 mb-3\">\n                                <button class=\"btn btn-primary position-relative\" id=\"add-to-cart\">\n                                    <span class=\"btn-icon\">🛒</span>\n                                    <span class=\"btn-text\">カートに追加</span>\n                                    <span class=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger\" id=\"cart-count\" style=\"display: none;\">0</span>\n                                </button>\n                                <button class=\"btn btn-warning\" id=\"buy-now\">\n                                    <span class=\"btn-icon\">⚡</span>\n                                    今すぐ購入\n                                </button>\n                            </div>\n                    \n                            <div class=\"d-flex gap-2\">\n                                <button class=\"btn btn-outline-primary flex-fill\" id=\"like-btn\" aria-label=\"いいねする\">\n                                    <span class=\"like-icon\">👍</span>\n                                    <span class=\"like-text\">いいね</span>\n                                    <span class=\"badge bg-primary ms-1\" id=\"like-count\">127</span>\n                                </button>\n                                <button class=\"btn btn-outline-secondary flex-fill\" id=\"share-btn\" aria-label=\"商品をシェア\">\n                                    <span class=\"share-icon\">📤</span>\n                                    シェア\n                                </button>\n                            </div>\n                        </div>\n                \n                        <!-- 詳細情報セクション -->\n                        <div class=\"accordion mt-3\" id=\"product-details\">\n                            <div class=\"accordion-item\">\n                                <h2 class=\"accordion-header\">\n                                    <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#details-content\" aria-expanded=\"false\" id=\"toggle-details\">\n                                        商品詳細\n                                    </button>\n                                </h2>\n                                <div id=\"details-content\" class=\"accordion-collapse collapse\">\n                                    <div class=\"accordion-body\">\n                                        <div class=\"mb-4\">\n                                            <h5>主な特徴</h5>\n                                            <ul class=\"list-unstyled\">\n                                                <li class=\"mb-1\">✅ Bluetooth 5.2接続で安定した音質</li>\n                                                <li class=\"mb-1\">✅ アクティブノイズキャンセリング機能</li>\n                                                <li class=\"mb-1\">✅ IPX7防水規格で運動時も安心</li>\n                                                <li class=\"mb-1\">✅ 最大24時間の長時間再生</li>\n                                                <li class=\"mb-1\">✅ 急速充電対応（15分で3時間再生）</li>\n                                            </ul>\n                                        </div>\n                                        \n                                        <div class=\"mb-4\">\n                                            <h5>スペック</h5>\n                                            <table class=\"table table-sm\">\n                                                <tbody>\n                                                    <tr>\n                                                        <td class=\"fw-semibold\">接続方式</td>\n                                                        <td>Bluetooth 5.2</td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td class=\"fw-semibold\">再生時間</td>\n                                                        <td>イヤホン本体: 8時間 / ケース込み: 24時間</td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td class=\"fw-semibold\">充電時間</td>\n                                                        <td>約1.5時間</td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td class=\"fw-semibold\">防水性能</td>\n                                                        <td>IPX7</td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td class=\"fw-semibold\">重量</td>\n                                                        <td>片耳: 5g / ケース: 45g</td>\n                                                    </tr>\n                                                </tbody>\n                                            </table>\n                                        </div>\n                                        \n                                        <div>\n                                            <h5>配送・返品情報</h5>\n                                            <div class=\"list-group list-group-flush\">\n                                                <div class=\"list-group-item border-0 px-0\">\n                                                    <span class=\"me-2\">🚚</span>\n                                                    全国送料無料（通常2-3営業日でお届け）\n                                                </div>\n                                                <div class=\"list-group-item border-0 px-0\">\n                                                    <span class=\"me-2\">🔄</span>\n                                                    30日間返品・交換保証\n                                                </div>\n                                                <div class=\"list-group-item border-0 px-0\">\n                                                    <span class=\"me-2\">🛡️</span>\n                                                    メーカー1年保証付き\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n            </div>\n                </div>\n            </div>\n            \n            <!-- 通知システム -->\n            <div class=\"toast-container position-fixed top-0 end-0 p-3\" style=\"z-index: 11;\">\n                <div id=\"notification\" class=\"toast\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n                    <div class=\"toast-header\">\n                        <span class=\"notification-icon me-2\" id=\"notification-icon\">✅</span>\n                        <strong class=\"me-auto\">通知</strong>\n                        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"toast\" id=\"notification-close\" aria-label=\"通知を閉じる\"></button>\n                    </div>\n                    <div class=\"toast-body\">\n                        <span id=\"notification-message\">メッセージ</span>\n                    </div>\n                </div>\n            </div>\n            \n            <!-- 機能説明パネル -->\n            <div class=\"mt-5\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <h3 class=\"card-title\">🔥 実装されている機能</h3>\n                        <div class=\"row g-3\">\n                            <div class=\"col-md-4 col-sm-6\">\n                                <div class=\"d-flex\">\n                                    <span class=\"feature-icon me-2\">❤️</span>\n                                    <div>\n                                        <strong>いいね機能</strong>\n                                        <p class=\"mb-0 text-muted small\">ハートボタンでいいね数を増減</p>\n                                    </div>\n                                </div>\n                            </div>\n                    <div class=\"feature-item\">\n                        <span class=\"feature-icon\">🛒</span>\n                        <div class=\"feature-info\">\n                            <strong>カート機能</strong>\n                            <p>商品をカートに追加・数量管理</p>\n                        </div>\n                    </div>\n                    <div class=\"feature-item\">\n                        <span class=\"feature-icon\">📱</span>\n                        <div class=\"feature-info\">\n                            <strong>画像切替</strong>\n                            <p>サムネイルで商品画像を切替</p>\n                        </div>\n                    </div>\n                    <div class=\"feature-item\">\n                        <span class=\"feature-icon\">📊</span>\n                        <div class=\"feature-info\">\n                            <strong>在庫管理</strong>\n                            <p>リアルタイムでの在庫表示</p>\n                        </div>\n                    </div>\n                    <div class=\"feature-item\">\n                        <span class=\"feature-icon\">💾</span>\n                        <div class=\"feature-info\">\n                            <strong>データ保存</strong>\n                            <p>LocalStorageでデータ永続化</p>\n                        </div>\n                    </div>\n                    <div class=\"feature-item\">\n                        <span class=\"feature-icon\">📱</span>\n                        <div class=\"feature-info\">\n                            <strong>レスポンシブ</strong>\n                            <p>スマホ・タブレット対応</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </main>\n    </div>\n    \n    <!-- Bootstrap JS Bundle -->\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin=\"anonymous\"></script>\n    <script src=\"script.js\"></script>\n</body>\n</html>"
    },
    "css": {
      "template": "/* 基本的なスタイル */\nbody {\n    font-family: Arial, sans-serif;\n    margin: 40px;\n    background: #f5f5f5;\n}\n\n.container {\n    max-width: 800px;\n    margin: 0 auto;\n    background: white;\n    padding: 20px;\n    border-radius: 10px;\n    box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n}\n\n/* ここに実装してください */",
      "expected": "/* Bootstrap版 商品カード カスタムスタイル */\n\n/* CSS カスタムプロパティ（Bootstrap拡張） */\n:root {\n    --primary-color: #667eea;\n    --secondary-color: #764ba2;\n    --success-color: #48bb78;\n    --warning-color: #ed8936;\n    --error-color: #f56565;\n}\n\n/* ベーススタイル */\nbody {\n    font-family: 'Hiragino Sans', 'ヒラギノ角ゴシック', 'Yu Gothic', 'Meiryo', sans-serif;\n    background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);\n    min-height: 100vh;\n    line-height: 1.6;\n}\n\n/* カードのホバーエフェクト */\n.card {\n    transition: all 0.3s ease;\n}\n\n.card:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 25px 50px rgba(0,0,0,0.15) !important;\n}\n\n/* メイン画像 */\n.card-img-top {\n    height: 300px;\n    object-fit: cover;\n    transition: all 0.3s ease;\n    cursor: pointer;\n}\n\n/* サムネイル画像 */\n.thumbnail {\n    border: 2px solid transparent;\n    cursor: pointer;\n    transition: all 0.2s ease;\n}\n\n.thumbnail:hover {\n    border-color: var(--primary-color);\n    transform: scale(1.05);\n}\n\n.thumbnail.active {\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 2px rgba(102, 126, 234, 0.2);\n}\n\n/* プレースホルダーサムネイル */\n.placeholder {\n    background: linear-gradient(45deg, #e9ecef, #dee2e6);\n    font-size: 1.2rem;\n    border: 2px dashed #ced4da;\n}\n\n/* 評価星 */\n.star.filled {\n    color: #ffc107;\n}\n\n.star {\n    color: #e9ecef;\n    transition: color 0.2s ease;\n}\n\n/* ボタンカスタマイズ */\n.btn-primary {\n    background: linear-gradient(45deg, var(--primary-color), var(--secondary-color));\n    border: none;\n    box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);\n    transition: all 0.3s ease;\n}\n\n.btn-primary:hover {\n    background: linear-gradient(45deg, #5a67d8, #6b46c1);\n    transform: translateY(-2px);\n    box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);\n}\n\n.btn-warning {\n    background: linear-gradient(45deg, var(--warning-color), #dd6b20);\n    border: none;\n    color: white;\n    transition: all 0.3s ease;\n}\n\n.btn-warning:hover {\n    background: linear-gradient(45deg, #dd6b20, #c05621);\n    transform: translateY(-2px);\n    color: white;\n}\n\n.btn-outline-danger:hover {\n    background: var(--error-color);\n    border-color: var(--error-color);\n}\n\n/* ライクボタンアニメーション */\n.btn-outline-primary.liked {\n    background: var(--primary-color);\n    color: white;\n    transform: scale(1.05);\n    border-color: var(--primary-color);\n}\n\n/* カートカウントバッジ */\n.cart-count {\n    animation: bounce 0.5s ease-in-out;\n}\n\n@keyframes bounce {\n    0%, 20%, 50%, 80%, 100% { transform: translateY(0); }\n    40% { transform: translateY(-10px); }\n    60% { transform: translateY(-5px); }\n}\n\n/* 通知システム */\n.toast {\n    min-width: 300px;\n}\n\n.toast.show {\n    animation: slideInRight 0.3s ease-out;\n}\n\n@keyframes slideInRight {\n    from {\n        transform: translateX(100%);\n        opacity: 0;\n    }\n    to {\n        transform: translateX(0);\n        opacity: 1;\n    }\n}\n\n/* プログレスバーカスタマイズ */\n.progress-bar {\n    transition: width 0.5s ease;\n}\n\n/* アコーディオンカスタマイズ */\n.accordion-button {\n    font-weight: 600;\n    color: var(--primary-color);\n}\n\n.accordion-button:not(.collapsed) {\n    background: linear-gradient(45deg, rgba(102, 126, 234, 0.1), rgba(118, 75, 162, 0.1));\n    border-color: var(--primary-color);\n    color: var(--primary-color);\n}\n\n/* テーブルカスタマイズ */\n.table td:first-child {\n    width: 30%;\n    color: var(--primary-color);\n}\n\n/* リストグループカスタマイズ */\n.list-group-item {\n    border: none;\n    padding-left: 0;\n}\n\n/* ユーティリティクラス */\n.text-primary {\n    color: var(--primary-color) !important;\n}\n\n.bg-primary {\n    background-color: var(--primary-color) !important;\n}\n\n.border-primary {\n    border-color: var(--primary-color) !important;\n}\n\n/* レスポンシブ調整 */\n@media (max-width: 768px) {\n    .card-img-top {\n        height: 250px;\n    }\n    \n    .d-flex.gap-2 {\n        flex-direction: column;\n    }\n    \n    .d-flex.gap-2 .flex-fill {\n        width: 100%;\n    }\n}\n\n@media (max-width: 576px) {\n    .container {\n        padding-left: 10px;\n        padding-right: 10px;\n    }\n    \n    .card-img-top {\n        height: 200px;\n    }\n    \n    .display-4 {\n        font-size: 2rem;\n    }\n}\n\n/* パルスアニメーション（いいねボタン） */\n@keyframes pulse {\n    0% { transform: scale(1); }\n    50% { transform: scale(1.1); }\n    100% { transform: scale(1); }\n}\n\n.pulse {\n    animation: pulse 0.3s ease-in-out;\n}\n\n/* フェードイン効果 */\n@keyframes fadeIn {\n    from { opacity: 0; transform: translateY(20px); }\n    to { opacity: 1; transform: translateY(0); }\n}\n\n.fade-in {\n    animation: fadeIn 0.5s ease-out;\n}"
    },
    "js": {
      "template": "// JavaScript実装エリア\n\n// ここに実装してください\nconsole.log('課題実装を開始してください');",
      "expected": "// 19-mini-product-card: 実用的な商品カードシステムの実装\n\n// 商品データ\nconst productData = {\n    id: 1,\n    name: \"プレミアム ワイヤレスイヤホン\",\n    price: 12800,\n    originalPrice: 16000,\n    stock: 15,\n    maxStock: 20,\n    likes: 127,\n    liked: false,\n    inCart: false,\n    cartQuantity: 0,\n    wishlist: false,\n    quantity: 1,\n    rating: 4.2,\n    reviewCount: 127,\n    images: [\n        \"../shared/images/simple-product.svg\",\n        \"https://via.placeholder.com/400x300/4299e1/white?text=Side+View\",\n        \"https://via.placeholder.com/400x300/48bb78/white?text=In+Box\",\n        \"https://via.placeholder.com/400x300/ed8936/white?text=Features\"\n    ]\n};\n\n// DOM要素の取得\nlet elements = {};\n\n// DOMが読み込まれた後に実行\ndocument.addEventListener('DOMContentLoaded', function() {\n    // Bootstrap読み込み確認\n    if (typeof bootstrap === 'undefined') {\n        console.warn('⚠️ Bootstrap JavaScript が読み込まれていません');\n        return;\n    }\n    \n    initializeElements();\n    initializeBootstrapComponents();\n    initializeEventListeners();\n    loadSavedData();\n    updateAllDisplays();\n    \n    console.log('🛍️ ステップ19: 商品カードシステム（Bootstrap版）が読み込まれました！');\n    console.log('💡 Bootstrap 5のコンポーネントを活用した実用的なECサイトコンポーネントを体験してください！');\n});\n\n// Bootstrap コンポーネントの初期化\nfunction initializeBootstrapComponents() {\n    // Toastコンポーネントの初期化\n    const toastElement = document.getElementById('notification');\n    if (toastElement && !bootstrap.Toast.getInstance(toastElement)) {\n        new bootstrap.Toast(toastElement, {\n            autohide: true,\n            delay: 3000\n        });\n    }\n    \n    // Collapseコンポーネントの初期化\n    const collapseElement = document.getElementById('details-content');\n    if (collapseElement && !bootstrap.Collapse.getInstance(collapseElement)) {\n        new bootstrap.Collapse(collapseElement, {\n            toggle: false\n        });\n    }\n}\n\n// DOM要素を初期化\nfunction initializeElements() {\n    elements = {\n        // 商品情報\n        productTitle: document.getElementById('product-title'),\n        currentPrice: document.getElementById('current-price'),\n        originalPrice: document.getElementById('original-price'),\n        discountAmount: document.getElementById('discount-amount'),\n        stockCount: document.getElementById('stock-count'),\n        stockFill: document.getElementById('stock-fill'),\n        \n        // 画像関連\n        mainImage: document.getElementById('main-image'),\n        thumbnails: document.querySelectorAll('.thumbnail'),\n        \n        // ボタン\n        wishlistBtn: document.getElementById('wishlist-btn'),\n        addToCartBtn: document.getElementById('add-to-cart'),\n        buyNowBtn: document.getElementById('buy-now'),\n        likeBtn: document.getElementById('like-btn'),\n        shareBtn: document.getElementById('share-btn'),\n        \n        // 数量コントロール\n        quantityInput: document.getElementById('quantity'),\n        qtyMinus: document.getElementById('qty-minus'),\n        qtyPlus: document.getElementById('qty-plus'),\n        \n        // カウンター表示\n        likeCount: document.getElementById('like-count'),\n        cartCount: document.getElementById('cart-count'),\n        reviewCount: document.getElementById('review-count'),\n        \n        // 詳細表示\n        toggleDetails: document.getElementById('toggle-details'),\n        detailsContent: document.getElementById('details-content'),\n        \n        // 通知システム\n        notification: document.getElementById('notification'),\n        notificationIcon: document.getElementById('notification-icon'),\n        notificationMessage: document.getElementById('notification-message'),\n        notificationClose: document.getElementById('notification-close')\n    };\n}\n\n// イベントリスナーを初期化\nfunction initializeEventListeners() {\n    // 画像切り替え（data属性を使用）\n    elements.thumbnails.forEach((thumbnail) => {\n        thumbnail.addEventListener('click', () => {\n            const imageUrl = thumbnail.getAttribute('data-image');\n            if (imageUrl) {\n                changeMainImageByUrl(imageUrl, thumbnail);\n            }\n        });\n    });\n    \n    // お気に入りボタン\n    elements.wishlistBtn.addEventListener('click', toggleWishlist);\n    \n    // いいねボタン\n    elements.likeBtn.addEventListener('click', toggleLike);\n    \n    // シェアボタン\n    elements.shareBtn.addEventListener('click', shareProduct);\n    \n    // カートボタン\n    elements.addToCartBtn.addEventListener('click', addToCart);\n    \n    // 今すぐ購入ボタン\n    elements.buyNowBtn.addEventListener('click', buyNow);\n    \n    // 数量コントロール\n    elements.qtyMinus.addEventListener('click', decreaseQuantity);\n    elements.qtyPlus.addEventListener('click', increaseQuantity);\n    elements.quantityInput.addEventListener('change', updateQuantity);\n    elements.quantityInput.addEventListener('input', validateQuantityInput);\n    \n    // 詳細表示切り替え（Bootstrap対応）\n    elements.toggleDetails.addEventListener('click', toggleDetails);\n    \n    // 通知クローズ（Bootstrap Toast自動処理のため削除）\n    // elements.notificationClose.addEventListener('click', hideNotification);\n    \n    // キーボードサポート\n    document.addEventListener('keydown', handleKeyboardShortcuts);\n}\n\n// === 画像切り替え機能 ===\nfunction changeMainImage(index) {\n    if (productData.images[index]) {\n        elements.mainImage.src = productData.images[index];\n        \n        // アクティブなサムネイルを更新\n        elements.thumbnails.forEach((thumb, i) => {\n            thumb.classList.toggle('active', i === index);\n        });\n        \n        // アニメーション効果\n        elements.mainImage.style.opacity = '0.7';\n        setTimeout(() => {\n            elements.mainImage.style.opacity = '1';\n        }, 150);\n    }\n}\n\n// URL指定での画像切り替え（Bootstrap版用）\nfunction changeMainImageByUrl(imageUrl, activeThumbnail) {\n    elements.mainImage.src = imageUrl;\n    \n    // アクティブなサムネイルを更新\n    elements.thumbnails.forEach((thumb) => {\n        thumb.classList.remove('active');\n        // Bootstrapのimg-thumbnailクラスのborderを調整\n        thumb.style.borderColor = '#dee2e6';\n    });\n    \n    activeThumbnail.classList.add('active');\n    activeThumbnail.style.borderColor = '#0d6efd';\n    \n    // アニメーション効果\n    elements.mainImage.style.opacity = '0.7';\n    setTimeout(() => {\n        elements.mainImage.style.opacity = '1';\n    }, 150);\n}\n\n// === お気に入り機能 ===\nfunction toggleWishlist() {\n    productData.wishlist = !productData.wishlist;\n    updateWishlistDisplay();\n    saveData();\n    \n    if (productData.wishlist) {\n        showNotification('お気に入りに追加されました ❤️', 'success');\n        elements.wishlistBtn.style.animation = 'bounce 0.5s ease';\n    } else {\n        showNotification('お気に入りから削除されました', 'warning');\n    }\n    \n    setTimeout(() => {\n        elements.wishlistBtn.style.animation = '';\n    }, 500);\n}\n\nfunction updateWishlistDisplay() {\n    const heartIcon = elements.wishlistBtn.querySelector('.heart-icon');\n    if (productData.wishlist) {\n        heartIcon.textContent = '❤️';\n        elements.wishlistBtn.classList.add('active');\n    } else {\n        heartIcon.textContent = '🤍';\n        elements.wishlistBtn.classList.remove('active');\n    }\n}\n\n// === いいね機能 ===\nfunction toggleLike() {\n    if (productData.liked) {\n        productData.likes--;\n        productData.liked = false;\n        showNotification('いいねを取り消しました', 'warning');\n    } else {\n        productData.likes++;\n        productData.liked = true;\n        showNotification('いいねしました！ 👍', 'success');\n        elements.likeBtn.classList.add('liked');\n        setTimeout(() => elements.likeBtn.classList.remove('liked'), 500);\n    }\n    \n    updateLikeDisplay();\n    saveData();\n}\n\nfunction updateLikeDisplay() {\n    elements.likeCount.textContent = productData.likes;\n    \n    if (productData.liked) {\n        elements.likeBtn.classList.add('liked');\n        elements.likeBtn.querySelector('.like-icon').textContent = '👍';\n    } else {\n        elements.likeBtn.classList.remove('liked');\n        elements.likeBtn.querySelector('.like-icon').textContent = '👍';\n    }\n}\n\n// === シェア機能 ===\nfunction shareProduct() {\n    if (navigator.share) {\n        navigator.share({\n            title: productData.name,\n            text: `${productData.name} - ¥${productData.price.toLocaleString()}`,\n            url: window.location.href\n        }).then(() => {\n            showNotification('シェアしました！', 'success');\n        }).catch((err) => {\n            console.log('シェアがキャンセルされました');\n        });\n    } else {\n        // フォールバック: クリップボードにコピー\n        const shareText = `${productData.name} - ¥${productData.price.toLocaleString()} ${window.location.href}`;\n        navigator.clipboard.writeText(shareText).then(() => {\n            showNotification('リンクをクリップボードにコピーしました！', 'success');\n        }).catch(() => {\n            showNotification('シェア機能がサポートされていません', 'error');\n        });\n    }\n}\n\n// === カート機能 ===\nfunction addToCart() {\n    if (productData.stock <= 0) {\n        showNotification('在庫切れです', 'error');\n        return;\n    }\n    \n    if (productData.quantity > productData.stock) {\n        showNotification('在庫数を超える数量は選択できません', 'error');\n        return;\n    }\n    \n    productData.cartQuantity += productData.quantity;\n    productData.stock -= productData.quantity;\n    productData.inCart = true;\n    \n    updateAllDisplays();\n    saveData();\n    \n    showNotification(`${productData.quantity}個をカートに追加しました！`, 'success');\n    \n    // カートボタンのアニメーション\n    elements.addToCartBtn.style.transform = 'scale(0.95)';\n    setTimeout(() => {\n        elements.addToCartBtn.style.transform = 'scale(1)';\n    }, 150);\n    \n    // 在庫アラート\n    checkStockLevel();\n}\n\nfunction buyNow() {\n    if (productData.stock <= 0) {\n        showNotification('在庫切れのため購入できません', 'error');\n        return;\n    }\n    \n    showNotification('購入手続きページに移動します...', 'success');\n    \n    // 実際のアプリケーションでは購入ページにリダイレクト\n    setTimeout(() => {\n        showNotification('デモ版では実際の購入はできません', 'warning');\n    }, 2000);\n}\n\n// === 数量管理 ===\nfunction increaseQuantity() {\n    if (productData.quantity < productData.stock) {\n        productData.quantity++;\n        updateQuantityDisplay();\n        saveData();\n    } else {\n        showNotification('在庫数を超える数量は選択できません', 'warning');\n    }\n}\n\nfunction decreaseQuantity() {\n    if (productData.quantity > 1) {\n        productData.quantity--;\n        updateQuantityDisplay();\n        saveData();\n    }\n}\n\nfunction updateQuantity() {\n    const value = parseInt(elements.quantityInput.value);\n    if (isNaN(value) || value < 1) {\n        productData.quantity = 1;\n    } else if (value > productData.stock) {\n        productData.quantity = productData.stock;\n        showNotification('在庫数を超える数量は選択できません', 'warning');\n    } else {\n        productData.quantity = value;\n    }\n    updateQuantityDisplay();\n    saveData();\n}\n\nfunction validateQuantityInput() {\n    const value = parseInt(elements.quantityInput.value);\n    if (value > productData.stock) {\n        elements.quantityInput.style.borderColor = 'var(--error-color)';\n    } else {\n        elements.quantityInput.style.borderColor = 'var(--border-color)';\n    }\n}\n\nfunction updateQuantityDisplay() {\n    elements.quantityInput.value = productData.quantity;\n    elements.quantityInput.max = productData.stock;\n    \n    // ボタンの状態更新\n    elements.qtyMinus.disabled = productData.quantity <= 1;\n    elements.qtyPlus.disabled = productData.quantity >= productData.stock;\n    \n    // カートボタンの状態更新\n    if (productData.stock <= 0) {\n        elements.addToCartBtn.disabled = true;\n        elements.addToCartBtn.querySelector('.btn-text').textContent = '在庫切れ';\n        elements.addToCartBtn.style.opacity = '0.6';\n    } else {\n        elements.addToCartBtn.disabled = false;\n        elements.addToCartBtn.querySelector('.btn-text').textContent = 'カートに追加';\n        elements.addToCartBtn.style.opacity = '1';\n    }\n}\n\n// === 詳細表示切り替え（Bootstrap Collapse対応） ===\nfunction toggleDetails() {\n    // Bootstrap Collapseインスタンスを取得または作成\n    const collapseElement = elements.detailsContent;\n    let collapseInstance = bootstrap.Collapse.getInstance(collapseElement);\n    \n    if (!collapseInstance) {\n        collapseInstance = new bootstrap.Collapse(collapseElement, {\n            toggle: false\n        });\n    }\n    \n    // Bootstrap CollapseのAPIを使用してトグル\n    collapseInstance.toggle();\n    \n    // イベントリスナーでボタンの状態を更新\n    collapseElement.addEventListener('shown.bs.collapse', function () {\n        elements.toggleDetails.classList.add('expanded');\n        elements.toggleDetails.setAttribute('aria-expanded', 'true');\n    });\n    \n    collapseElement.addEventListener('hidden.bs.collapse', function () {\n        elements.toggleDetails.classList.remove('expanded');\n        elements.toggleDetails.setAttribute('aria-expanded', 'false');\n    });\n}\n\n// === 表示更新 ===\nfunction updateAllDisplays() {\n    updatePriceDisplay();\n    updateStockDisplay();\n    updateCartDisplay();\n    updateLikeDisplay();\n    updateWishlistDisplay();\n    updateQuantityDisplay();\n}\n\nfunction updatePriceDisplay() {\n    elements.currentPrice.textContent = `¥${productData.price.toLocaleString()}`;\n    elements.originalPrice.textContent = `¥${productData.originalPrice.toLocaleString()}`;\n    \n    const discount = productData.originalPrice - productData.price;\n    elements.discountAmount.textContent = `¥${discount.toLocaleString()}お得`;\n    \n    // セールバッジの更新\n    const discountPercent = Math.round((discount / productData.originalPrice) * 100);\n    const saleBadge = document.getElementById('sale-badge');\n    if (saleBadge) {\n        saleBadge.textContent = `${discountPercent}% OFF`;\n    }\n}\n\nfunction updateStockDisplay() {\n    elements.stockCount.textContent = productData.stock;\n    \n    // Bootstrap進捗バーの更新\n    const stockPercentage = (productData.stock / productData.maxStock) * 100;\n    elements.stockFill.style.width = `${stockPercentage}%`;\n    elements.stockFill.setAttribute('aria-valuenow', productData.stock);\n    \n    // Bootstrap進捗バーの色クラスを更新\n    elements.stockFill.className = 'progress-bar';\n    \n    if (stockPercentage <= 20) {\n        elements.stockFill.classList.add('bg-danger');\n    } else if (stockPercentage <= 50) {\n        elements.stockFill.classList.add('bg-warning');\n    } else {\n        elements.stockFill.classList.add('bg-success');\n    }\n}\n\nfunction updateCartDisplay() {\n    elements.cartCount.textContent = productData.cartQuantity;\n    // Bootstrap badgeの表示制御\n    if (productData.cartQuantity > 0) {\n        elements.cartCount.style.display = 'inline-block';\n        elements.cartCount.classList.remove('d-none');\n    } else {\n        elements.cartCount.style.display = 'none';\n        elements.cartCount.classList.add('d-none');\n    }\n}\n\n// === 在庫アラート ===\nfunction checkStockLevel() {\n    if (productData.stock <= 3 && productData.stock > 0) {\n        showNotification('残りわずかです！お早めにどうぞ', 'warning');\n    } else if (productData.stock === 0) {\n        showNotification('在庫切れになりました', 'error');\n    }\n}\n\n// === 通知システム（Bootstrap Toast対応） ===\nfunction showNotification(message, type = 'success') {\n    const icons = {\n        success: '✅',\n        warning: '⚠️',\n        error: '❌',\n        info: 'ℹ️'\n    };\n    \n    // アイコンとメッセージを設定\n    elements.notificationIcon.textContent = icons[type] || icons.success;\n    elements.notificationMessage.textContent = message;\n    \n    // Bootstrap Toastの背景色をタイプに応じて変更\n    const toastElement = elements.notification;\n    toastElement.className = 'toast'; // リセット\n    \n    // タイプに応じたクラス追加\n    if (type === 'error') {\n        toastElement.classList.add('border-danger');\n        toastElement.querySelector('.toast-header').className = 'toast-header bg-danger text-white';\n    } else if (type === 'warning') {\n        toastElement.classList.add('border-warning');\n        toastElement.querySelector('.toast-header').className = 'toast-header bg-warning text-dark';\n    } else if (type === 'success') {\n        toastElement.classList.add('border-success');\n        toastElement.querySelector('.toast-header').className = 'toast-header bg-success text-white';\n    } else {\n        toastElement.classList.add('border-info');\n        toastElement.querySelector('.toast-header').className = 'toast-header bg-info text-white';\n    }\n    \n    // Bootstrap Toastインスタンスを取得または作成\n    let toastInstance = bootstrap.Toast.getInstance(toastElement);\n    if (!toastInstance) {\n        toastInstance = new bootstrap.Toast(toastElement, {\n            autohide: true,\n            delay: 3000\n        });\n    }\n    \n    // トーストを表示\n    toastInstance.show();\n}\n\nfunction hideNotification() {\n    // Bootstrap Toastインスタンスを使用して非表示\n    const toastInstance = bootstrap.Toast.getInstance(elements.notification);\n    if (toastInstance) {\n        toastInstance.hide();\n    }\n}\n\n// === データの保存と読み込み ===\nfunction saveData() {\n    try {\n        localStorage.setItem('productCardData', JSON.stringify({\n            likes: productData.likes,\n            liked: productData.liked,\n            cartQuantity: productData.cartQuantity,\n            stock: productData.stock,\n            wishlist: productData.wishlist,\n            quantity: productData.quantity,\n            inCart: productData.inCart\n        }));\n    } catch (error) {\n        console.error('データの保存に失敗しました:', error);\n    }\n}\n\nfunction loadSavedData() {\n    try {\n        const saved = localStorage.getItem('productCardData');\n        if (saved) {\n            const data = JSON.parse(saved);\n            Object.assign(productData, data);\n        }\n    } catch (error) {\n        console.error('データの読み込みに失敗しました:', error);\n    }\n}\n\n// === キーボードショートカット ===\nfunction handleKeyboardShortcuts(e) {\n    // Alt + L: いいね\n    if (e.altKey && e.key === 'l') {\n        e.preventDefault();\n        toggleLike();\n    }\n    \n    // Alt + C: カートに追加\n    if (e.altKey && e.key === 'c') {\n        e.preventDefault();\n        addToCart();\n    }\n    \n    // Alt + W: お気に入り\n    if (e.altKey && e.key === 'w') {\n        e.preventDefault();\n        toggleWishlist();\n    }\n    \n    // Alt + D: 詳細表示切り替え\n    if (e.altKey && e.key === 'd') {\n        e.preventDefault();\n        toggleDetails();\n    }\n    \n    // Escape: 通知を閉じる\n    if (e.key === 'Escape') {\n        hideNotification();\n    }\n}\n\n// === ユーティリティ関数 ===\n\n// 価格フォーマット\nfunction formatPrice(price) {\n    return new Intl.NumberFormat('ja-JP', {\n        style: 'currency',\n        currency: 'JPY'\n    }).format(price);\n}\n\n// 割引率計算\nfunction calculateDiscount(originalPrice, salePrice) {\n    const discount = ((originalPrice - salePrice) / originalPrice * 100).toFixed(0);\n    return `${discount}%OFF`;\n}\n\n// ランダムな商品データ生成（デモ用）\nfunction generateRandomProductData() {\n    const products = [\n        {\n            name: \"ワイヤレスイヤホン\",\n            price: 12800,\n            originalPrice: 16000\n        },\n        {\n            name: \"スマートウォッチ\",\n            price: 25600,\n            originalPrice: 32000\n        },\n        {\n            name: \"Bluetoothスピーカー\",\n            price: 8900,\n            originalPrice: 12000\n        }\n    ];\n    \n    return products[Math.floor(Math.random() * products.length)];\n}\n\n// === グローバル関数（デバッグ用） ===\nwindow.productCard = {\n    getData: () => productData,\n    setLikes: (count) => {\n        productData.likes = count;\n        updateLikeDisplay();\n        saveData();\n    },\n    setStock: (count) => {\n        productData.stock = Math.max(0, count);\n        productData.maxStock = Math.max(productData.maxStock, count);\n        updateAllDisplays();\n        saveData();\n    },\n    resetData: () => {\n        localStorage.removeItem('productCardData');\n        location.reload();\n    },\n    showDemo: () => {\n        console.log('🔥 利用可能な機能:');\n        console.log('- いいね機能: Alt + L');\n        console.log('- カート追加: Alt + C');  \n        console.log('- お気に入り: Alt + W');\n        console.log('- 詳細切替: Alt + D');\n        console.log('- データリセット: productCard.resetData()');\n    }\n};\n\n// 初期化完了メッセージ\nconsole.log('🎮 デバッグ用コマンド: productCard.showDemo()');\nconsole.log('💾 データの永続化: LocalStorage使用');\nconsole.log('⌨️ キーボードショートカット対応');"
    }
  },
  "expectedResult": {
    "bootstrapComponents": "Bootstrap Cardコンポーネントが適用される",
    "toastNotifications": "Bootstrap Toast通知システムが動作する",
    "accordionDetails": "Bootstrap Accordion詳細情報が動作する",
    "progressBars": "Bootstrap Progress Bar在庫表示が動作する",
    "responsiveGrid": "Bootstrapグリッドシステムでレスポンシブ対応される",
    "badgeSystem": "Bootstrap Badge動的表示が動作する",
    "behavior": "Bootstrap統合による効率的な商品カードが完成する"
  },
  "checks": [
    {
      "id": "doctype",
      "name": "DOCTYPE宣言",
      "type": "structure",
      "message": "DOCTYPE html宣言が必要です"
    },
    {
      "id": "html",
      "name": "<html>タグ",
      "type": "structure",
      "message": "<html>タグが必要です"
    },
    {
      "id": "head",
      "name": "<head>セクション",
      "type": "structure",
      "message": "<head>セクションが必要です"
    },
    {
      "id": "body",
      "name": "<body>セクション",
      "type": "structure",
      "message": "<body>セクションが必要です"
    },
    {
      "id": "title",
      "name": "<title>タグ",
      "type": "structure",
      "message": "<title>タグと内容が必要です"
    },
    {
      "id": "css-content",
      "name": "CSSスタイル",
      "type": "css",
      "message": "CSSでスタイルを設定してください"
    },
    {
      "id": "js-content",
      "name": "JavaScript",
      "type": "js",
      "message": "JavaScriptで動的な動作を実装してください"
    }
  ]
}
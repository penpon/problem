{
  "id": "ec-project-01",
  "title": "56: レスポンシブECシステム基盤",
  "description": "レスポンシブデザインを基盤とした本格的なECシステムの構築を開始します。モバイルファーストアプローチで設計します。",
  "category": "ec-project",
  "difficulty": 5,
  "instructions": [
    "モバイルファーストのレスポンシブデザインを実装してください",
    "Bootstrap 5のグリッドシステムを最大限活用してください",
    "複数デバイスでの表示確認を行ってください",
    "基本的なECサイト構造を構築してください"
  ],
  "files": {
    "html": {
      "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>課題実装</title>\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n    <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n    <div class=\"container\">\n        <h1>課題を実装してください</h1>\n        <!-- ここに実装してください -->\n    </div>\n    \n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\n    <script src=\"script.js\"></script>\n</body>\n</html>",
      "expected": "<!DOCTYPE html>\n<html lang=\"ja\" class=\"h-100\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\">\n    <title>ECommerce Pro - レスポンシブECシステム</title>\n    <meta name=\"description\" content=\"プロフェッショナルなレスポンシブECシステム - あらゆるデバイスで最適な体験を\">\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css\" rel=\"stylesheet\">\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n    <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body class=\"d-flex flex-column h-100\">\n    <!-- モバイル専用ヘッダー -->\n    <div class=\"mobile-header d-lg-none bg-primary text-white py-2\">\n        <div class=\"container-fluid\">\n            <div class=\"row align-items-center\">\n                <div class=\"col\">\n                    <button class=\"btn btn-link text-white p-0\" type=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#mobileMenu\">\n                        <i class=\"bi bi-list fs-4\"></i>\n                    </button>\n                </div>\n                <div class=\"col text-center\">\n                    <a href=\"#\" class=\"text-white text-decoration-none fw-bold\">ECommerce Pro</a>\n                </div>\n                <div class=\"col text-end\">\n                    <button class=\"btn btn-link text-white p-0 position-relative\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#mobileCart\">\n                        <i class=\"bi bi-bag fs-4\"></i>\n                        <span class=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-warning text-dark\" id=\"mobileCartCount\">0</span>\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n    \n    <!-- デスクトップナビゲーション -->\n    <nav class=\"navbar navbar-expand-lg navbar-light bg-white shadow-sm d-none d-lg-block\">\n        <div class=\"container\">\n            <a class=\"navbar-brand fw-bold text-primary fs-3\" href=\"#\">\n                <i class=\"bi bi-shop-window text-primary me-2\"></i>\n                ECommerce Pro\n            </a>\n            \n            <div class=\"navbar-nav ms-auto d-flex flex-row align-items-center\">\n                <form class=\"d-flex me-4\" style=\"width: 400px;\">\n                    <div class=\"input-group\">\n                        <input class=\"form-control\" type=\"search\" placeholder=\"商品を検索...\" id=\"searchInput\">\n                        <button class=\"btn btn-primary\" type=\"submit\">\n                            <i class=\"bi bi-search\"></i>\n                        </button>\n                    </div>\n                </form>\n                \n                <div class=\"d-flex align-items-center\">\n                    <button class=\"btn btn-outline-secondary me-2 position-relative\">\n                        <i class=\"bi bi-heart\"></i>\n                        <span class=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger\" id=\"wishlistCount\">0</span>\n                    </button>\n                    <button class=\"btn btn-primary position-relative\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#desktopCart\">\n                        <i class=\"bi bi-cart3 me-1\"></i>\n                        カート\n                        <span class=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-warning text-dark\" id=\"desktopCartCount\">0</span>\n                    </button>\n                </div>\n            </div>\n        </div>\n    </nav>\n    \n    <!-- カテゴリナビゲーション（デスクトップ） -->\n    <div class=\"bg-light border-bottom d-none d-lg-block\">\n        <div class=\"container\">\n            <nav class=\"navbar navbar-expand p-0\">\n                <ul class=\"navbar-nav\">\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link text-dark fw-medium\" href=\"#\">すべて</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link text-dark\" href=\"#\">ファッション</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link text-dark\" href=\"#\">電子機器</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link text-dark\" href=\"#\">ホーム&ガーデン</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link text-dark\" href=\"#\">スポーツ</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link text-danger fw-medium\" href=\"#\">🔥 セール</a>\n                    </li>\n                </ul>\n            </nav>\n        </div>\n    </div>\n    \n    <!-- メインコンテンツ -->\n    <main class=\"flex-shrink-0\">\n        <!-- ヒーローセクション -->\n        <section class=\"hero-section bg-primary text-white py-5\">\n            <div class=\"container\">\n                <div class=\"row align-items-center\">\n                    <div class=\"col-lg-6 mb-4 mb-lg-0\">\n                        <h1 class=\"display-4 fw-bold mb-3\">レスポンシブECシステム</h1>\n                        <p class=\"lead mb-4\">あらゆるデバイスで最適な体験を提供する次世代ECプラットフォーム</p>\n                        <div class=\"d-flex flex-column flex-sm-row gap-3\">\n                            <button class=\"btn btn-warning btn-lg px-4\">今すぐショッピング</button>\n                            <button class=\"btn btn-outline-light btn-lg px-4\">カタログを見る</button>\n                        </div>\n                    </div>\n                    <div class=\"col-lg-6 text-center\">\n                        <div class=\"responsive-demo\">\n                            <div class=\"device-stack\">\n                                <div class=\"device desktop\"></div>\n                                <div class=\"device tablet\"></div>\n                                <div class=\"device mobile\"></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n        \n        <!-- 商品グリッド -->\n        <section class=\"py-5\">\n            <div class=\"container\">\n                <div class=\"row mb-4\">\n                    <div class=\"col-12 text-center\">\n                        <h2 class=\"display-6 fw-bold mb-3\">おすすめ商品</h2>\n                        <p class=\"text-muted\">デバイスサイズに応じて最適化された商品表示</p>\n                    </div>\n                </div>\n                \n                <!-- レスポンシブ商品グリッド -->\n                <div class=\"row g-3 g-md-4\" id=\"productGrid\">\n                    <!-- JavaScript で生成される商品カード -->\n                </div>\n                \n                <!-- 読み込みもっと見る -->\n                <div class=\"text-center mt-5\">\n                    <button class=\"btn btn-primary btn-lg\" id=\"loadMoreBtn\">\n                        <span class=\"spinner-border spinner-border-sm me-2\" role=\"status\" style=\"display: none;\"></span>\n                        もっと見る\n                    </button>\n                </div>\n            </div>\n        </section>\n        \n        <!-- レスポンシブ機能紹介 -->\n        <section class=\"py-5 bg-light\">\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-12 text-center mb-5\">\n                        <h2 class=\"display-6 fw-bold\">レスポンシブ機能</h2>\n                        <p class=\"text-muted\">すべてのデバイスで完璧な体験を</p>\n                    </div>\n                </div>\n                <div class=\"row g-4\">\n                    <div class=\"col-lg-4 col-md-6\">\n                        <div class=\"card border-0 h-100 text-center\">\n                            <div class=\"card-body\">\n                                <div class=\"bg-primary text-white rounded-circle d-inline-flex align-items-center justify-content-center mb-3\" style=\"width: 80px; height: 80px;\">\n                                    <i class=\"bi bi-phone fs-2\"></i>\n                                </div>\n                                <h4 class=\"fw-bold\">モバイル最適化</h4>\n                                <p class=\"text-muted\">スマートフォンでの操作性を最優先に設計</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-lg-4 col-md-6\">\n                        <div class=\"card border-0 h-100 text-center\">\n                            <div class=\"card-body\">\n                                <div class=\"bg-success text-white rounded-circle d-inline-flex align-items-center justify-content-center mb-3\" style=\"width: 80px; height: 80px;\">\n                                    <i class=\"bi bi-tablet fs-2\"></i>\n                                </div>\n                                <h4 class=\"fw-bold\">タブレット対応</h4>\n                                <p class=\"text-muted\">タブレット特有のタッチ操作に最適化</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-lg-4 col-md-6\">\n                        <div class=\"card border-0 h-100 text-center\">\n                            <div class=\"card-body\">\n                                <div class=\"bg-info text-white rounded-circle d-inline-flex align-items-center justify-content-center mb-3\" style=\"width: 80px; height: 80px;\">\n                                    <i class=\"bi bi-display fs-2\"></i>\n                                </div>\n                                <h4 class=\"fw-bold\">デスクトップ</h4>\n                                <p class=\"text-muted\">大画面での豊富な情報表示と操作性</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    </main>\n    \n    <!-- モバイルメニューオフキャンバス -->\n    <div class=\"offcanvas offcanvas-start\" tabindex=\"-1\" id=\"mobileMenu\">\n        <div class=\"offcanvas-header bg-primary text-white\">\n            <h5 class=\"offcanvas-title\">メニュー</h5>\n            <button type=\"button\" class=\"btn-close btn-close-white\" data-bs-dismiss=\"offcanvas\"></button>\n        </div>\n        <div class=\"offcanvas-body p-0\">\n            <nav class=\"nav flex-column\">\n                <a class=\"nav-link border-bottom py-3\" href=\"#\">すべての商品</a>\n                <a class=\"nav-link border-bottom py-3\" href=\"#\">ファッション</a>\n                <a class=\"nav-link border-bottom py-3\" href=\"#\">電子機器</a>\n                <a class=\"nav-link border-bottom py-3\" href=\"#\">ホーム&ガーデン</a>\n                <a class=\"nav-link border-bottom py-3\" href=\"#\">スポーツ</a>\n                <a class=\"nav-link border-bottom py-3 text-danger\" href=\"#\">🔥 セール商品</a>\n            </nav>\n            <div class=\"p-3 border-top mt-auto\">\n                <div class=\"d-grid gap-2\">\n                    <button class=\"btn btn-primary\">ログイン</button>\n                    <button class=\"btn btn-outline-primary\">新規登録</button>\n                </div>\n            </div>\n        </div>\n    </div>\n    \n    <!-- カートオフキャンバス -->\n    <div class=\"offcanvas offcanvas-end\" tabindex=\"-1\" id=\"desktopCart\">\n        <div class=\"offcanvas-header bg-primary text-white\">\n            <h5 class=\"offcanvas-title\">ショッピングカート</h5>\n            <button type=\"button\" class=\"btn-close btn-close-white\" data-bs-dismiss=\"offcanvas\"></button>\n        </div>\n        <div class=\"offcanvas-body\">\n            <div id=\"cartItems\">\n                <div class=\"text-center text-muted py-5\">\n                    <i class=\"bi bi-cart-x display-4 mb-3\"></i>\n                    <p>カートは空です</p>\n                </div>\n            </div>\n        </div>\n        <div class=\"offcanvas-footer border-top p-3\">\n            <div class=\"d-flex justify-content-between mb-3\">\n                <strong>合計: <span id=\"cartTotal\">¥0</span></strong>\n            </div>\n            <div class=\"d-grid\">\n                <button class=\"btn btn-primary btn-lg\">レジに進む</button>\n            </div>\n        </div>\n    </div>\n    \n    <!-- モバイルカートオフキャンバス -->\n    <div class=\"offcanvas offcanvas-bottom\" tabindex=\"-1\" id=\"mobileCart\">\n        <div class=\"offcanvas-header\">\n            <h5 class=\"offcanvas-title\">カート</h5>\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"offcanvas\"></button>\n        </div>\n        <div class=\"offcanvas-body small\">\n            <!-- カート内容はJavaScriptで制御 -->\n        </div>\n    </div>\n    \n    <!-- フッター -->\n    <footer class=\"bg-dark text-light mt-auto\">\n        <div class=\"container py-4\">\n            <div class=\"row\">\n                <div class=\"col-lg-3 col-md-6 mb-3\">\n                    <h5 class=\"text-primary\">ECommerce Pro</h5>\n                    <p class=\"small\">あらゆるデバイスで最適な体験を提供するECプラットフォーム</p>\n                </div>\n                <div class=\"col-lg-3 col-md-6 mb-3\">\n                    <h6 class=\"text-uppercase\">ショップ</h6>\n                    <ul class=\"list-unstyled small\">\n                        <li><a href=\"#\" class=\"text-light text-decoration-none\">すべての商品</a></li>\n                        <li><a href=\"#\" class=\"text-light text-decoration-none\">新着商品</a></li>\n                        <li><a href=\"#\" class=\"text-light text-decoration-none\">セール</a></li>\n                    </ul>\n                </div>\n                <div class=\"col-lg-3 col-md-6 mb-3\">\n                    <h6 class=\"text-uppercase\">サポート</h6>\n                    <ul class=\"list-unstyled small\">\n                        <li><a href=\"#\" class=\"text-light text-decoration-none\">お問い合わせ</a></li>\n                        <li><a href=\"#\" class=\"text-light text-decoration-none\">配送について</a></li>\n                        <li><a href=\"#\" class=\"text-light text-decoration-none\">返品・交換</a></li>\n                    </ul>\n                </div>\n                <div class=\"col-lg-3 col-md-6 mb-3\">\n                    <h6 class=\"text-uppercase\">フォローする</h6>\n                    <div class=\"d-flex\">\n                        <a href=\"#\" class=\"text-light me-3\"><i class=\"bi bi-facebook fs-5\"></i></a>\n                        <a href=\"#\" class=\"text-light me-3\"><i class=\"bi bi-twitter fs-5\"></i></a>\n                        <a href=\"#\" class=\"text-light me-3\"><i class=\"bi bi-instagram fs-5\"></i></a>\n                    </div>\n                </div>\n            </div>\n            <hr class=\"my-3\">\n            <div class=\"row align-items-center\">\n                <div class=\"col-md-6\">\n                    <small>&copy; 2024 ECommerce Pro. All rights reserved.</small>\n                </div>\n                <div class=\"col-md-6 text-end\">\n                    <small>Responsive Design by Bootstrap 5</small>\n                </div>\n            </div>\n        </div>\n    </footer>\n    \n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\n    <script src=\"script.js\"></script>\n</body>\n</html>"
    },
    "css": {
      "template": "/* 基本的なスタイル */\nbody {\n    font-family: Arial, sans-serif;\n    margin: 40px;\n    background: #f5f5f5;\n}\n\n.container {\n    max-width: 800px;\n    margin: 0 auto;\n    background: white;\n    padding: 20px;\n    border-radius: 10px;\n    box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n}\n\n/* ここに実装してください */",
      "expected": "/* レスポンシブECシステム - プロフェッショナルCSS */\n\n/* フォント設定 */\nbody {\n    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    line-height: 1.6;\n    overflow-x: hidden;\n}\n\n/* カスタムプロパティ */\n:root {\n    --primary-color: #0d6efd;\n    --secondary-color: #6c757d;\n    --success-color: #198754;\n    --danger-color: #dc3545;\n    --warning-color: #ffc107;\n    --info-color: #0dcaf0;\n    --light-color: #f8f9fa;\n    --dark-color: #212529;\n    --border-radius: 0.5rem;\n    --box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\n    --box-shadow-lg: 0 1rem 3rem rgba(0, 0, 0, 0.175);\n    --transition: all 0.3s ease-in-out;\n}\n\n/* ヒーローセクション */\n.hero-section {\n    background: linear-gradient(135deg, var(--primary-color) 0%, #0056b3 100%);\n    position: relative;\n    overflow: hidden;\n}\n\n.hero-section::before {\n    content: '';\n    position: absolute;\n    top: -50%;\n    right: -50%;\n    width: 100%;\n    height: 200%;\n    background: url('data:image/svg+xml,<svg width=\"60\" height=\"60\" viewBox=\"0 0 60 60\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fill-rule=\"evenodd\"><g fill=\"%23ffffff\" fill-opacity=\"0.05\"><polygon points=\"36 18 48 30 36 42 24 30\"/></g></g></svg>');\n    transform: rotate(45deg);\n}\n\n/* レスポンシブデモ */\n.responsive-demo {\n    position: relative;\n    height: 300px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.device-stack {\n    position: relative;\n    width: 300px;\n    height: 200px;\n}\n\n.device {\n    position: absolute;\n    background: rgba(255, 255, 255, 0.1);\n    border: 2px solid rgba(255, 255, 255, 0.3);\n    border-radius: var(--border-radius);\n    transition: var(--transition);\n}\n\n.device.desktop {\n    width: 200px;\n    height: 120px;\n    top: 0;\n    left: 0;\n    border-radius: 8px 8px 0 0;\n}\n\n.device.desktop::after {\n    content: '';\n    position: absolute;\n    bottom: -15px;\n    left: 50%;\n    transform: translateX(-50%);\n    width: 100px;\n    height: 15px;\n    background: rgba(255, 255, 255, 0.2);\n    border-radius: 0 0 8px 8px;\n}\n\n.device.tablet {\n    width: 140px;\n    height: 200px;\n    top: 20px;\n    left: 80px;\n    border-radius: 12px;\n}\n\n.device.mobile {\n    width: 80px;\n    height: 150px;\n    top: 30px;\n    left: 160px;\n    border-radius: 18px;\n}\n\n.device-stack:hover .device.desktop {\n    transform: translateX(-10px) rotate(-2deg);\n}\n\n.device-stack:hover .device.tablet {\n    transform: translateY(-5px) rotate(1deg);\n}\n\n.device-stack:hover .device.mobile {\n    transform: translateX(10px) rotate(-1deg);\n}\n\n/* モバイルヘッダー */\n.mobile-header {\n    position: sticky;\n    top: 0;\n    z-index: 1030;\n    backdrop-filter: blur(10px);\n}\n\n/* カード */\n.card {\n    border: none;\n    border-radius: var(--border-radius);\n    box-shadow: var(--box-shadow);\n    transition: var(--transition);\n    overflow: hidden;\n}\n\n.card:hover {\n    transform: translateY(-4px);\n    box-shadow: var(--box-shadow-lg);\n}\n\n.card-img-top {\n    transition: var(--transition);\n    height: 200px;\n    object-fit: cover;\n}\n\n.card:hover .card-img-top {\n    transform: scale(1.05);\n}\n\n/* 商品カード */\n.product-card {\n    position: relative;\n}\n\n.product-badge {\n    position: absolute;\n    top: 0.75rem;\n    left: 0.75rem;\n    z-index: 10;\n    border-radius: 1rem;\n    padding: 0.25rem 0.75rem;\n    font-size: 0.75rem;\n    font-weight: 600;\n    text-transform: uppercase;\n}\n\n.product-actions {\n    position: absolute;\n    top: 0.75rem;\n    right: 0.75rem;\n    z-index: 10;\n    opacity: 0;\n    transition: var(--transition);\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n}\n\n.product-card:hover .product-actions {\n    opacity: 1;\n}\n\n/* ボタン */\n.btn {\n    border-radius: var(--border-radius);\n    font-weight: 500;\n    transition: var(--transition);\n    position: relative;\n    overflow: hidden;\n}\n\n.btn::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\n    transition: var(--transition);\n}\n\n.btn:hover::before {\n    left: 100%;\n}\n\n.btn:hover {\n    transform: translateY(-1px);\n}\n\n/* オフキャンバス */\n.offcanvas {\n    border: none;\n    box-shadow: var(--box-shadow-lg);\n}\n\n.offcanvas-start {\n    border-radius: 0 var(--border-radius) var(--border-radius) 0;\n}\n\n.offcanvas-end {\n    border-radius: var(--border-radius) 0 0 var(--border-radius);\n}\n\n.offcanvas-bottom {\n    border-radius: var(--border-radius) var(--border-radius) 0 0;\n    max-height: 70vh;\n}\n\n/* ナビゲーション */\n.navbar-brand {\n    font-weight: 700;\n    letter-spacing: -0.025em;\n}\n\n.nav-link {\n    font-weight: 500;\n    transition: var(--transition);\n    position: relative;\n}\n\n.nav-link:hover {\n    color: var(--primary-color) !important;\n}\n\n.nav-link::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 0;\n    height: 2px;\n    background-color: var(--primary-color);\n    transition: var(--transition);\n}\n\n.nav-link:hover::after {\n    width: 100%;\n}\n\n/* フォーム */\n.form-control {\n    border-radius: var(--border-radius);\n    border: 1px solid #dee2e6;\n    transition: var(--transition);\n}\n\n.form-control:focus {\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.25);\n}\n\n.input-group .btn {\n    border-radius: 0 var(--border-radius) var(--border-radius) 0;\n}\n\n.input-group .form-control {\n    border-radius: var(--border-radius) 0 0 var(--border-radius);\n}\n\n/* バッジ */\n.badge {\n    font-size: 0.6em;\n    padding: 0.35em 0.65em;\n}\n\n/* レスポンシブユーティリティ */\n@media (max-width: 575.98px) {\n    .display-4 {\n        font-size: 2rem;\n    }\n    \n    .display-6 {\n        font-size: 1.5rem;\n    }\n    \n    .card-img-top {\n        height: 150px;\n    }\n    \n    .btn-lg {\n        padding: 0.75rem 1.5rem;\n        font-size: 1rem;\n    }\n    \n    .hero-section {\n        padding: 3rem 0 !important;\n    }\n    \n    .device-stack {\n        width: 250px;\n        height: 160px;\n    }\n    \n    .device.desktop {\n        width: 160px;\n        height: 96px;\n    }\n    \n    .device.tablet {\n        width: 112px;\n        height: 160px;\n    }\n    \n    .device.mobile {\n        width: 64px;\n        height: 120px;\n    }\n}\n\n@media (min-width: 576px) and (max-width: 767.98px) {\n    .card-img-top {\n        height: 180px;\n    }\n}\n\n@media (min-width: 768px) and (max-width: 991.98px) {\n    .card-img-top {\n        height: 200px;\n    }\n}\n\n@media (min-width: 992px) {\n    .card-img-top {\n        height: 220px;\n    }\n    \n    .hero-section {\n        padding: 5rem 0 !important;\n    }\n}\n\n@media (min-width: 1200px) {\n    .card-img-top {\n        height: 250px;\n    }\n}\n\n/* プリント用スタイル */\n@media print {\n    .mobile-header,\n    .navbar,\n    .offcanvas,\n    .btn,\n    footer {\n        display: none !important;\n    }\n    \n    .container {\n        max-width: none !important;\n        margin: 0;\n        padding: 0;\n    }\n    \n    .card {\n        page-break-inside: avoid;\n    }\n}\n\n/* 高コントラストモード */\n@media (prefers-contrast: high) {\n    .card {\n        border: 2px solid var(--dark-color);\n    }\n    \n    .btn {\n        border: 2px solid;\n    }\n}\n\n/* アニメーション無効化 */\n@media (prefers-reduced-motion: reduce) {\n    * {\n        animation-duration: 0.01ms !important;\n        animation-iteration-count: 1 !important;\n        transition-duration: 0.01ms !important;\n    }\n}\n\n/* フォーカス表示の改善 */\n.btn:focus,\n.form-control:focus,\n.nav-link:focus {\n    outline: 2px solid var(--primary-color);\n    outline-offset: 2px;\n}\n\n/* スクロールバーカスタマイズ */\n::-webkit-scrollbar {\n    width: 8px;\n    height: 8px;\n}\n\n::-webkit-scrollbar-track {\n    background: var(--light-color);\n    border-radius: 4px;\n}\n\n::-webkit-scrollbar-thumb {\n    background: var(--secondary-color);\n    border-radius: 4px;\n}\n\n::-webkit-scrollbar-thumb:hover {\n    background: var(--primary-color);\n}\n\n/* カスタムアニメーション */\n@keyframes fadeInUp {\n    from {\n        opacity: 0;\n        transform: translateY(30px);\n    }\n    to {\n        opacity: 1;\n        transform: translateY(0);\n    }\n}\n\n@keyframes slideInLeft {\n    from {\n        opacity: 0;\n        transform: translateX(-30px);\n    }\n    to {\n        opacity: 1;\n        transform: translateX(0);\n    }\n}\n\n@keyframes pulse {\n    0%, 100% {\n        transform: scale(1);\n    }\n    50% {\n        transform: scale(1.02);\n    }\n}\n\n.animate-fade-in {\n    animation: fadeInUp 0.6s ease-out;\n}\n\n.animate-slide-in {\n    animation: slideInLeft 0.6s ease-out;\n}\n\n.animate-pulse:hover {\n    animation: pulse 1s infinite;\n}\n\n/* レイアウトシフト防止 */\n.card-img-top {\n    width: 100%;\n    aspect-ratio: 4/3;\n}\n\n.device {\n    will-change: transform;\n}\n\n/* パフォーマンス最適化 */\n.hero-section,\n.card,\n.btn {\n    transform: translateZ(0);\n    backface-visibility: hidden;\n}\n\n/* アクセシビリティ向上 */\n.visually-hidden-focusable:focus {\n    position: static !important;\n    width: auto !important;\n    height: auto !important;\n    margin: 0 !important;\n    overflow: visible !important;\n    clip: auto !important;\n    white-space: normal !important;\n}"
    },
    "js": {
      "template": "// JavaScript実装エリア\n\n// ここに実装してください\nconsole.log('課題実装を開始してください');",
      "expected": "// レスポンシブECシステム - メインJavaScript\n\n// システム設定\nconst SYSTEM_CONFIG = {\n    version: '1.0.0',\n    breakpoints: {\n        xs: 0,\n        sm: 576,\n        md: 768,\n        lg: 992,\n        xl: 1200,\n        xxl: 1400\n    },\n    itemsPerPage: {\n        mobile: 6,\n        tablet: 8,\n        desktop: 12\n    },\n    loadMoreIncrement: 6\n};\n\n// グローバル変数\nlet currentPage = 1;\nlet isLoading = false;\nlet cart = [];\nlet wishlist = [];\nlet currentViewport = 'desktop';\n\n// 商品データベース\nconst PRODUCT_DATABASE = [\n    {\n        id: 1,\n        name: 'レスポンシブスマートウォッチ',\n        price: 29800,\n        originalPrice: 34800,\n        category: 'electronics',\n        image: 'https://via.placeholder.com/300x225/007bff/white?text=Smart+Watch',\n        rating: 4.5,\n        reviews: 128,\n        badge: 'SALE',\n        inStock: true,\n        description: '全デバイス対応のスマートウォッチ'\n    },\n    {\n        id: 2,\n        name: 'アダプティブ ワークシャツ',\n        price: 5980,\n        category: 'fashion',\n        image: 'https://via.placeholder.com/300x225/28a745/white?text=Work+Shirt',\n        rating: 4.3,\n        reviews: 89,\n        badge: 'NEW',\n        inStock: true,\n        description: 'どんなシーンにも対応するシャツ'\n    },\n    {\n        id: 3,\n        name: 'フレキシブル ノートPCスタンド',\n        price: 3200,\n        originalPrice: 4200,\n        category: 'electronics',\n        image: 'https://via.placeholder.com/300x225/6f42c1/white?text=PC+Stand',\n        rating: 4.7,\n        reviews: 234,\n        badge: 'HOT',\n        inStock: true,\n        description: 'あらゆる角度に調整可能'\n    },\n    {\n        id: 4,\n        name: 'マルチフィット ランニングシューズ',\n        price: 12800,\n        category: 'sports',\n        image: 'https://via.placeholder.com/300x225/dc3545/white?text=Running+Shoes',\n        rating: 4.6,\n        reviews: 156,\n        badge: 'PREMIUM',\n        inStock: true,\n        description: '全地形対応ランニングシューズ'\n    },\n    {\n        id: 5,\n        name: 'アダプティブ ホームスピーカー',\n        price: 15600,\n        category: 'electronics',\n        image: 'https://via.placeholder.com/300x225/fd7e14/white?text=Speaker',\n        rating: 4.4,\n        reviews: 203,\n        badge: null,\n        inStock: true,\n        description: 'スマートホーム統合スピーカー'\n    },\n    {\n        id: 6,\n        name: 'レスポンシブ キーボード',\n        price: 8900,\n        category: 'electronics',\n        image: 'https://via.placeholder.com/300x225/20c997/white?text=Keyboard',\n        rating: 4.8,\n        reviews: 167,\n        badge: 'RECOMMENDED',\n        inStock: false,\n        description: 'あらゆるデバイスに接続可能'\n    }\n];\n\n// DOM読み込み完了時の初期化\ndocument.addEventListener('DOMContentLoaded', function() {\n    console.log('🚀 レスポンシブECシステム v' + SYSTEM_CONFIG.version + ' 開始');\n    \n    initializeSystem();\n    \n    console.log('✅ システム初期化完了');\n});\n\n// システム初期化\nfunction initializeSystem() {\n    // ビューポート検出とリサイズ監視\n    detectViewport();\n    window.addEventListener('resize', debounce(handleResize, 250));\n    \n    // 商品グリッドの初期レンダリング\n    renderProductGrid();\n    \n    // イベントリスナー設定\n    setupEventListeners();\n    \n    // Bootstrap コンポーネント初期化\n    initializeBootstrapComponents();\n    \n    // パフォーマンス監視開始\n    startPerformanceMonitoring();\n    \n    // ローカルストレージからデータ読み込み\n    loadUserData();\n    \n    // UI更新\n    updateCartDisplay();\n    updateWishlistDisplay();\n}\n\n// ビューポート検出\nfunction detectViewport() {\n    const width = window.innerWidth;\n    \n    if (width < SYSTEM_CONFIG.breakpoints.sm) {\n        currentViewport = 'mobile';\n    } else if (width < SYSTEM_CONFIG.breakpoints.lg) {\n        currentViewport = 'tablet';\n    } else {\n        currentViewport = 'desktop';\n    }\n    \n    document.body.setAttribute('data-viewport', currentViewport);\n    console.log(`📱 現在のビューポート: ${currentViewport} (${width}px)`);\n}\n\n// リサイズ処理\nfunction handleResize() {\n    const oldViewport = currentViewport;\n    detectViewport();\n    \n    if (oldViewport !== currentViewport) {\n        console.log(`📱 ビューポート変更: ${oldViewport} → ${currentViewport}`);\n        \n        // ビューポート変更時の処理\n        renderProductGrid();\n        adjustUIForViewport();\n        \n        // カスタムイベント発火\n        window.dispatchEvent(new CustomEvent('viewportChanged', {\n            detail: {\n                from: oldViewport,\n                to: currentViewport\n            }\n        }));\n    }\n}\n\n// ビューポート別UI調整\nfunction adjustUIForViewport() {\n    const productGrid = document.getElementById('productGrid');\n    if (!productGrid) return;\n    \n    // グリッドクラスの調整\n    const cards = productGrid.querySelectorAll('.col');\n    cards.forEach(card => {\n        // 既存のBootstrapクラスを削除\n        card.className = card.className.replace(/col-\\w*-?\\d*/g, '');\n        \n        // ビューポートに応じたクラスを追加\n        switch(currentViewport) {\n            case 'mobile':\n                card.classList.add('col-6'); // モバイルは2列\n                break;\n            case 'tablet':\n                card.classList.add('col-md-4'); // タブレットは3列\n                break;\n            case 'desktop':\n            default:\n                card.classList.add('col-lg-3'); // デスクトップは4列\n                break;\n        }\n    });\n}\n\n// 商品グリッドレンダリング\nfunction renderProductGrid() {\n    const container = document.getElementById('productGrid');\n    if (!container) return;\n    \n    const itemsToShow = getItemsPerPage();\n    const products = PRODUCT_DATABASE.slice(0, currentPage * itemsToShow);\n    \n    container.innerHTML = products.map(product => generateProductCard(product)).join('');\n    \n    // レスポンシブクラスの適用\n    setTimeout(() => {\n        adjustUIForViewport();\n        addProductCardAnimations();\n    }, 50);\n    \n    // 「もっと見る」ボタンの状態更新\n    updateLoadMoreButton();\n    \n    console.log(`🛍️ 商品 ${products.length}件 を ${currentViewport} ビューでレンダリング`);\n}\n\n// ビューポート別アイテム数取得\nfunction getItemsPerPage() {\n    return SYSTEM_CONFIG.itemsPerPage[currentViewport] || SYSTEM_CONFIG.itemsPerPage.desktop;\n}\n\n// 商品カード生成\nfunction generateProductCard(product) {\n    const isInCart = cart.some(item => item.id === product.id);\n    const isInWishlist = wishlist.some(item => item.id === product.id);\n    const discountPercent = product.originalPrice ? \n        Math.round((product.originalPrice - product.price) / product.originalPrice * 100) : 0;\n    \n    return `\n        <div class=\"col product-card-container animate-fade-in\">\n            <div class=\"card product-card h-100\">\n                ${product.badge ? `<span class=\"badge bg-${getBadgeColor(product.badge)} product-badge\">${product.badge}</span>` : ''}\n                \n                <div class=\"product-actions\">\n                    <button class=\"btn btn-light btn-sm rounded-circle\" \n                            onclick=\"toggleWishlist(${product.id})\" \n                            title=\"ウィッシュリストに追加\">\n                        <i class=\"bi bi-heart${isInWishlist ? '-fill text-danger' : ''}\"></i>\n                    </button>\n                    <button class=\"btn btn-light btn-sm rounded-circle\" \n                            onclick=\"quickView(${product.id})\" \n                            title=\"クイックビュー\">\n                        <i class=\"bi bi-eye\"></i>\n                    </button>\n                </div>\n                \n                <img src=\"${product.image}\" \n                     class=\"card-img-top\" \n                     alt=\"${product.name}\" \n                     loading=\"lazy\">\n                \n                <div class=\"card-body d-flex flex-column\">\n                    <h5 class=\"card-title\">${product.name}</h5>\n                    <p class=\"card-text text-muted small flex-grow-1\">${product.description}</p>\n                    \n                    <div class=\"rating-reviews mb-2\">\n                        <div class=\"d-flex align-items-center\">\n                            ${generateStarRating(product.rating)}\n                            <small class=\"text-muted ms-2\">(${product.reviews})</small>\n                        </div>\n                    </div>\n                    \n                    <div class=\"price-section mb-3\">\n                        ${product.originalPrice ? \n                            `<span class=\"text-decoration-line-through text-muted small me-2\">¥${product.originalPrice.toLocaleString()}</span>\n                             <span class=\"badge bg-danger small me-2\">${discountPercent}% OFF</span><br>` : ''}\n                        <span class=\"h6 text-primary mb-0\">¥${product.price.toLocaleString()}</span>\n                    </div>\n                    \n                    <div class=\"d-grid\">\n                        <button class=\"btn ${product.inStock ? 'btn-primary' : 'btn-secondary'} btn-sm\" \n                                onclick=\"addToCart(${product.id})\" \n                                ${!product.inStock ? 'disabled' : ''}>\n                            <i class=\"bi bi-cart-plus\"></i> \n                            ${!product.inStock ? '在庫切れ' : \n                              isInCart ? 'カート追加済' : 'カートに追加'}\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `;\n}\n\n// 星評価生成\nfunction generateStarRating(rating) {\n    const fullStars = Math.floor(rating);\n    const hasHalfStar = rating % 1 !== 0;\n    const emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);\n    \n    let stars = '';\n    \n    for (let i = 0; i < fullStars; i++) {\n        stars += '<i class=\"bi bi-star-fill text-warning\"></i>';\n    }\n    \n    if (hasHalfStar) {\n        stars += '<i class=\"bi bi-star-half text-warning\"></i>';\n    }\n    \n    for (let i = 0; i < emptyStars; i++) {\n        stars += '<i class=\"bi bi-star text-muted\"></i>';\n    }\n    \n    return stars;\n}\n\n// バッジ色取得\nfunction getBadgeColor(badge) {\n    const colorMap = {\n        'SALE': 'danger',\n        'NEW': 'success',\n        'HOT': 'warning',\n        'PREMIUM': 'info',\n        'RECOMMENDED': 'primary'\n    };\n    return colorMap[badge] || 'secondary';\n}\n\n// 商品カードアニメーション追加\nfunction addProductCardAnimations() {\n    const cards = document.querySelectorAll('.product-card-container');\n    cards.forEach((card, index) => {\n        card.style.animationDelay = `${index * 0.1}s`;\n    });\n}\n\n// イベントリスナー設定\nfunction setupEventListeners() {\n    // 「もっと見る」ボタン\n    const loadMoreBtn = document.getElementById('loadMoreBtn');\n    if (loadMoreBtn) {\n        loadMoreBtn.addEventListener('click', loadMoreProducts);\n    }\n    \n    // 検索機能\n    const searchInput = document.getElementById('searchInput');\n    if (searchInput) {\n        searchInput.addEventListener('input', debounce(handleSearch, 300));\n    }\n    \n    // スクロール監視（無限スクロール）\n    if (currentViewport === 'mobile') {\n        window.addEventListener('scroll', throttle(handleScroll, 100));\n    }\n    \n    console.log('📡 イベントリスナー設定完了');\n}\n\n// もっと見る機能\nfunction loadMoreProducts() {\n    if (isLoading) return;\n    \n    isLoading = true;\n    const btn = document.getElementById('loadMoreBtn');\n    const spinner = btn.querySelector('.spinner-border');\n    \n    // ローディング状態表示\n    btn.disabled = true;\n    spinner.style.display = 'inline-block';\n    \n    // 実際の読み込み処理（アニメーション用の遅延）\n    setTimeout(() => {\n        currentPage++;\n        renderProductGrid();\n        \n        // ローディング状態解除\n        isLoading = false;\n        btn.disabled = false;\n        spinner.style.display = 'none';\n        \n        console.log(`📄 ページ ${currentPage} を読み込み`);\n    }, 500);\n}\n\n// もっと見るボタンの状態更新\nfunction updateLoadMoreButton() {\n    const btn = document.getElementById('loadMoreBtn');\n    if (!btn) return;\n    \n    const totalShown = currentPage * getItemsPerPage();\n    const hasMore = totalShown < PRODUCT_DATABASE.length;\n    \n    if (!hasMore) {\n        btn.style.display = 'none';\n    } else {\n        btn.style.display = 'inline-block';\n    }\n}\n\n// 検索処理\nfunction handleSearch(event) {\n    const query = event.target.value.toLowerCase().trim();\n    \n    if (!query) {\n        renderProductGrid();\n        return;\n    }\n    \n    const results = PRODUCT_DATABASE.filter(product => \n        product.name.toLowerCase().includes(query) ||\n        product.description.toLowerCase().includes(query) ||\n        product.category.toLowerCase().includes(query)\n    );\n    \n    const container = document.getElementById('productGrid');\n    if (container) {\n        if (results.length === 0) {\n            container.innerHTML = `\n                <div class=\"col-12 text-center py-5\">\n                    <i class=\"bi bi-search display-1 text-muted mb-3\"></i>\n                    <h3 class=\"text-muted\">検索結果が見つかりません</h3>\n                    <p class=\"text-muted\">「${query}」に一致する商品がありませんでした。</p>\n                </div>\n            `;\n        } else {\n            container.innerHTML = results.map(product => generateProductCard(product)).join('');\n            adjustUIForViewport();\n        }\n    }\n    \n    console.log(`🔍 検索実行: \"${query}\" (${results.length}件)`);\n}\n\n// スクロール処理（モバイル無限スクロール）\nfunction handleScroll() {\n    if (currentViewport !== 'mobile') return;\n    \n    const scrollTop = window.pageYOffset;\n    const windowHeight = window.innerHeight;\n    const documentHeight = document.documentElement.scrollHeight;\n    \n    if (scrollTop + windowHeight >= documentHeight - 1000) {\n        loadMoreProducts();\n    }\n}\n\n// カート操作\nfunction addToCart(productId) {\n    const product = PRODUCT_DATABASE.find(p => p.id === productId);\n    if (!product || !product.inStock) return;\n    \n    const existingItem = cart.find(item => item.id === productId);\n    \n    if (existingItem) {\n        existingItem.quantity += 1;\n    } else {\n        cart.push({\n            id: product.id,\n            name: product.name,\n            price: product.price,\n            image: product.image,\n            quantity: 1\n        });\n    }\n    \n    updateCartDisplay();\n    saveUserData();\n    renderProductGrid(); // ボタン状態更新\n    \n    showToast(`${product.name}をカートに追加しました`, 'success');\n    \n    console.log(`🛒 商品をカートに追加: ${product.name}`);\n}\n\n// ウィッシュリスト操作\nfunction toggleWishlist(productId) {\n    const product = PRODUCT_DATABASE.find(p => p.id === productId);\n    if (!product) return;\n    \n    const existingIndex = wishlist.findIndex(item => item.id === productId);\n    \n    if (existingIndex >= 0) {\n        wishlist.splice(existingIndex, 1);\n        showToast('ウィッシュリストから削除しました', 'info');\n    } else {\n        wishlist.push({\n            id: product.id,\n            name: product.name,\n            price: product.price,\n            image: product.image\n        });\n        showToast(`${product.name}をウィッシュリストに追加しました`, 'success');\n    }\n    \n    updateWishlistDisplay();\n    saveUserData();\n    renderProductGrid(); // ハート状態更新\n    \n    console.log(`💖 ウィッシュリスト更新: ${product.name}`);\n}\n\n// カート表示更新\nfunction updateCartDisplay() {\n    const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);\n    const totalPrice = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);\n    \n    // カート数バッジ更新\n    document.querySelectorAll('#mobileCartCount, #desktopCartCount').forEach(element => {\n        element.textContent = totalItems;\n        if (totalItems > 0) {\n            element.style.display = 'inline-block';\n        } else {\n            element.style.display = 'none';\n        }\n    });\n    \n    // カート合計更新\n    const cartTotal = document.getElementById('cartTotal');\n    if (cartTotal) {\n        cartTotal.textContent = `¥${totalPrice.toLocaleString()}`;\n    }\n    \n    // カートアイテム表示更新\n    const cartItems = document.getElementById('cartItems');\n    if (cartItems) {\n        if (cart.length === 0) {\n            cartItems.innerHTML = `\n                <div class=\"text-center text-muted py-5\">\n                    <i class=\"bi bi-cart-x display-4 mb-3\"></i>\n                    <p>カートは空です</p>\n                </div>\n            `;\n        } else {\n            cartItems.innerHTML = cart.map(item => `\n                <div class=\"d-flex align-items-center border-bottom pb-3 mb-3\">\n                    <img src=\"${item.image}\" alt=\"${item.name}\" \n                         class=\"me-3\" \n                         style=\"width: 60px; height: 60px; object-fit: cover; border-radius: 8px;\">\n                    <div class=\"flex-grow-1\">\n                        <h6 class=\"mb-0\">${item.name}</h6>\n                        <small class=\"text-muted\">¥${item.price.toLocaleString()}</small>\n                    </div>\n                    <div class=\"d-flex align-items-center\">\n                        <button class=\"btn btn-outline-secondary btn-sm\" \n                                onclick=\"updateCartQuantity(${item.id}, ${item.quantity - 1})\">\n                            <i class=\"bi bi-dash\"></i>\n                        </button>\n                        <span class=\"mx-3\">${item.quantity}</span>\n                        <button class=\"btn btn-outline-secondary btn-sm\" \n                                onclick=\"updateCartQuantity(${item.id}, ${item.quantity + 1})\">\n                            <i class=\"bi bi-plus\"></i>\n                        </button>\n                    </div>\n                </div>\n            `).join('');\n        }\n    }\n}\n\n// ウィッシュリスト表示更新\nfunction updateWishlistDisplay() {\n    const wishlistCount = document.getElementById('wishlistCount');\n    if (wishlistCount) {\n        wishlistCount.textContent = wishlist.length;\n        wishlistCount.style.display = wishlist.length > 0 ? 'inline-block' : 'none';\n    }\n}\n\n// カート数量更新\nfunction updateCartQuantity(productId, newQuantity) {\n    if (newQuantity <= 0) {\n        cart = cart.filter(item => item.id !== productId);\n    } else {\n        const item = cart.find(item => item.id === productId);\n        if (item) {\n            item.quantity = newQuantity;\n        }\n    }\n    \n    updateCartDisplay();\n    saveUserData();\n    renderProductGrid();\n}\n\n// クイックビュー\nfunction quickView(productId) {\n    const product = PRODUCT_DATABASE.find(p => p.id === productId);\n    if (!product) return;\n    \n    // 簡易的なクイックビュー（実際の実装ではモーダルを使用）\n    const features = [\n        'レスポンシブ対応',\n        '全デバイス最適化',\n        '高品質保証',\n        '送料無料'\n    ];\n    \n    alert(`${product.name}\\n\\n${product.description}\\n\\n価格: ¥${product.price.toLocaleString()}\\n評価: ${product.rating}/5.0\\n\\n特徴:\\n• ${features.join('\\n• ')}`);\n}\n\n// トースト表示\nfunction showToast(message, type = 'info') {\n    // 簡易的なトースト実装\n    const toast = document.createElement('div');\n    toast.className = `alert alert-${type} position-fixed`;\n    toast.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';\n    toast.innerHTML = `\n        <div class=\"d-flex align-items-center\">\n            <i class=\"bi bi-${type === 'success' ? 'check-circle' : type === 'info' ? 'info-circle' : 'exclamation-circle'} me-2\"></i>\n            ${message}\n        </div>\n    `;\n    \n    document.body.appendChild(toast);\n    \n    setTimeout(() => {\n        toast.remove();\n    }, 3000);\n}\n\n// Bootstrap コンポーネント初期化\nfunction initializeBootstrapComponents() {\n    // オフキャンバスイベント\n    document.addEventListener('shown.bs.offcanvas', function(event) {\n        console.log('📱 オフキャンバス表示:', event.target.id);\n    });\n    \n    console.log('🎨 Bootstrap コンポーネント初期化完了');\n}\n\n// ユーザーデータ保存\nfunction saveUserData() {\n    try {\n        localStorage.setItem('ec-cart', JSON.stringify(cart));\n        localStorage.setItem('ec-wishlist', JSON.stringify(wishlist));\n    } catch (e) {\n        console.error('データ保存エラー:', e);\n    }\n}\n\n// ユーザーデータ読み込み\nfunction loadUserData() {\n    try {\n        const savedCart = localStorage.getItem('ec-cart');\n        const savedWishlist = localStorage.getItem('ec-wishlist');\n        \n        if (savedCart) cart = JSON.parse(savedCart);\n        if (savedWishlist) wishlist = JSON.parse(savedWishlist);\n        \n        console.log('💾 ユーザーデータ読み込み完了');\n    } catch (e) {\n        console.error('データ読み込みエラー:', e);\n    }\n}\n\n// パフォーマンス監視\nfunction startPerformanceMonitoring() {\n    // ページロード時間測定\n    window.addEventListener('load', function() {\n        setTimeout(() => {\n            if ('performance' in window) {\n                const perfData = performance.getEntriesByType('navigation')[0];\n                console.log('📊 パフォーマンス情報:');\n                console.log(`  - DOMContentLoaded: ${Math.round(perfData.domContentLoadedEventEnd)}ms`);\n                console.log(`  - ページ読み込み: ${Math.round(perfData.loadEventEnd)}ms`);\n                \n                // Core Web Vitals の簡易測定\n                if ('PerformanceObserver' in window) {\n                    new PerformanceObserver((entryList) => {\n                        for (const entry of entryList.getEntries()) {\n                            console.log(`📈 ${entry.name}: ${entry.value}ms`);\n                        }\n                    }).observe({entryTypes: ['largest-contentful-paint', 'first-input', 'cumulative-layout-shift']});\n                }\n            }\n        }, 1000);\n    });\n}\n\n// ユーティリティ関数\nfunction debounce(func, wait) {\n    let timeout;\n    return function executedFunction(...args) {\n        const later = () => {\n            clearTimeout(timeout);\n            func(...args);\n        };\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n    };\n}\n\nfunction throttle(func, limit) {\n    let inThrottle;\n    return function() {\n        const args = arguments;\n        const context = this;\n        if (!inThrottle) {\n            func.apply(context, args);\n            inThrottle = true;\n            setTimeout(() => inThrottle = false, limit);\n        }\n    };\n}\n\n// デバッグ用（開発時のみ）\nif (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {\n    window.debugEC = {\n        config: SYSTEM_CONFIG,\n        viewport: () => currentViewport,\n        cart,\n        wishlist,\n        products: PRODUCT_DATABASE,\n        rerender: renderProductGrid\n    };\n    console.log('🐛 デバッグモード有効 - window.debugEC で操作可能');\n}\n\nconsole.log('🎉 レスポンシブECシステム初期化完了!');"
    }
  },
  "expectedResult": {
    "console": "レスポンシブECシステム初期化完了!",
    "behavior": "全デバイスで最適化された本格的なECシステムが動作し、レスポンシブ商品グリッド、カート機能、ウィッシュリスト等が完璧に機能する"
  },
  "checks": [
    {
      "id": "responsive-design",
      "name": "レスポンシブデザイン",
      "type": "css",
      "message": "モバイル、タブレット、デスクトップで完璧に動作するレスポンシブデザインが必要です"
    },
    {
      "id": "mobile-first",
      "name": "モバイルファースト",
      "type": "css",
      "message": "モバイルファーストアプローチで設計されている必要があります"
    },
    {
      "id": "viewport-detection",
      "name": "ビューポート検出",
      "type": "js",
      "message": "JavaScript でビューポートを検出し、適切にUI を調整する必要があります"
    },
    {
      "id": "performance-optimization",
      "name": "パフォーマンス最適化",
      "type": "js",
      "message": "画像遅延読み込み、デバウンス、スロットリング等の最適化が実装されている必要があります"
    },
    {
      "id": "ec-functionality",
      "name": "EC機能",
      "type": "js",
      "message": "商品表示、カート、ウィッシュリスト、検索等のEC基本機能が実装されている必要があります"
    }
  ],
  "hints": [
    "Bootstrap 5のブレークポイントを活用してレスポンシブグリッドを作りましょう",
    "window.innerWidth を監視してビューポート変更に対応しましょう",
    "loading=\"lazy\" 属性で画像の遅延読み込みを実装しましょう",
    "debounce と throttle を使ってパフォーマンスを最適化しましょう"
  ]
}
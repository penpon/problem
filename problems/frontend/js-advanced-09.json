{
  "id": "js-advanced-09",
  "title": "関数の実用応用",
  "description": "パラメータと戻り値を活用した実用的な関数を作成し、フォーム入力との連携を通じて本格的なプログラミングスキルを習得します",
  "category": "javascript-advanced",
  "difficulty": 3,
  "instructions": [
    "関数のパラメータ（引数）を使ったデータ受け渡しを実装する",
    "戻り値（return）を使った計算結果の返却を学ぶ",
    "フォーム入力値と関数の連携システムを構築する",
    "BMI計算・文字列処理などの実用的な処理を実装する"
  ],
  "files": {
    "html": {
      "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>課題実装</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n    <div class=\"container\">\n        <h1>課題を実装してください</h1>\n        <!-- ここに実装してください -->\n    </div>\n    \n    <script src=\"script.js\"></script>\n</body>\n</html>",
      "expected": "<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>ステップ17.5-2 - 関数の実用応用</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n    <div class=\"container\">\n        <h1>🔧 関数の実用応用</h1>\n        <div class=\"step-info\">\n            <strong>ステップ17.5-2 - パラメータと戻り値を使った実用的な関数</strong>\n        </div>\n        \n        <div class=\"celebration\">🔧 📊 ✨</div>\n        \n        <div class=\"info-box\">\n            <h3>🎯 このステップで学ぶこと</h3>\n            <ul>\n                <li><strong>パラメータ（引数）</strong>を受け取る関数</li>\n                <li><strong>戻り値</strong>を返す関数の作り方</li>\n                <li>関数を使った<strong>実用的な計算</strong></li>\n                <li>フォーム入力と<strong>関数の連携</strong></li>\n            </ul>\n        </div>\n        \n        <div class=\"demo-section\">\n            <h3>📊 実用関数デモ</h3>\n            <p>フォームに値を入力して、パラメータと戻り値を使った関数を体験しましょう！</p>\n            \n            <div class=\"content-display\" id=\"content-display\">\n                <h3 style=\"color: #3498db; margin-top: 0;\">🎯 計算結果表示エリア</h3>\n                <p>下のフォームに値を入力してボタンをクリックすると、計算結果が表示されます。</p>\n            </div>\n            \n            <div class=\"form-sections\">\n                <div class=\"form-section\">\n                    <h4>🔢 足し算計算</h4>\n                    <div class=\"input-group\">\n                        <input type=\"number\" id=\"num1\" placeholder=\"数字1\" value=\"5\">\n                        <span>+</span>\n                        <input type=\"number\" id=\"num2\" placeholder=\"数字2\" value=\"3\">\n                        <button class=\"calc-btn btn-add\" id=\"add-btn\">計算実行</button>\n                    </div>\n                </div>\n                \n                <div class=\"form-section\">\n                    <h4>💪 BMI計算</h4>\n                    <div class=\"input-group\">\n                        <input type=\"number\" id=\"height\" placeholder=\"身長(cm)\" value=\"170\">\n                        <input type=\"number\" id=\"weight\" placeholder=\"体重(kg)\" value=\"60\">\n                        <button class=\"calc-btn btn-bmi\" id=\"bmi-btn\">BMI計算</button>\n                    </div>\n                </div>\n                \n                <div class=\"form-section\">\n                    <h4>👋 名前付き挨拶</h4>\n                    <div class=\"input-group\">\n                        <input type=\"text\" id=\"name\" placeholder=\"お名前\" value=\"太郎\">\n                        <button class=\"calc-btn btn-greet\" id=\"greet-btn\">挨拶作成</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n        <div class=\"info-box\">\n            <h3>💡 パラメータと戻り値の基本</h3>\n            <p>関数にデータを渡し、計算結果を受け取る方法：</p>\n            \n            <div class=\"code-example\">\n// パラメータを受け取る関数\nfunction add(a, b) {        // a と b がパラメータ\n    let result = a + b;     // 計算処理\n    return result;          // 戻り値として結果を返す\n}\n\n// 関数を呼び出して戻り値を取得\nlet sum = add(5, 3);       // 5 と 3 を渡して、8 が返される\nconsole.log(sum);          // 8 が出力される\n\n// 別の値でも使える\nlet sum2 = add(10, 20);    // 30 が返される\n            </div>\n        </div>\n        \n        <div class=\"instruction\">\n            <h3>🚀 実用的な関数を体験してみよう！</h3>\n            <p>フォームの値を変更して、3つの計算ボタンをそれぞれ試してください。</p>\n            <p>同じ関数でも、入力値によって異なる結果が返されることを確認しましょう！</p>\n        </div>\n    </div>\n    \n    <script src=\"script.js\"></script>\n</body>\n</html>"
    },
    "css": {
      "template": "/* 基本的なスタイル */\nbody {\n    font-family: Arial, sans-serif;\n    margin: 40px;\n    background: #f5f5f5;\n}\n\n.container {\n    max-width: 800px;\n    margin: 0 auto;\n    background: white;\n    padding: 20px;\n    border-radius: 10px;\n    box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n}\n\n/* ここに実装してください */",
      "expected": "/* 基本スタイル */\nbody {\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    margin: 0;\n    padding: 20px;\n    background: linear-gradient(135deg, #00b894 0%, #00cec9 100%);\n    min-height: 100vh;\n    color: #333;\n}\n\n.container {\n    max-width: 1000px;\n    margin: 0 auto;\n    background: white;\n    padding: 30px;\n    border-radius: 15px;\n    box-shadow: 0 10px 30px rgba(0,0,0,0.2);\n}\n\nh1 {\n    text-align: center;\n    color: #2c3e50;\n    margin-bottom: 10px;\n    font-size: 2.5rem;\n}\n\n.step-info {\n    text-align: center;\n    background: #f8f9fa;\n    padding: 15px;\n    border-radius: 10px;\n    margin-bottom: 20px;\n    color: #495057;\n}\n\n.celebration {\n    text-align: center;\n    font-size: 3rem;\n    margin: 20px 0;\n}\n\n.info-box {\n    background: #e8f4fd;\n    padding: 20px;\n    border-radius: 10px;\n    margin-bottom: 25px;\n    border-left: 4px solid #3498db;\n}\n\n.info-box h3 {\n    margin-top: 0;\n    color: #2980b9;\n}\n\n.info-box ul {\n    margin: 15px 0;\n    padding-left: 20px;\n}\n\n.info-box li {\n    margin-bottom: 8px;\n}\n\n.demo-section {\n    background: #fff;\n    padding: 25px;\n    border-radius: 10px;\n    margin-bottom: 25px;\n    border: 1px solid #e0e0e0;\n}\n\n.content-display {\n    background: #f8f9fa;\n    padding: 20px;\n    border-radius: 10px;\n    margin: 20px 0;\n    border: 2px dashed #dee2e6;\n    min-height: 120px;\n}\n\n.form-sections {\n    display: grid;\n    grid-template-columns: 1fr;\n    gap: 20px;\n    margin: 20px 0;\n}\n\n.form-section {\n    background: #f8f9fa;\n    padding: 20px;\n    border-radius: 10px;\n    border: 1px solid #e9ecef;\n}\n\n.form-section h4 {\n    margin-top: 0;\n    color: #495057;\n    display: flex;\n    align-items: center;\n    gap: 8px;\n}\n\n.input-group {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    flex-wrap: wrap;\n}\n\n.input-group input {\n    padding: 10px;\n    border: 1px solid #ced4da;\n    border-radius: 5px;\n    font-size: 1rem;\n    min-width: 120px;\n}\n\n.input-group input:focus {\n    outline: none;\n    border-color: #3498db;\n    box-shadow: 0 0 5px rgba(52, 152, 219, 0.3);\n}\n\n.input-group span {\n    font-size: 1.5rem;\n    font-weight: bold;\n    color: #666;\n}\n\n.calc-btn {\n    padding: 10px 20px;\n    font-size: 1rem;\n    border: none;\n    border-radius: 8px;\n    cursor: pointer;\n    transition: all 0.3s ease;\n    font-weight: 500;\n}\n\n.btn-add {\n    background: linear-gradient(135deg, #27ae60, #2ecc71);\n    color: white;\n}\n\n.btn-bmi {\n    background: linear-gradient(135deg, #3498db, #2980b9);\n    color: white;\n}\n\n.btn-greet {\n    background: linear-gradient(135deg, #e67e22, #f39c12);\n    color: white;\n}\n\n.calc-btn:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 5px 15px rgba(0,0,0,0.2);\n}\n\n.calc-btn:active {\n    transform: translateY(0);\n}\n\n.code-example {\n    background: #263238;\n    color: #e0f2f1;\n    padding: 20px;\n    border-radius: 8px;\n    font-family: 'Courier New', monospace;\n    white-space: pre-wrap;\n    overflow-x: auto;\n    margin: 15px 0;\n    line-height: 1.5;\n}\n\n.instruction {\n    background: #e8f5e9;\n    padding: 20px;\n    border-radius: 10px;\n    border-left: 4px solid #4caf50;\n}\n\n.instruction h3 {\n    margin-top: 0;\n    color: #2e7d32;\n}\n\n/* レスポンシブ対応 */\n@media (max-width: 768px) {\n    .input-group {\n        flex-direction: column;\n        align-items: stretch;\n    }\n    \n    .input-group input {\n        min-width: unset;\n    }\n}"
    },
    "js": {
      "template": "// JavaScript実装エリア\n\n// ここに実装してください\nconsole.log('課題実装を開始してください');",
      "expected": "console.log(\"🔧 ステップ17.5-2: 関数の実用応用を開始します！\");\n\n// DOM要素を取得\nlet contentDisplay = document.getElementById(\"content-display\");\n\n// パラメータを受け取って足し算をする関数\nfunction addNumbers(a, b) {\n    console.log(`addNumbers関数: ${a} + ${b} を計算中`);\n    let result = a + b;\n    return result; // 戻り値として結果を返す\n}\n\n// パラメータを受け取ってBMIを計算する関数\nfunction calculateBMI(heightCm, weightKg) {\n    console.log(`calculateBMI関数: 身長${heightCm}cm, 体重${weightKg}kg でBMI計算中`);\n    \n    // 身長をメートルに変換\n    let heightM = heightCm / 100;\n    \n    // BMI = 体重(kg) ÷ (身長(m) × 身長(m))\n    let bmi = weightKg / (heightM * heightM);\n    \n    return Math.round(bmi * 10) / 10; // 小数点1桁まで\n}\n\n// パラメータを受け取って挨拶メッセージを作る関数\nfunction createGreeting(name) {\n    console.log(`createGreeting関数: ${name}さんへの挨拶作成中`);\n    let greeting = `こんにちは、${name}さん！プログラミング学習がんばってますね！`;\n    return greeting;\n}\n\n// 足し算ボタンのイベント\ndocument.getElementById(\"add-btn\").addEventListener(\"click\", function() {\n    // フォームから値を取得\n    let num1 = parseInt(document.getElementById(\"num1\").value);\n    let num2 = parseInt(document.getElementById(\"num2\").value);\n    \n    console.log(\"足し算ボタンがクリックされました\");\n    \n    // 関数を呼び出して戻り値を取得\n    let sum = addNumbers(num1, num2);\n    \n    contentDisplay.innerHTML = `\n        <h3 style=\"color: #27ae60; margin-top: 0;\">🔢 足し算計算結果</h3>\n        <div style=\"background: linear-gradient(135deg, #27ae60, #2ecc71); color: white; padding: 20px; border-radius: 10px; text-align: center;\">\n            <h2 style=\"margin: 0; text-shadow: 2px 2px 4px rgba(0,0,0,0.3);\">\n                ${num1} + ${num2} = ${sum}\n            </h2>\n            <p style=\"margin: 10px 0 0 0;\">addNumbers(${num1}, ${num2}) の実行結果</p>\n        </div>\n    `;\n});\n\n// BMI計算ボタンのイベント\ndocument.getElementById(\"bmi-btn\").addEventListener(\"click\", function() {\n    // フォームから値を取得\n    let height = parseInt(document.getElementById(\"height\").value);\n    let weight = parseInt(document.getElementById(\"weight\").value);\n    \n    console.log(\"BMI計算ボタンがクリックされました\");\n    \n    // 関数を呼び出して戻り値を取得\n    let bmi = calculateBMI(height, weight);\n    \n    // BMIの評価\n    let evaluation = \"\";\n    if (bmi < 18.5) {\n        evaluation = \"やせ\";\n    } else if (bmi < 25) {\n        evaluation = \"標準\";\n    } else {\n        evaluation = \"肥満\";\n    }\n    \n    contentDisplay.innerHTML = `\n        <h3 style=\"color: #3498db; margin-top: 0;\">💪 BMI計算結果</h3>\n        <div style=\"background: linear-gradient(135deg, #3498db, #2980b9); color: white; padding: 20px; border-radius: 10px; text-align: center;\">\n            <h2 style=\"margin: 0; text-shadow: 2px 2px 4px rgba(0,0,0,0.3);\">\n                BMI: ${bmi} (${evaluation})\n            </h2>\n            <p style=\"margin: 10px 0 0 0;\">calculateBMI(${height}, ${weight}) の実行結果</p>\n        </div>\n    `;\n});\n\n// 挨拶作成ボタンのイベント\ndocument.getElementById(\"greet-btn\").addEventListener(\"click\", function() {\n    // フォームから値を取得\n    let name = document.getElementById(\"name\").value;\n    \n    console.log(\"挨拶作成ボタンがクリックされました\");\n    \n    // 関数を呼び出して戻り値を取得\n    let greeting = createGreeting(name);\n    \n    contentDisplay.innerHTML = `\n        <h3 style=\"color: #e67e22; margin-top: 0;\">👋 挨拶メッセージ</h3>\n        <div style=\"background: linear-gradient(135deg, #e67e22, #f39c12); color: white; padding: 20px; border-radius: 10px; text-align: center;\">\n            <h2 style=\"margin: 0; text-shadow: 2px 2px 4px rgba(0,0,0,0.3);\">\n                ${greeting}\n            </h2>\n            <p style=\"margin: 10px 0 0 0;\">createGreeting(\"${name}\") の実行結果</p>\n        </div>\n    `;\n});\n\nconsole.log(\"✅ 関数実用応用システムが初期化されました！\");\nconsole.log(\"🔧 定義された関数: addNumbers, calculateBMI, createGreeting\");\nconsole.log(\"💡 フォームに値を入力して、パラメータと戻り値を体験してください！\");"
    }
  },
  "expectedResult": {
    "parameterPassing": "関数にパラメータが正しく渡される",
    "returnValues": "関数から戻り値が正しく返される",
    "formIntegration": "フォーム入力値が関数で処理される",
    "practicalFunctions": "足し算・BMI計算・挨拶生成の関数が動作する",
    "behavior": "3つの実用的な関数がフォームと連携して動作する"
  },
  "checks": [
    {
      "id": "doctype",
      "name": "DOCTYPE宣言",
      "type": "structure",
      "message": "DOCTYPE html宣言が必要です"
    },
    {
      "id": "html",
      "name": "<html>タグ",
      "type": "structure",
      "message": "<html>タグが必要です"
    },
    {
      "id": "head",
      "name": "<head>セクション",
      "type": "structure",
      "message": "<head>セクションが必要です"
    },
    {
      "id": "body",
      "name": "<body>セクション",
      "type": "structure",
      "message": "<body>セクションが必要です"
    },
    {
      "id": "title",
      "name": "<title>タグ",
      "type": "structure",
      "message": "<title>タグと内容が必要です"
    },
    {
      "id": "css-content",
      "name": "CSSスタイル",
      "type": "css",
      "message": "CSSでスタイルを設定してください"
    },
    {
      "id": "js-content",
      "name": "JavaScript",
      "type": "js",
      "message": "JavaScriptで動的な動作を実装してください"
    }
  ]
}
{
  "id": "js-advanced-03",
  "title": "配列の並び替え（sort基礎）",
  "description": "sort()メソッドを使って配列を昇順・降順に並び替えます。ECサイトの価格ソート機能に使う重要な技術です。",
  "category": "javascript-advanced",
  "instructions": [
    "セレクトボックス（#sort）の変更で並び替えを実行する",
    "配列はスプレッド構文でコピー（const items = [...products]）し、sort() で価格昇順/降順に並び替える",
    "<template id=\"item-template\"> を cloneNode(true) して各要素を生成し、textContent で値を差し込む",
    "既存の出力コンテナ（#list）に appendChild で追加する（innerHTML は使わない）"
  ],
  "implementationPoints": [
    "必須: sort()メソッドを使って配列を並び替えること",
    "必須: 数値の比較には「a.price - b.price」を使うこと（昇順）",
    "必須: 降順は「b.price - a.price」にすること",
    "推奨: 元の配列を変更しないようスプレッド構文[...products]を使うこと"
  ],
  "files": {
    "html": {
      "template": "",
      "expected": "__INCLUDE__: problems/frontend/expected/js-advanced-03/files.html.expected"
    },
    "css": {
      "template": "",
      "expected": "__INCLUDE__: problems/frontend/expected/js-advanced-03/files.css.expected"
    },
    "js": {
      "template": "// 商品データ（配列）\nconst products = [\n  { id: 1, name: 'ノートパソコン', price: 89800 },\n  { id: 2, name: 'マウス', price: 1980 },\n  { id: 3, name: 'キーボード', price: 4980 }\n];\n\n// TODO: sort() を使って価格順に並び替える\n// TODO: 昇順は a.price - b.price\n// TODO: 降順は b.price - a.price\n// TODO: map() と join('') でHTMLに変換\n// TODO: #list に innerHTML で挿入\n\nfunction renderProducts(sortType) {\n  // ここに実装してください\n}\n\n// 並び替え変更時に実行\ndocument.getElementById('sort').addEventListener('change', function(e) {\n  renderProducts(e.target.value);\n});\n\n// 初期表示\nrenderProducts('default');",
      "expected": "__INCLUDE__: problems/frontend/expected/js-advanced-03/files.js.expected"
    }
  }
}

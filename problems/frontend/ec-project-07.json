{
  "id": "ec-project-07",
  "title": "62: ユーザー認証システム",
  "description": "ECプロジェクトの高度な機能実装 - プロフェッショナルレベルのWebアプリケーション開発",
  "category": "ec-project",
  "instructions": [
    "高度なJavaScript機能を実装してください",
    "データベース連携を模擬してください",
    "ユーザビリティを最優先に設計してください",
    "セキュリティ対策を考慮してください"
  ],
  "files": {
    "html": {
      "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <title>課題実装</title>\n  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@latest/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n</head>\n<body>\n  <!-- ここに実装してください -->\n  <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@latest/dist/js/bootstrap.bundle.min.js\"></script>\n  <script src=\"script.js\"></script>\n</body>\n</html>",
      "expected": "<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <title>ログイン</title>\n  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@latest/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n</head>\n<body>\n  <div class=\"container py-4\">\n    <h1 class=\"h3 mb-3\">ログイン</h1>\n    <form id=\"loginForm\" class=\"vstack gap-3\">\n      <div>\n        <label for=\"email\" class=\"form-label\">メールアドレス</label>\n        <input id=\"email\" type=\"email\" class=\"form-control\" placeholder=\"you@example.com\">\n      </div>\n      <div>\n        <label for=\"password\" class=\"form-label\">パスワード</label>\n        <input id=\"password\" type=\"password\" class=\"form-control\" placeholder=\"••••••\">\n      </div>\n      <div id=\"error\" class=\"text-danger small\"></div>\n      <button type=\"submit\" class=\"btn btn-primary\">ログイン</button>\n      <div id=\"status\" class=\"mt-2\"></div>\n    </form>\n  </div>\n  <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@latest/dist/js/bootstrap.bundle.min.js\"></script>\n  <script src=\"script.js\"></script>\n</body>\n</html>"
    },
    "css": {
      "template": "/* ここに実装してください（最小） */",
      "expected": "/* 最小: 追加スタイル不要 */"
    },
    "js": {
      "template": "// ここに実装してください",
      "expected": "const form = document.getElementById('loginForm');\nconst email = document.getElementById('email');\nconst password = document.getElementById('password');\nconst error = document.getElementById('error');\nconst status = document.getElementById('status');\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n  error.textContent = '';\n  status.textContent = '';\n\n  const emailVal = email.value.trim();\n  const passVal = password.value.trim();\n  const emailOk = /.+@.+\\..+/.test(emailVal);\n  const passOk = passVal.length >= 6;\n\n  if (!emailOk || !passOk) {\n    error.textContent = !emailOk ? 'メールアドレスの形式が正しくありません' : 'パスワードは6文字以上にしてください';\n    return;\n  }\n\n  status.textContent = 'ログイン成功（疑似）';\n});"
    }
  },
  "expectedResult": {
    "behavior": "不正な入力ではエラーメッセージ、正しい入力では成功メッセージを表示"
  },
  "checks": [
    { "id": "has-form", "name": "フォーム要素", "type": "html", "message": "#loginForm, #email, #password が存在すること" },
    { "id": "prevent-default", "name": "送信抑止", "type": "js", "message": "submit イベントで e.preventDefault() を呼んでいること" },
    { "id": "validation", "name": "入力検証", "type": "js", "message": "メール形式の検証と6文字以上のパスワード検証を行うこと" }
  ],
  "hints": [
    "正規表現 /.+@.+\\..+/ で簡易メール検証",
    "submit イベントで e.preventDefault() を忘れずに"
  ]
}

{
  "id": "js-advanced-13",
  "title": "商品カード",
  "description": "これまでの全技術（HTML/CSS/JavaScript）を統合し、実用的な商品カードシステムを作成します",
  "category": "javascript-advanced",
  "difficulty": 4,
  "instructions": [
    "HTML、CSS、JavaScriptの知識を組み合わせた実用的なコンポーネントを作成する",
    "商品情報の動的な表示・変更システムを実装する",
    "「いいね」ボタンやカウンター機能などのユーザーインタラクションを実装する",
    "商品詳細の表示切替、価格表示、在庫管理などのECサイトレベルの機能を実装する"
  ],
  "files": {
    "html": {
      "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>課題実装</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n    <div class=\"container\">\n        <h1>課題を実装してください</h1>\n        <!-- ここに実装してください -->\n    </div>\n    \n    <script src=\"script.js\"></script>\n</body>\n</html>",
      "expected": "<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>商品カード最小デモ</title>\n  <style>\n    body{font-family:system-ui, -apple-system, 'Segoe UI', sans-serif;margin:20px}\n    .card{width:280px;border:1px solid #ddd;border-radius:10px;overflow:hidden}\n    .img{width:100%;height:180px;object-fit:cover;background:#f3f3f3;display:block}\n    .body{padding:12px}\n    .row{display:flex;justify-content:space-between;align-items:center;margin-top:8px}\n    .btn{padding:6px 10px;border:1px solid #ccc;border-radius:6px;background:#fff;cursor:pointer}\n    .btn.like.on{background:#ffebee;border-color:#e57373}\n    .price{font-weight:bold;color:#2c3e50}\n  </style>\n</head>\n<body>\n  <h1>商品カード最小デモ</h1>\n  <div class=\"card\">\n    <img class=\"img\" id=\"pImg\" alt=\"product\" src=\"https://via.placeholder.com/600x400?text=Product\">\n    <div class=\"body\">\n      <div id=\"pName\">サンプル商品</div>\n      <div class=\"row\">\n        <div class=\"price\" id=\"pPrice\">¥2,980</div>\n        <div>❤ <span id=\"likeCnt\">0</span></div>\n      </div>\n      <div class=\"row\">\n        <button class=\"btn like\" id=\"likeBtn\">いいね</button>\n        <button class=\"btn\" id=\"cartBtn\">カートに追加 (<span id=\"cartCnt\">0</span>)</button>\n      </div>\n    </div>\n  </div>\n\n  <script>\n    const state = { name:'サンプル商品', price:2980, likes:0, cart:0, img:'https://via.placeholder.com/600x400?text=Product' };\n\n    const pName = document.getElementById('pName');\n    const pPrice = document.getElementById('pPrice');\n    const pImg = document.getElementById('pImg');\n    const likeCnt = document.getElementById('likeCnt');\n    const cartCnt = document.getElementById('cartCnt');\n    const likeBtn = document.getElementById('likeBtn');\n    const cartBtn = document.getElementById('cartBtn');\n\n    const render = () => {\n      pName.textContent = state.name;\n      pPrice.textContent = '¥' + state.price.toLocaleString();\n      pImg.src = state.img;\n      likeCnt.textContent = state.likes;\n      cartCnt.textContent = state.cart;\n      likeBtn.classList.toggle('on', state.likes > 0);\n    };\n\n    likeBtn.addEventListener('click', () => {\n      state.likes = state.likes ? 0 : 1;\n      render();\n    });\n\n    cartBtn.addEventListener('click', () => {\n      state.cart += 1;\n      render();\n    });\n\n    render();\n  </script>\n</body>\n</html>"
    },
    "css": {
      "template": "/* 基本的なスタイル */\nbody {\n    font-family: Arial, sans-serif;\n    margin: 40px;\n    background: #f5f5f5;\n}\n\n.container {\n    max-width: 800px;\n    margin: 0 auto;\n    background: white;\n    padding: 20px;\n    border-radius: 10px;\n    box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n}\n\n/* ここに実装してください */",
      "expected": "body{font-family:system-ui,-apple-system,'Segoe UI',sans-serif;margin:20px}\n.card{width:280px;border:1px solid #ddd;border-radius:10px;overflow:hidden}\n.img{width:100%;height:180px;object-fit:cover;background:#f3f3f3;display:block}\n.body{padding:12px}\n.row{display:flex;justify-content:space-between;align-items:center;margin-top:8px}\n.btn{padding:6px 10px;border:1px solid #ccc;border-radius:6px;background:#fff;cursor:pointer}\n.btn.like.on{background:#ffebee;border-color:#e57373}\n.price{font-weight:bold;color:#2c3e50}"
    },
    "js": {
      "template": "// JavaScript実装エリア\n\n// ここに実装してください\nconsole.log('課題実装を開始してください');",
      "expected": "// 商品カード最小ロジック（いいね/カート）\nconst state={name:'サンプル商品',price:2980,likes:0,cart:0,img:'https://via.placeholder.com/600x400?text=Product'};\n\nconst pName=document.getElementById('pName');\nconst pPrice=document.getElementById('pPrice');\nconst pImg=document.getElementById('pImg');\nconst likeCnt=document.getElementById('likeCnt');\nconst cartCnt=document.getElementById('cartCnt');\nconst likeBtn=document.getElementById('likeBtn');\nconst cartBtn=document.getElementById('cartBtn');\n\nconst render=()=>{\n  pName.textContent=state.name;\n  pPrice.textContent='¥'+state.price.toLocaleString();\n  pImg.src=state.img;\n  likeCnt.textContent=state.likes;\n  cartCnt.textContent=state.cart;\n  likeBtn.classList.toggle('on',!!state.likes);\n};\n\nlikeBtn.addEventListener('click',()=>{\n  state.likes=state.likes?0:1;\n  render();\n});\n\ncartBtn.addEventListener('click',()=>{\n  state.cart++;\n  render();\n});\n\nrender();"
    }
  },
  "expectedResult": {
    "render": "画像・商品名・価格が表示される",
    "like": "いいねのトグルでカウントが0/1で変化する",
    "cart": "カートに追加でカート数が加算される",
    "behavior": "2つのボタンが正しく機能する"
  },
  "checks": [
    {
      "id": "doctype",
      "name": "DOCTYPE宣言",
      "type": "structure",
      "message": "DOCTYPE html宣言が必要です"
    },
    {
      "id": "html",
      "name": "<html>タグ",
      "type": "structure",
      "message": "<html>タグが必要です"
    },
    {
      "id": "head",
      "name": "<head>セクション",
      "type": "structure",
      "message": "<head>セクションが必要です"
    },
    {
      "id": "body",
      "name": "<body>セクション",
      "type": "structure",
      "message": "<body>セクションが必要です"
    },
    {
      "id": "title",
      "name": "<title>タグ",
      "type": "structure",
      "message": "<title>タグと内容が必要です"
    },
    {
      "id": "css-content",
      "name": "CSSスタイル",
      "type": "css",
      "message": "CSSでスタイルを設定してください"
    },
    {
      "id": "js-content",
      "name": "JavaScript",
      "type": "js",
      "message": "JavaScriptで動的な動作を実装してください"
    }
  ]
}
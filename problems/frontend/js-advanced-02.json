{
  "id": "js-advanced-02",
  "title": "配列の絞り込み（filter基礎）",
  "description": "filter()メソッドを使って条件に合う要素だけを抽出します。ECサイトのカテゴリフィルタや在庫絞り込みに使う重要な技術です。",
  "category": "javascript-advanced",
  "instructions": [
    "セレクトボックス（#category）で選択されたカテゴリを取得する",
    "products配列をfilter()で絞り込む（選択カテゴリと一致するもののみ）",
    "絞り込んだ結果をmap()とjoin()でHTMLにして #list に表示する"
  ],
  "implementationPoints": [
    "必須: filter()メソッドを使って配列を絞り込むこと",
    "必須: 条件に合う要素だけを含む新しい配列が返ること",
    "必須: セレクトボックスのchangeイベントで絞り込みを実行すること",
    "推奨: 「すべて」選択時は全商品を表示すること"
  ],
  "files": {
    "html": {
      "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <title>配列の絞り込み</title>\n  <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n  <div class=\"container\">\n    <h1>商品一覧（カテゴリ絞り込み）</h1>\n    <select id=\"category\" class=\"category-select\">\n      <option value=\"all\">すべて</option>\n      <option value=\"家電\">家電</option>\n      <option value=\"文具\">文具</option>\n    </select>\n    <div id=\"list\"></div>\n  </div>\n  <script src=\"script.js\"></script>\n</body>\n</html>",
      "expected": "__INCLUDE__: problems/frontend/expected/js-advanced-02/files.html.expected"
    },
    "css": {
      "template": "body { font-family: sans-serif; margin: 16px; }\n.container { max-width: 800px; margin: 0 auto; }\n.category-select { margin-bottom: 16px; padding: 8px; font-size: 14px; }\n#list { display: grid; gap: 12px; }\n.item { padding: 12px; border: 1px solid #ddd; border-radius: 6px; }",
      "expected": "__INCLUDE__: problems/frontend/expected/js-advanced-02/files.css.expected"
    },
    "js": {
      "template": "// 商品データ（配列）\nconst products = [\n  { id: 1, name: 'ノートパソコン', category: '家電', price: 89800 },\n  { id: 2, name: 'ボールペン', category: '文具', price: 150 },\n  { id: 3, name: 'マウス', category: '家電', price: 1980 },\n  { id: 4, name: 'ノート', category: '文具', price: 200 }\n];\n\n// TODO: filter() を使ってカテゴリで絞り込む\n// TODO: map() と join('') でHTMLに変換\n// TODO: #list に innerHTML で挿入\n\nfunction renderProducts(selectedCategory) {\n  // ここに実装してください\n}\n\n// カテゴリ変更時に実行\ndocument.getElementById('category').addEventListener('change', function(e) {\n  renderProducts(e.target.value);\n});\n\n// 初期表示\nrenderProducts('all');",
      "expected": "__INCLUDE__: problems/frontend/expected/js-advanced-02/files.js.expected"
    }
  },
  "expectedResult": {
    "behavior": "セレクトボックスでカテゴリを選択すると、該当する商品だけが表示される"
  },
  "checks": [
    {
      "id": "doctype",
      "name": "DOCTYPE宣言",
      "type": "structure",
      "message": "DOCTYPE html宣言が必要です"
    },
    {
      "id": "category-select",
      "name": "#category要素",
      "type": "html",
      "message": "#category のセレクトボックスが必要です"
    },
    {
      "id": "list-element",
      "name": "#list要素",
      "type": "html",
      "message": "#list 要素が必要です"
    },
    {
      "id": "uses-filter",
      "name": "filter()使用",
      "type": "js",
      "message": "filter()メソッドを使用してください"
    },
    {
      "id": "change-event",
      "name": "changeイベント",
      "type": "js",
      "message": "セレクトボックスのchangeイベントを設定してください"
    }
  ],
  "hints": [
    "filter()は条件に合う要素だけを含む新しい配列を返します",
    "例: arr.filter(function(item) { return item.category === '家電'; })",
    "「すべて」の場合は条件なしで全商品を返すようにします"
  ]
}

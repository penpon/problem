{
  "id": "js-advanced-02",
  "title": "HTML内容変更基本",
  "description": "innerHTMLを使った構造的コンテンツ操作を学び、見出し・リスト・カード・テーブルなどの複雑なHTML構造を動的生成します",
  "category": "javascript-dom",
  "difficulty": 3,
  "instructions": [
    "innerHTMLプロパティで複雑なHTML構造を生成する",
    "textContentとinnerHTMLの違いと使い分けを理解する",
    "テンプレートリテラルを活用したHTML生成を実装する",
    "セキュリティを考慮した安全なHTML操作を学ぶ"
  ],
  "files": {
    "html": {
      "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>課題実装</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n    <div class=\"container\">\n        <h1>課題を実装してください</h1>\n        <!-- ここに実装してください -->\n    </div>\n    \n    <script src=\"script.js\"></script>\n</body>\n</html>",
      "expected": "<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>ステップ17.2 - HTML内容変更入門</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n    <div class=\"container\">\n        <h1>🏗️ HTML内容変更入門</h1>\n        <div class=\"step-info\">\n            <strong>ステップ17.2 - inneHTMLを使った構造的コンテンツ操作</strong>\n        </div>\n        \n        <div class=\"celebration\">🏗️ 📄 ✨</div>\n        \n        <div class=\"info-box\">\n            <h3>📚 このステップで学ぶこと</h3>\n            <ul>\n                <li><strong>innerHTML</strong>プロパティの基本的な使用方法</li>\n                <li><strong>HTMLタグ</strong>を含むコンテンツの動的生成</li>\n                <li><strong>textContent</strong>との違いと使い分け</li>\n                <li>安全な<strong>HTML操作</strong>の基本原則</li>\n            </ul>\n        </div>\n        \n        <div class=\"demo-section\">\n            <h3>🎪 動的HTML生成デモ</h3>\n            <p>ボタンをクリックして、異なる種類のHTMLコンテンツを動的に生成してみましょう！</p>\n            \n            <div class=\"content-display\" id=\"content-display\">\n                <h3>🌟 HTMLコンテンツ表示エリア</h3>\n                <p>ここに動的に生成されたHTMLコンテンツが表示されます。下のボタンをクリックして、様々なHTML要素を試してみてください！</p>\n            </div>\n            \n            <div class=\"button-grid\">\n                <button class=\"html-btn btn-heading\" id=\"heading-btn\">\n                    📝 見出しとテキスト\n                </button>\n                \n                <button class=\"html-btn btn-list\" id=\"list-btn\">\n                    📋 リスト構造\n                </button>\n                \n                <button class=\"html-btn btn-card\" id=\"card-btn\">\n                    🎴 情報カード\n                </button>\n                \n                <button class=\"html-btn btn-table\" id=\"table-btn\">\n                    📊 テーブル表示\n                </button>\n                \n                <button class=\"html-btn btn-form\" id=\"form-btn\">\n                    📝 フォーム要素\n                </button>\n                \n                <button class=\"html-btn btn-clear\" id=\"clear-btn\">\n                    🧹 クリア\n                </button>\n            </div>\n        </div>\n        \n        <div class=\"comparison-section\">\n            <div class=\"comparison-card textcontent\">\n                <h4>textContent（前回学習）</h4>\n                <div class=\"code-example\">\nelement.textContent = \"&lt;h3&gt;見出し&lt;/h3&gt;\";\n// 結果: &lt;h3&gt;見出し&lt;/h3&gt; と表示\n                </div>\n                <p>✅ HTMLタグを文字列として表示<br>✅ セキュリティが高い<br>✅ テキストのみの変更に最適</p>\n            </div>\n            \n            <div class=\"comparison-card innerhtml\">\n                <h4>innerHTML（今回学習）</h4>\n                <div class=\"code-example\">\nelement.innerHTML = \"&lt;h3&gt;見出し&lt;/h3&gt;\";\n// 結果: 見出し として表示（HTMLとして解釈）\n                </div>\n                <p>⚠️ HTMLタグを解釈して実行<br>⚠️ 慎重な使用が必要<br>✅ 構造的なコンテンツ作成に有効</p>\n            </div>\n        </div>\n        \n        <div class=\"warning-box\">\n            <h4>⚠️ innerHTML使用時の注意事項</h4>\n            <ul>\n                <li><strong>ユーザー入力は絶対に使用しない</strong> - XSS攻撃のリスク</li>\n                <li><strong>信頼できるコンテンツのみ</strong> - 自分で作成したHTMLのみ</li>\n                <li><strong>スクリプトタグは避ける</strong> - セキュリティリスクを最小化</li>\n                <li><strong>代替案を検討</strong> - textContentで十分な場合はそちらを使用</li>\n            </ul>\n        </div>\n        \n        <div class=\"stats-section\">\n            <h4>📊 HTML生成統計</h4>\n            <div class=\"stats-grid\">\n                <div class=\"stat-item\">\n                    <div>総生成回数</div>\n                    <div class=\"stat-number\" id=\"total-generations\">0</div>\n                </div>\n                <div class=\"stat-item\">\n                    <div>見出し生成</div>\n                    <div class=\"stat-number\" id=\"heading-count\">0</div>\n                </div>\n                <div class=\"stat-item\">\n                    <div>リスト生成</div>\n                    <div class=\"stat-number\" id=\"list-count\">0</div>\n                </div>\n                <div class=\"stat-item\">\n                    <div>カード生成</div>\n                    <div class=\"stat-number\" id=\"card-count\">0</div>\n                </div>\n                <div class=\"stat-item\">\n                    <div>テーブル生成</div>\n                    <div class=\"stat-number\" id=\"table-count\">0</div>\n                </div>\n                <div class=\"stat-item\">\n                    <div>フォーム生成</div>\n                    <div class=\"stat-number\" id=\"form-count\">0</div>\n                </div>\n            </div>\n        </div>\n        \n        <div class=\"info-box\">\n            <h3>🎯 inneHTMLとは？</h3>\n            <p><strong>innerHTML</strong>は、HTML要素の中身をHTMLとして取得・設定するプロパティです。</p>\n            \n            <div class=\"code-example\">\n// 要素を取得\nlet element = document.getElementById(\"content-area\");\n\n// HTMLコンテンツを設定\nelement.innerHTML = `\n    &lt;h3&gt;動的に生成された見出し&lt;/h3&gt;\n    &lt;p&gt;これは&lt;strong&gt;innerHTML&lt;/strong&gt;で作成された段落です。&lt;/p&gt;\n    &lt;ul&gt;\n        &lt;li&gt;リスト項目1&lt;/li&gt;\n        &lt;li&gt;リスト項目2&lt;/li&gt;\n    &lt;/ul&gt;\n`;\n            </div>\n        </div>\n        \n        <div class=\"instruction\">\n            <h3>🚀 すべてのHTML生成を試してみよう！</h3>\n            <p>6つのボタンをすべてクリックして、異なる種類のHTMLコンテンツがどのように生成されるか確認してください。特に構造の違いや、装飾の違いに注目しましょう。</p>\n            <p><strong>F12</strong>（MacはCmd+Option+I）で開発者ツールを開き、<strong>Elements</strong>タブでHTMLの構造変化も確認できます！</p>\n        </div>\n    </div>\n    \n    <script src=\"script.js\"></script>\n</body>\n</html>"
    },
    "css": {
      "template": "/* 基本的なスタイル */\nbody {\n    font-family: Arial, sans-serif;\n    margin: 40px;\n    background: #f5f5f5;\n}\n\n.container {\n    max-width: 800px;\n    margin: 0 auto;\n    background: white;\n    padding: 20px;\n    border-radius: 10px;\n    box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n}\n\n/* ここに実装してください */",
      "expected": "body {\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif;\n    max-width: 1100px;\n    margin: 40px auto;\n    padding: 20px;\n    line-height: 1.6;\n    background: linear-gradient(135deg, #fa709a 0%, #fee140 100%);\n    color: #2c3e50;\n    min-height: 100vh;\n}\n\n.container {\n    background: rgba(255, 255, 255, 0.95);\n    backdrop-filter: blur(10px);\n    border-radius: 20px;\n    padding: 40px;\n    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n}\n\nh1 {\n    color: #e74c3c;\n    text-align: center;\n    font-size: 2.5rem;\n    margin-bottom: 10px;\n}\n\n.step-info {\n    text-align: center;\n    margin-bottom: 30px;\n    opacity: 0.8;\n    color: #7f8c8d;\n}\n\n.demo-section {\n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n    color: white;\n    padding: 30px;\n    border-radius: 20px;\n    margin: 25px 0;\n}\n\n.content-display {\n    background: rgba(255, 255, 255, 0.9);\n    color: #2c3e50;\n    padding: 25px;\n    border-radius: 15px;\n    margin: 20px 0;\n    min-height: 120px;\n    border: 3px solid rgba(255, 255, 255, 0.3);\n    transition: all 0.3s ease;\n}\n\n.content-display h3 {\n    color: #3498db;\n    margin-top: 0;\n}\n\n.content-display ul {\n    padding-left: 20px;\n}\n\n.content-display .highlight-text {\n    background: linear-gradient(135deg, #ff6b6b, #4ecdc4);\n    color: white;\n    padding: 5px 10px;\n    border-radius: 5px;\n    font-weight: bold;\n}\n\n.content-display .info-box {\n    background: #f8f9fa;\n    border-left: 4px solid #3498db;\n    padding: 15px;\n    margin: 10px 0;\n    border-radius: 5px;\n}\n\n.button-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n    gap: 15px;\n    margin: 25px 0;\n}\n\n.html-btn {\n    background: linear-gradient(135deg, #ff6b6b 0%, #4ecdc4 100%);\n    color: white;\n    border: none;\n    padding: 15px 20px;\n    font-size: 1rem;\n    border-radius: 12px;\n    cursor: pointer;\n    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\n    transition: all 0.3s ease;\n    font-weight: bold;\n}\n\n.html-btn:hover {\n    transform: translateY(-3px);\n    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);\n}\n\n.html-btn:active {\n    transform: translateY(0);\n}\n\n.btn-heading { background: linear-gradient(135deg, #56ab2f, #a8e6cf); }\n.btn-list { background: linear-gradient(135deg, #667eea, #764ba2); }\n.btn-card { background: linear-gradient(135deg, #fa709a, #fee140); }\n.btn-table { background: linear-gradient(135deg, #ff9a9e, #fecfef); }\n.btn-form { background: linear-gradient(135deg, #a8edea, #fed6e3); }\n.btn-clear { background: linear-gradient(135deg, #6c757d, #495057); }\n\n.info-box {\n    background: #f8f9fa;\n    padding: 25px;\n    border-radius: 15px;\n    margin: 20px 0;\n    border-left: 5px solid #3498db;\n}\n\n.highlight {\n    color: #e74c3c;\n    font-weight: bold;\n}\n\n.code-example {\n    background: #2c3e50;\n    color: #ecf0f1;\n    padding: 15px;\n    border-radius: 8px;\n    font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\n    margin: 15px 0;\n    border: 1px solid #34495e;\n}\n\n.instruction {\n    background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);\n    color: white;\n    padding: 20px;\n    border-radius: 10px;\n    margin: 20px 0;\n}\n\n.celebration {\n    font-size: 3rem;\n    text-align: center;\n    margin: 20px 0;\n}\n\n.comparison-section {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 20px;\n    margin: 20px 0;\n}\n\n.comparison-card {\n    background: #f8f9fa;\n    padding: 20px;\n    border-radius: 15px;\n    border: 2px solid #dee2e6;\n}\n\n.comparison-card.textcontent {\n    border-color: #28a745;\n}\n\n.comparison-card.innerhtml {\n    border-color: #dc3545;\n}\n\n.comparison-card h4 {\n    margin-top: 0;\n    color: #495057;\n}\n\n.warning-box {\n    background: linear-gradient(135deg, #ff7675 0%, #fd79a8 100%);\n    color: white;\n    padding: 20px;\n    border-radius: 15px;\n    margin: 20px 0;\n    border: 2px solid #e17055;\n}\n\n.warning-box h4 {\n    margin-top: 0;\n}\n\n.stats-section {\n    background: rgba(52, 73, 94, 0.1);\n    padding: 20px;\n    border-radius: 15px;\n    margin: 20px 0;\n}\n\n.stats-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n    gap: 15px;\n    margin: 15px 0;\n}\n\n.stat-item {\n    background: white;\n    padding: 15px;\n    border-radius: 10px;\n    text-align: center;\n    border: 2px solid #3498db;\n}\n\n.stat-number {\n    font-size: 1.8rem;\n    font-weight: bold;\n    color: #3498db;\n}"
    },
    "js": {
      "template": "// JavaScript実装エリア\n\n// ここに実装してください\nconsole.log('課題実装を開始してください');",
      "expected": "console.log(\"🏗️ ステップ17.2: HTML内容変更入門を開始します！\");\nconsole.log(\"==========================================\");\n\n// 統計用変数\nlet totalGenerations = 0;\nlet generationCounts = {\n    heading: 0,\n    list: 0,\n    card: 0,\n    table: 0,\n    form: 0\n};\n\n// DOM要素の取得\nlet contentDisplay = document.getElementById(\"content-display\");\n\n// HTML生成を処理する共通関数\nfunction generateHTML(htmlContent, generationType, buttonName) {\n    // HTMLコンテンツを設定\n    contentDisplay.innerHTML = htmlContent;\n    \n    // 統計を更新\n    totalGenerations++;\n    if (generationType && generationCounts.hasOwnProperty(generationType)) {\n        generationCounts[generationType]++;\n    }\n    \n    updateStats();\n    \n    // ログ出力\n    console.log(`${buttonName}: HTMLコンテンツを生成しました`);\n    console.log(\"生成されたHTML:\");\n    console.log(htmlContent);\n    console.log(`総生成回数: ${totalGenerations}`);\n}\n\n// 統計表示を更新する関数\nfunction updateStats() {\n    document.getElementById(\"total-generations\").textContent = totalGenerations;\n    document.getElementById(\"heading-count\").textContent = generationCounts.heading;\n    document.getElementById(\"list-count\").textContent = generationCounts.list;\n    document.getElementById(\"card-count\").textContent = generationCounts.card;\n    document.getElementById(\"table-count\").textContent = generationCounts.table;\n    document.getElementById(\"form-count\").textContent = generationCounts.form;\n}\n\n// 見出しとテキストボタン\ndocument.getElementById(\"heading-btn\").addEventListener(\"click\", function() {\n    let headingHTML = `\n        <h3 style=\"color: #3498db; border-bottom: 2px solid #3498db; padding-bottom: 10px;\">\n            📝 動的に生成された見出し\n        </h3>\n        <p style=\"font-size: 1.1rem; line-height: 1.8;\">\n            これは<strong>innerHTML</strong>を使用して動的に生成されたコンテンツです。\n            HTMLタグが実際に解釈され、装飾が適用されていることがわかります。\n        </p>\n        <p style=\"background: #e8f4f8; padding: 15px; border-radius: 8px; border-left: 4px solid #3498db;\">\n            💡 <strong>ポイント:</strong> HTMLタグが文字列ではなく、実際のHTML要素として表示されています。\n        </p>\n    `;\n    generateHTML(headingHTML, \"heading\", \"見出しボタン\");\n});\n\n// リスト構造ボタン\ndocument.getElementById(\"list-btn\").addEventListener(\"click\", function() {\n    let listHTML = `\n        <h3 style=\"color: #8e44ad;\">📋 学習の進捗チェックリスト</h3>\n        <ul style=\"list-style-type: none; padding: 0;\">\n            <li style=\"background: #d4edda; padding: 10px; margin: 5px 0; border-radius: 5px; border-left: 4px solid #28a745;\">\n                ✅ JavaScript基本構文の理解\n            </li>\n            <li style=\"background: #d4edda; padding: 10px; margin: 5px 0; border-radius: 5px; border-left: 4px solid #28a745;\">\n                ✅ DOM操作の基本\n            </li>\n            <li style=\"background: #fff3cd; padding: 10px; margin: 5px 0; border-radius: 5px; border-left: 4px solid #ffc107;\">\n                🔄 HTML動的生成（学習中）\n            </li>\n            <li style=\"background: #f8d7da; padding: 10px; margin: 5px 0; border-radius: 5px; border-left: 4px solid #dc3545;\">\n                ⏳ 高度な配列操作（未学習）\n            </li>\n        </ul>\n        <p style=\"font-style: italic; color: #6c757d;\">各項目の色分けで進捗状況を視覚的に表現しています。</p>\n    `;\n    generateHTML(listHTML, \"list\", \"リストボタン\");\n});\n\n// 情報カードボタン\ndocument.getElementById(\"card-btn\").addEventListener(\"click\", function() {\n    let cardHTML = `\n        <div style=\"background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 25px; border-radius: 15px; box-shadow: 0 4px 15px rgba(0,0,0,0.2);\">\n            <h3 style=\"margin-top: 0; color: #fff;\">🎴 プロフィールカード</h3>\n            <div style=\"display: flex; align-items: center; gap: 20px; flex-wrap: wrap;\">\n                <div style=\"background: rgba(255,255,255,0.2); width: 80px; height: 80px; border-radius: 50%; display: flex; align-items: center; justify-content: center; font-size: 2rem;\">\n                    👨‍💻\n                </div>\n                <div style=\"flex: 1;\">\n                    <h4 style=\"margin: 0 0 10px 0;\">未来のWeb開発者</h4>\n                    <p style=\"margin: 5px 0;\">📍 学習場所: プログラミングの世界</p>\n                    <p style=\"margin: 5px 0;\">💼 目標: フルスタック開発者</p>\n                    <p style=\"margin: 5px 0;\">🎯 現在のステップ: 17.2 HTML内容変更</p>\n                </div>\n            </div>\n            <div style=\"background: rgba(255,255,255,0.1); padding: 15px; border-radius: 10px; margin-top: 15px;\">\n                <strong>📈 進捗状況:</strong> JavaScriptの基本をマスターし、DOM操作を学習中！\n            </div>\n        </div>\n    `;\n    generateHTML(cardHTML, \"card\", \"カードボタン\");\n});\n\n// テーブル表示ボタン\ndocument.getElementById(\"table-btn\").addEventListener(\"click\", function() {\n    let tableHTML = `\n        <h3 style=\"color: #e67e22;\">📊 学習統計テーブル</h3>\n        <div style=\"overflow-x: auto;\">\n            <table style=\"width: 100%; border-collapse: collapse; margin: 15px 0;\">\n                <thead>\n                    <tr style=\"background: #34495e; color: white;\">\n                        <th style=\"padding: 12px; border: 1px solid #ddd; text-align: left;\">ステップ</th>\n                        <th style=\"padding: 12px; border: 1px solid #ddd; text-align: left;\">学習内容</th>\n                        <th style=\"padding: 12px; border: 1px solid #ddd; text-align: center;\">進捗</th>\n                        <th style=\"padding: 12px; border: 1px solid #ddd; text-align: center;\">難易度</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr style=\"background: #f8f9fa;\">\n                        <td style=\"padding: 10px; border: 1px solid #ddd;\">15.1-15.5</td>\n                        <td style=\"padding: 10px; border: 1px solid #ddd;\">JavaScript導入</td>\n                        <td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">✅ 完了</td>\n                        <td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">⭐⭐</td>\n                    </tr>\n                    <tr>\n                        <td style=\"padding: 10px; border: 1px solid #ddd;\">16.1-16.3</td>\n                        <td style=\"padding: 10px; border: 1px solid #ddd;\">DOM操作</td>\n                        <td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">✅ 完了</td>\n                        <td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">⭐⭐⭐</td>\n                    </tr>\n                    <tr style=\"background: #fff3cd;\">\n                        <td style=\"padding: 10px; border: 1px solid #ddd;\">17.1-17.4</td>\n                        <td style=\"padding: 10px; border: 1px solid #ddd;\">動的コンテンツ</td>\n                        <td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">🔄 学習中</td>\n                        <td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">⭐⭐⭐</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <p style=\"font-size: 0.9rem; color: #6c757d; font-style: italic;\">\n            このテーブルは動的に生成されており、実際のプロジェクトでは データベースから取得した情報を表示することができます。\n        </p>\n    `;\n    generateHTML(tableHTML, \"table\", \"テーブルボタン\");\n});\n\n// フォーム要素ボタン\ndocument.getElementById(\"form-btn\").addEventListener(\"click\", function() {\n    let formHTML = `\n        <h3 style=\"color: #16a085;\">📝 学習フィードバックフォーム</h3>\n        <div style=\"background: #f8f9fa; padding: 20px; border-radius: 10px; border: 2px solid #16a085;\">\n            <div style=\"margin-bottom: 15px;\">\n                <label style=\"display: block; font-weight: bold; margin-bottom: 5px; color: #2c3e50;\">\n                    🎯 今日の学習満足度:\n                </label>\n                <div style=\"display: flex; gap: 10px; align-items: center;\">\n                    <input type=\"radio\" id=\"rating1\" name=\"rating\" value=\"1\">\n                    <label for=\"rating1\">⭐</label>\n                    <input type=\"radio\" id=\"rating2\" name=\"rating\" value=\"2\">\n                    <label for=\"rating2\">⭐⭐</label>\n                    <input type=\"radio\" id=\"rating3\" name=\"rating\" value=\"3\" checked>\n                    <label for=\"rating3\">⭐⭐⭐</label>\n                    <input type=\"radio\" id=\"rating4\" name=\"rating\" value=\"4\">\n                    <label for=\"rating4\">⭐⭐⭐⭐</label>\n                    <input type=\"radio\" id=\"rating5\" name=\"rating\" value=\"5\">\n                    <label for=\"rating5\">⭐⭐⭐⭐⭐</label>\n                </div>\n            </div>\n            \n            <div style=\"margin-bottom: 15px;\">\n                <label style=\"display: block; font-weight: bold; margin-bottom: 5px; color: #2c3e50;\">\n                    📚 学習したい次のトピック:\n                </label>\n                <select style=\"width: 100%; padding: 8px; border: 2px solid #bdc3c7; border-radius: 5px;\">\n                    <option>配列操作</option>\n                    <option>関数の作成</option>\n                    <option>オブジェクト操作</option>\n                    <option>イベント処理</option>\n                </select>\n            </div>\n            \n            <div style=\"margin-bottom: 15px;\">\n                <label style=\"display: block; font-weight: bold; margin-bottom: 5px; color: #2c3e50;\">\n                    💭 感想やコメント:\n                </label>\n                <textarea style=\"width: 100%; height: 60px; padding: 8px; border: 2px solid #bdc3c7; border-radius: 5px; resize: vertical;\" placeholder=\"学習の感想をお聞かせください...\"></textarea>\n            </div>\n            \n            <button style=\"background: linear-gradient(135deg, #16a085, #3498db); color: white; border: none; padding: 10px 20px; border-radius: 5px; cursor: pointer; font-weight: bold;\" onclick=\"alert('フォームの送信機能は次のステップで学習します！')\">\n                📤 フィードバック送信\n            </button>\n        </div>\n        <p style=\"font-size: 0.9rem; color: #e67e22; font-style: italic;\">\n            ⚠️ これは表示のみのデモです。実際の送信機能は後のステップで学習します。\n        </p>\n    `;\n    generateHTML(formHTML, \"form\", \"フォームボタン\");\n});\n\n// クリアボタン\ndocument.getElementById(\"clear-btn\").addEventListener(\"click\", function() {\n    let clearHTML = `\n        <h3 style=\"color: #6c757d;\">🧹 コンテンツがクリアされました</h3>\n        <p style=\"color: #6c757d; text-align: center; font-style: italic;\">\n            表示エリアがリセットされました。上のボタンから新しいコンテンツを生成してください。\n        </p>\n        <div style=\"text-align: center; margin: 20px 0;\">\n            <div style=\"font-size: 3rem;\">🆕</div>\n            <p style=\"margin-top: 10px;\">新しいスタート！</p>\n        </div>\n    `;\n    generateHTML(clearHTML, null, \"クリアボタン\");\n});\n\n// 初期統計表示\nupdateStats();\n\nconsole.log(\"✅ HTML動的生成システムが初期化されました！\");\nconsole.log(\"💡 各ボタンをクリックして、HTMLコンテンツがどのように生成されるか確認してください！\");\nconsole.log(\"🔍 開発者ツールのElementsタブでHTML構造の変化も確認してみてください！\");"
    }
  },
  "expectedResult": {
    "htmlGeneration": "見出し、リスト、カード、テーブルが動的生成される",
    "templateLiterals": "バッククォートを使ったHTML生成が動作する",
    "securityAware": "安全なHTML操作が実装される",
    "behavior": "6種類のHTML生成パターンが正しく動作する"
  },
  "checks": [
    {
      "id": "doctype",
      "name": "DOCTYPE宣言",
      "type": "structure",
      "message": "DOCTYPE html宣言が必要です"
    },
    {
      "id": "html",
      "name": "<html>タグ",
      "type": "structure",
      "message": "<html>タグが必要です"
    },
    {
      "id": "head",
      "name": "<head>セクション",
      "type": "structure",
      "message": "<head>セクションが必要です"
    },
    {
      "id": "body",
      "name": "<body>セクション",
      "type": "structure",
      "message": "<body>セクションが必要です"
    },
    {
      "id": "title",
      "name": "<title>タグ",
      "type": "structure",
      "message": "<title>タグと内容が必要です"
    },
    {
      "id": "css-content",
      "name": "CSSスタイル",
      "type": "css",
      "message": "CSSでスタイルを設定してください"
    },
    {
      "id": "js-content",
      "name": "JavaScript",
      "type": "js",
      "message": "JavaScriptで動的な動作を実装してください"
    }
  ]
}
{
  "id": "js-advanced-02",
  "title": "配列の絞り込み（filter基礎）",
  "description": "filter()メソッドを使って条件に合う要素だけを抽出します。ECサイトのカテゴリフィルタや在庫絞り込みに使う重要な技術です。",
  "category": "javascript-advanced",
  "instructions": [
    "セレクトボックス（#category）でカテゴリを取得する",
    "products を filter() で絞り込む（選択カテゴリ一致または all は全件）",
    "<template id=\"item-template\"> を用意し、for ループで cloneNode(true) して要素を作る",
    "textContent で値を差し込み、既存の出力コンテナ（例: #list）へ appendChild する（innerHTML は使わない）"
  ],
  "implementationPoints": [
    "必須: filter()メソッドを使って配列を絞り込むこと",
    "必須: 条件に合う要素だけを含む新しい配列が返ること",
    "必須: セレクトボックスのchangeイベントで絞り込みを実行すること",
    "推奨: 「すべて」選択時は全商品を表示すること"
  ],
  "files": {
    "html": {
      "template": "",
      "expected": "__INCLUDE__: problems/frontend/expected/js-advanced-02/files.html.expected"
    },
    "css": {
      "template": "",
      "expected": "__INCLUDE__: problems/frontend/expected/js-advanced-02/files.css.expected"
    },
    "js": {
      "template": "// 商品データ（配列）\nconst products = [\n  { id: 1, name: 'ノートパソコン', category: '家電', price: 89800 },\n  { id: 2, name: 'ボールペン', category: '文具', price: 150 },\n  { id: 3, name: 'マウス', category: '家電', price: 1980 },\n  { id: 4, name: 'ノート', category: '文具', price: 200 }\n];\n\n// TODO: filter() を使ってカテゴリで絞り込む\n// TODO: map() と join('') でHTMLに変換\n// TODO: #list に innerHTML で挿入\n\nfunction renderProducts(selectedCategory) {\n  // ここに実装してください\n}\n\n// カテゴリ変更時に実行\ndocument.getElementById('category').addEventListener('change', function(e) {\n  renderProducts(e.target.value);\n});\n\n// 初期表示\nrenderProducts('all');",
      "expected": "__INCLUDE__: problems/frontend/expected/js-advanced-02/files.js.expected"
    }
  }
}

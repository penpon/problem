{
  "id": "js-advanced-12",
  "title": "オブジェクトとデータ構造",
  "description": "オブジェクト指向プログラミングの入門として、オブジェクトリテラル・プロパティアクセス・メソッドを学習します",
  "category": "javascript-advanced",
  "difficulty": 4,
  "instructions": [
    "オブジェクトリテラルの基本構文と作成方法を学ぶ",
    "プロパティアクセス（ドット記法とブラケット記法）を習得する",
    "メソッド（オブジェクトに属する関数）の定義と実行を理解する",
    "thisの基本概念と使い方を理解する"
  ],
  "files": {
    "html": {
      "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>課題実装</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n    <div class=\"container\">\n        <h1>課題を実装してください</h1>\n        <!-- ここに実装してください -->\n    </div>\n    \n    <script src=\"script.js\"></script>\n</body>\n</html>",
      "expected": "<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>オブジェクト最小デモ</title>\n  <style>\n    body{font-family:system-ui, -apple-system, 'Segoe UI', sans-serif;margin:20px}\n    .box{border:1px solid #ddd;border-radius:8px;padding:12px;margin-bottom:16px}\n    label{display:inline-block;min-width:90px}\n    button{margin-top:8px;padding:6px 12px}\n    pre{background:#2c3e50;color:#ecf0f1;padding:10px;border-radius:6px}\n  </style>\n</head>\n<body>\n  <h1>オブジェクト最小デモ</h1>\n\n  <div class=\"box\">\n    <h2>基本オブジェクト作成</h2>\n    <div><label for=\"name\">名前</label><input id=\"name\" value=\"田中太郎\"></div>\n    <div><label for=\"age\">年齢</label><input id=\"age\" type=\"number\" value=\"25\"></div>\n    <button id=\"makeBtn\">作成</button>\n    <pre id=\"objOut\">{}</pre>\n  </div>\n\n  <div class=\"box\">\n    <h2>メソッド実行</h2>\n    <button id=\"greetBtn\">greet()</button>\n    <div id=\"greetOut\"></div>\n  </div>\n\n  <script>\n    // 基本オブジェクト + メソッド\n    let person = { name: '未作成', age: 0, greet(){ return `こんにちは、${this.name}さん(${this.age})`; } };\n\n    const render = () => {\n      document.getElementById('objOut').textContent = JSON.stringify(person, null, 2);\n    };\n\n    document.getElementById('makeBtn').addEventListener('click', () => {\n      const n = document.getElementById('name').value.trim() || '名無し';\n      const a = parseInt(document.getElementById('age').value) || 0;\n      person = { name: n, age: a, greet: person.greet };\n      render();\n    });\n\n    document.getElementById('greetBtn').addEventListener('click', () => {\n      document.getElementById('greetOut').textContent = person.greet();\n    });\n\n    render();\n  </script>\n</body>\n</html>"
    },
    "css": {
      "template": "/* 基本的なスタイル */\nbody {\n    font-family: Arial, sans-serif;\n    margin: 40px;\n    background: #f5f5f5;\n}\n\n.container {\n    max-width: 800px;\n    margin: 0 auto;\n    background: white;\n    padding: 20px;\n    border-radius: 10px;\n    box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n}\n\n/* ここに実装してください */",
      "expected": "body{font-family:system-ui,-apple-system,'Segoe UI',sans-serif;margin:20px}\n.box{border:1px solid #ddd;border-radius:8px;padding:12px;margin-bottom:16px}\nlabel{display:inline-block;min-width:90px}\nbutton{margin-top:8px;padding:6px 12px}\npre{background:#2c3e50;color:#ecf0f1;padding:10px;border-radius:6px}"
    },
    "js": {
      "template": "// JavaScript実装エリア\n\n// ここに実装してください\nconsole.log('課題実装を開始してください');",
      "expected": "// 基本オブジェクト + メソッド\nlet person={name:'未作成',age:0,greet(){return `こんにちは、${this.name}さん(${this.age})`;}};\n\nconst render=()=>{\n  document.getElementById('objOut').textContent=JSON.stringify(person,null,2);\n};\n\ndocument.getElementById('makeBtn').addEventListener('click',()=>{\n  const n=document.getElementById('name').value.trim()||'名無し';\n  const a=parseInt(document.getElementById('age').value)||0;\n  person={name:n,age:a,greet:person.greet};\n  render();\n});\n\ndocument.getElementById('greetBtn').addEventListener('click',()=>{\n  document.getElementById('greetOut').textContent=person.greet();\n});\n\nrender();"
    }
  },
  "expectedResult": {
    "basicObject": "入力からオブジェクトが生成され表示される",
    "method": "greet() メソッド実行で挨拶が表示される",
    "behavior": "2つのボタンが正しく機能する"
  },
  "checks": [
    {
      "id": "doctype",
      "name": "DOCTYPE宣言",
      "type": "structure",
      "message": "DOCTYPE html宣言が必要です"
    },
    {
      "id": "html",
      "name": "<html>タグ",
      "type": "structure",
      "message": "<html>タグが必要です"
    },
    {
      "id": "head",
      "name": "<head>セクション",
      "type": "structure",
      "message": "<head>セクションが必要です"
    },
    {
      "id": "body",
      "name": "<body>セクション",
      "type": "structure",
      "message": "<body>セクションが必要です"
    },
    {
      "id": "title",
      "name": "<title>タグ",
      "type": "structure",
      "message": "<title>タグと内容が必要です"
    },
    {
      "id": "css-content",
      "name": "CSSスタイル",
      "type": "css",
      "message": "CSSでスタイルを設定してください"
    },
    {
      "id": "js-content",
      "name": "JavaScript",
      "type": "js",
      "message": "JavaScriptで動的な動作を実装してください"
    }
  ]
}
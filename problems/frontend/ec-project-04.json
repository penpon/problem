{
  "id": "ec-project-04",
  "title": "59: 基本ソート",
  "description": "ECプロジェクトの基本機能 - 配列ソートと表示",
  "category": "ec-project",
  "instructions": [
    "JavaScriptの配列 products を sort() で並べ替え、#productList にカード表示する",
    "Bootstrapのグリッド（.container > .row > .col-*-*）でレスポンシブ配置にする"
  ],
  "files": {
    "html": {
      "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>課題実装</title>\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n    <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n    <div class=\"container\">\n        <h1>課題を実装してください</h1>\n        <!-- ここに実装してください -->\n    </div>\n    \n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\n    <script src=\"script.js\"></script>\n</body>\n</html>",
      "expected": "<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <title>基本ソート（最小）</title>\n  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n</head>\n<body>\n  <div class=\"container py-4\">\n    <h1 class=\"h4 mb-3\">並び替え</h1>\n    <div class=\"row g-3 mb-3\">\n      <div class=\"col-12 col-sm-6 col-lg-4\">\n        <select id=\"sortSelect\" class=\"form-select\">\n          <option value=\"price-asc\">価格 昇順</option>\n          <option value=\"price-desc\">価格 降順</option>\n          <option value=\"name-asc\">名前 昇順</option>\n        </select>\n      </div>\n    </div>\n    <div id=\"productList\" class=\"row g-3\"><!-- JSで挿入 --></div>\n  </div>\n  <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\n  <script src=\"script.js\"></script>\n</body>\n</html>"
    },
    "css": {
      "template": "/* 基本的なスタイル */\nbody {\n    font-family: Arial, sans-serif;\n    margin: 40px;\n    background: #f5f5f5;\n}\n\n.container {\n    max-width: 800px;\n    margin: 0 auto;\n    background: white;\n    padding: 20px;\n    border-radius: 10px;\n    box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n}\n\n/* ここに実装してください */",
      "expected": "/* 最小スタイル（装飾なし） */\n.card-img-top { width: 100%; height: auto; display: block; }"
    },
    "js": {
      "template": "// JavaScript実装エリア\n\n// ここに実装してください\nconsole.log('課題実装を開始してください');",
      "expected": "// 基本ソート（最小）\n// select の値に応じて products を sort() し、#productList に描画\n\nconst products = [\n  { name: 'Phone', price: 50000, image: 'https://via.placeholder.com/600x400?text=Phone' },\n  { name: 'T-Shirt', price: 2000, image: 'https://via.placeholder.com/600x400?text=T-Shirt' },\n  { name: 'Coffee', price: 800, image: 'https://via.placeholder.com/600x400?text=Coffee' },\n  { name: 'Headphones', price: 12000, image: 'https://via.placeholder.com/600x400?text=Headphones' }\n];\n\nfunction render(list, items) {\n  list.innerHTML = items.map(p => `\n    <div class=\"col-12 col-sm-6 col-lg-4\">\n      <div class=\"card\">\n        <img class=\"card-img-top\" src=\"${p.image}\" alt=\"${p.name}\">\n        <div class=\"card-body\">\n          <h2 class=\"h6 mb-1\">${p.name}</h2>\n          <p class=\"mb-0\">¥${p.price.toLocaleString()}</p>\n        </div>\n      </div>\n    </div>\n  `).join('');\n}\n\nfunction sortProducts(value) {\n  const [key, dir] = value.split('-');\n  return [...products].sort((a, b) => {\n    let va = a[key], vb = b[key];\n    if (typeof va === 'string') { va = va.toLowerCase(); vb = vb.toLowerCase(); }\n    const cmp = va < vb ? -1 : va > vb ? 1 : 0;\n    return dir === 'desc' ? -cmp : cmp;\n  });\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const select = document.getElementById('sortSelect');\n  const list = document.getElementById('productList');\n  render(list, sortProducts(select.value));\n  select.addEventListener('change', () => {\n    render(list, sortProducts(select.value));\n  });\n});"
    }
  },
  "expectedResult": {
    "console": "",
    "behavior": "選択した条件に応じて商品カードが並び替えられ、1〜3列で表示される"
  },
  "checks": [
    {
      "id": "js-sort",
      "name": "sort() による並び替え",
      "type": "js",
      "message": "select の値に応じて配列を sort() し、#productList を更新していること"
    },
    {
      "id": "bootstrap-grid",
      "name": "Bootstrapグリッド",
      "type": "css",
      "message": ".container/.row/.col-*-* によるレスポンシブグリッドが使用されていること"
    }
  ],
  "hints": [
    "value.split('-') でキーと方向を取り、比較関数で cmp を返す",
    ".container > .row > .col-12 col-sm-6 col-lg-4 の列指定でレスポンシブ配置"
  ]
}

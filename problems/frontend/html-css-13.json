{
  "id": "html-css-13",
  "title": "13: Flexbox基礎",
  "description": "display: flexで現代的なレイアウトを作り、要素の配置を自由自在にコントロールする",
  "category": "css-advanced",
  "difficulty": 3,
  "instructions": [
    ".flex-containerクラスにdisplay: flexを設定してください",
    ".justify-centerクラスにjustify-content: centerを設定してください",
    ".justify-betweenクラスにjustify-content: space-betweenを設定してください",
    ".align-centerクラスにalign-items: centerとheight: 120pxを設定してください",
    ".direction-columnクラスにflex-direction: column、height: 200px、width: 200px、margin: 0 autoを設定してください"
  ],
  "files": {
    "html": {
      "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>課題実装</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n    <div class=\"container\">\n        <h1>課題を実装してください</h1>\n        <!-- ここに実装してください -->\n    </div>\n    \n    <script src=\"script.js\"></script>\n</body>\n</html>",
      "expected": "<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Flexbox基礎</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n    <h1>Flexbox基礎の練習</h1>\n    \n    <h2>1. 基本的なFlexbox</h2>\n    <div class=\"basic-demo\">\n        <div class=\"flex-container\">\n            <div class=\"flex-item\">アイテム1</div>\n            <div class=\"flex-item\">アイテム2</div>\n            <div class=\"flex-item\">アイテム3</div>\n        </div>\n        <p>通常のdiv（ブロック要素）は縦に並びますが、Flexboxでは横に並びます</p>\n    </div>\n    \n    <h2>2. justify-content（水平方向の配置）</h2>\n    <div class=\"justify-demo\">\n        <h3>flex-start（左寄せ）</h3>\n        <div class=\"flex-container justify-start\">\n            <div class=\"flex-item\">A</div>\n            <div class=\"flex-item\">B</div>\n            <div class=\"flex-item\">C</div>\n        </div>\n        \n        <h3>center（中央寄せ）</h3>\n        <div class=\"flex-container justify-center\">\n            <div class=\"flex-item\">A</div>\n            <div class=\"flex-item\">B</div>\n            <div class=\"flex-item\">C</div>\n        </div>\n        \n        <h3>flex-end（右寄せ）</h3>\n        <div class=\"flex-container justify-end\">\n            <div class=\"flex-item\">A</div>\n            <div class=\"flex-item\">B</div>\n            <div class=\"flex-item\">C</div>\n        </div>\n        \n        <h3>space-between（両端揃え）</h3>\n        <div class=\"flex-container justify-between\">\n            <div class=\"flex-item\">A</div>\n            <div class=\"flex-item\">B</div>\n            <div class=\"flex-item\">C</div>\n        </div>\n        \n        <h3>space-around（等間隔）</h3>\n        <div class=\"flex-container justify-around\">\n            <div class=\"flex-item\">A</div>\n            <div class=\"flex-item\">B</div>\n            <div class=\"flex-item\">C</div>\n        </div>\n    </div>\n    \n    <h2>3. align-items（垂直方向の配置）</h2>\n    <div class=\"align-demo\">\n        <h3>flex-start（上寄せ）</h3>\n        <div class=\"flex-container align-start tall\">\n            <div class=\"flex-item\">A</div>\n            <div class=\"flex-item large\">B<br>大きい</div>\n            <div class=\"flex-item\">C</div>\n        </div>\n        \n        <h3>center（中央寄せ）</h3>\n        <div class=\"flex-container align-center tall\">\n            <div class=\"flex-item\">A</div>\n            <div class=\"flex-item large\">B<br>大きい</div>\n            <div class=\"flex-item\">C</div>\n        </div>\n        \n        <h3>flex-end（下寄せ）</h3>\n        <div class=\"flex-container align-end tall\">\n            <div class=\"flex-item\">A</div>\n            <div class=\"flex-item large\">B<br>大きい</div>\n            <div class=\"flex-item\">C</div>\n        </div>\n        \n        <h3>stretch（高さを揃える）</h3>\n        <div class=\"flex-container align-stretch tall\">\n            <div class=\"flex-item\">A</div>\n            <div class=\"flex-item large\">B<br>大きい</div>\n            <div class=\"flex-item\">C</div>\n        </div>\n    </div>\n    \n    <h2>4. flex-direction（配置方向）</h2>\n    <div class=\"direction-demo\">\n        <h3>row（横並び・デフォルト）</h3>\n        <div class=\"flex-container direction-row\">\n            <div class=\"flex-item\">1</div>\n            <div class=\"flex-item\">2</div>\n            <div class=\"flex-item\">3</div>\n        </div>\n        \n        <h3>column（縦並び）</h3>\n        <div class=\"flex-container direction-column\">\n            <div class=\"flex-item\">1</div>\n            <div class=\"flex-item\">2</div>\n            <div class=\"flex-item\">3</div>\n        </div>\n    </div>\n    \n    <h2>5. 完璧な中央寄せ</h2>\n    <div class=\"perfect-center\">\n        <div class=\"center-content\">\n            <h3>完璧な中央</h3>\n            <p>水平・垂直両方向で中央に配置されています</p>\n        </div>\n    </div>\n    \n    <h2>6. 実用例：ナビゲーション</h2>\n    <nav class=\"main-nav\">\n        <div class=\"logo\">MyLogo</div>\n        <ul class=\"nav-links\">\n            <li><a href=\"#\">ホーム</a></li>\n            <li><a href=\"#\">サービス</a></li>\n            <li><a href=\"#\">会社概要</a></li>\n            <li><a href=\"#\">お問い合わせ</a></li>\n        </ul>\n    </nav>\n    \n    <h2>7. 実用例：カードレイアウト</h2>\n    <div class=\"card-gallery\">\n        <div class=\"card\">\n            <h4>カード1</h4>\n            <p>Flexboxで美しく配置されたカードです。</p>\n            <button>詳細を見る</button>\n        </div>\n        <div class=\"card\">\n            <h4>カード2</h4>\n            <p>レスポンシブ対応で様々な画面サイズに対応します。</p>\n            <button>詳細を見る</button>\n        </div>\n        <div class=\"card\">\n            <h4>カード3</h4>\n            <p>高さが異なってもキレイに揃います。</p>\n            <button>詳細を見る</button>\n        </div>\n    </div>\n</body>\n</html>"
    },
    "css": {
      "template": "/* 基本的なスタイル */\nbody {\n    font-family: Arial, sans-serif;\n    margin: 40px;\n    background: #f5f5f5;\n}\n\n.container {\n    max-width: 800px;\n    margin: 0 auto;\n    background: white;\n    padding: 20px;\n    border-radius: 10px;\n    box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n}\n\n/* ここに実装してください */",
      "expected": "/* Flexbox基礎 - display: flex とレイアウト制御 */\n\n/* 基本スタイル */\nbody {\n    font-family: Arial, sans-serif;\n    margin: 0;\n    padding: 20px;\n    background: linear-gradient(135deg, #74b9ff 0%, #0984e3 100%);\n    min-height: 100vh;\n    color: white;\n}\n\nh1 {\n    text-align: center;\n    color: white;\n    margin-bottom: 40px;\n    text-shadow: 2px 2px 4px rgba(0,0,0,0.3);\n}\n\nh2 {\n    color: #fff;\n    margin-top: 60px;\n    margin-bottom: 30px;\n    border-left: 4px solid #00cec9;\n    padding-left: 15px;\n    background: rgba(0,0,0,0.1);\n    padding: 15px;\n    border-radius: 8px;\n}\n\nh3 {\n    color: #ddd;\n    margin: 25px 0 15px 0;\n    font-size: 16px;\n}\n\nh4 {\n    margin-top: 0;\n    color: #333;\n}\n\np {\n    margin: 10px 0;\n    color: #f1f2f6;\n}\n\n/* デモ用コンテナ */\n.basic-demo, .justify-demo, .align-demo, .direction-demo {\n    background: rgba(255,255,255,0.1);\n    padding: 30px;\n    margin: 30px 0;\n    border-radius: 15px;\n    backdrop-filter: blur(10px);\n}\n\n/* 1. 基本的なFlexbox */\n.flex-container {\n    display: flex;\n    background-color: rgba(0,0,0,0.2);\n    border: 2px solid rgba(255,255,255,0.3);\n    border-radius: 8px;\n    padding: 20px;\n    margin: 20px 0;\n}\n\n.flex-item {\n    background-color: #6c5ce7;\n    color: white;\n    padding: 15px 20px;\n    margin: 5px;\n    border-radius: 8px;\n    text-align: center;\n    border: 2px solid #a29bfe;\n    transition: all 0.3s ease;\n}\n\n.flex-item:hover {\n    background-color: #5f3dc4;\n    transform: translateY(-3px);\n    box-shadow: 0 5px 15px rgba(0,0,0,0.3);\n}\n\n/* 2. justify-content のデモ */\n.justify-start { justify-content: flex-start; }\n.justify-center { justify-content: center; }\n.justify-end { justify-content: flex-end; }\n.justify-between { justify-content: space-between; }\n.justify-around { justify-content: space-around; }\n\n/* 3. align-items のデモ */\n.tall {\n    height: 120px;\n}\n\n.large {\n    font-size: 14px;\n    padding: 20px;\n}\n\n.align-start { align-items: flex-start; }\n.align-center { align-items: center; }\n.align-end { align-items: flex-end; }\n.align-stretch { align-items: stretch; }\n\n/* 4. flex-direction のデモ */\n.direction-row { \n    flex-direction: row; \n}\n\n.direction-column { \n    flex-direction: column;\n    height: 200px;\n    width: 200px;\n    margin: 0 auto;\n}\n\n/* 5. 完璧な中央寄せ */\n.perfect-center {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 300px;\n    background: rgba(0,0,0,0.2);\n    border-radius: 15px;\n    margin: 30px 0;\n}\n\n.center-content {\n    background: rgba(255,255,255,0.95);\n    color: #333;\n    padding: 40px;\n    border-radius: 15px;\n    text-align: center;\n    box-shadow: 0 10px 30px rgba(0,0,0,0.3);\n}\n\n/* 6. 実用例：ナビゲーション */\n.main-nav {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background: rgba(0,0,0,0.3);\n    padding: 15px 30px;\n    border-radius: 12px;\n    margin: 30px 0;\n    backdrop-filter: blur(10px);\n}\n\n.logo {\n    font-size: 24px;\n    font-weight: bold;\n    color: #00cec9;\n}\n\n.nav-links {\n    display: flex;\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    gap: 30px;\n}\n\n.nav-links a {\n    color: white;\n    text-decoration: none;\n    padding: 10px 15px;\n    border-radius: 8px;\n    transition: all 0.3s ease;\n}\n\n.nav-links a:hover {\n    background-color: rgba(255,255,255,0.2);\n    transform: translateY(-2px);\n}\n\n/* 7. 実用例：カードレイアウト */\n.card-gallery {\n    display: flex;\n    gap: 25px;\n    justify-content: center;\n    flex-wrap: wrap;\n    margin: 40px 0;\n}\n\n.card {\n    background: rgba(255,255,255,0.95);\n    color: #333;\n    border-radius: 15px;\n    padding: 25px;\n    width: 250px;\n    text-align: center;\n    box-shadow: 0 8px 25px rgba(0,0,0,0.2);\n    transition: all 0.3s ease;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n}\n\n.card:hover {\n    transform: translateY(-8px);\n    box-shadow: 0 15px 35px rgba(0,0,0,0.3);\n}\n\n.card p {\n    color: #666;\n    flex-grow: 1;\n    margin: 15px 0;\n}\n\n.card button {\n    background: linear-gradient(135deg, #74b9ff, #0984e3);\n    color: white;\n    border: none;\n    padding: 12px 24px;\n    border-radius: 25px;\n    cursor: pointer;\n    font-size: 14px;\n    transition: all 0.3s ease;\n    margin-top: auto;\n}\n\n.card button:hover {\n    transform: scale(1.05);\n    box-shadow: 0 5px 15px rgba(116, 185, 255, 0.4);\n}"
    },
    "js": {
      "template": "",
      "expected": ""
    }
  },
  "checks": [
    {
      "id": "doctype",
      "name": "DOCTYPE宣言",
      "type": "structure",
      "message": "DOCTYPE html宣言が必要です"
    },
    {
      "id": "html",
      "name": "<html>タグ",
      "type": "structure",
      "message": "<html>タグが必要です"
    },
    {
      "id": "head",
      "name": "<head>セクション",
      "type": "structure",
      "message": "<head>セクションが必要です"
    },
    {
      "id": "body",
      "name": "<body>セクション",
      "type": "structure",
      "message": "<body>セクションが必要です"
    },
    {
      "id": "title",
      "name": "<title>タグ",
      "type": "structure",
      "message": "<title>タグと内容が必要です"
    },
    {
      "id": "css-content",
      "name": "CSSスタイル",
      "type": "css",
      "message": "CSSでスタイルを設定してください"
    }
  ],
  "hints": [
    "display: flexで親要素をFlexboxコンテナに",
    "justify-contentで水平方向（メイン軸）の配置を制御",
    "align-itemsで垂直方向（クロス軸）の配置を制御",
    "flex-direction: columnで縦並びに変更",
    "centerとspace-betweenが最もよく使われる値"
  ]
}
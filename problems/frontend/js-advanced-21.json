{
  "id": "js-advanced-21",
  "title": "まとめ練習 - 検索 + カテゴリ + ソート",
  "description": "商品一覧に対して検索・カテゴリ絞り込み・価格ソートを組み合わせて結果を表示します",
  "category": "javascript-advanced",
  "instructions": [
    "#searchInput のキーワード、#categorySelect のカテゴリ、#sortSelect のソート条件を反映ボタン(#applyBtn)で適用",
    "キーワード未入力時は全件対象、カテゴリは all で全件対象",
    "価格は 昇順(price-asc)/降順(price-desc) の 2 種類をサポート",
    "結果件数は #countText に表示し、一覧は #productList に .product 要素で描画"
  ],
  "files": {
    "html": {
      "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <title>js-advanced-21 まとめ練習 - 検索+カテゴリ+ソート</title>\n  <link rel=\"stylesheet\" href=\"style.css\" />\n</head>\n<body>\n  <div class=\"container\">\n    <h1>まとめ練習 - 検索 + カテゴリ + ソート</h1>\n\n    <div class=\"controls\">\n      <input id=\"searchInput\" type=\"text\" placeholder=\"商品名で検索\" />\n      <select id=\"categorySelect\">\n        <option value=\"all\">すべて</option>\n        <option value=\"camera\">カメラ</option>\n        <option value=\"accessory\">アクセサリ</option>\n      </select>\n      <select id=\"sortSelect\">\n        <option value=\"price-asc\">価格: 安い順</option>\n        <option value=\"price-desc\">価格: 高い順</option>\n      </select>\n      <button id=\"applyBtn\" type=\"button\">反映</button>\n      <div class=\"meta\">件数: <span id=\"countText\">0</span></div>\n    </div>\n\n    <div id=\"productList\" class=\"product-list\" aria-live=\"polite\"></div>\n  </div>\n\n  <script src=\"script.js\"></script>\n</body>\n</html>\n",
      "expected": "__INCLUDE__: problems/frontend/expected/js-advanced-21/files.html.expected"
    },
    "css": {
      "template": "body{font-family:system-ui,-apple-system,\\\"Segoe UI\\\",sans-serif;margin:16px}\n.container{max-width:960px;margin:auto}\n.controls{display:flex;gap:12px;align-items:center;flex-wrap:wrap;margin:12px 0}\ninput,select{padding:8px 10px;border:1px solid #ccc;border-radius:6px}\nbutton{padding:8px 12px;border:1px solid #ccc;border-radius:6px;background:#f8f8f8}\n.meta{color:#666}\n.product-list{display:grid;grid-template-columns:repeat(auto-fill,minmax(200px,1fr));gap:12px;margin-top:12px}\n.product{border:1px solid #e5e7eb;border-radius:8px;padding:12px;background:#fff}\n.product-title{font-weight:600;margin-bottom:4px}\n.product-price{color:#0a7}\n.product-category{font-size:12px;color:#666}\n",
      "expected": "__INCLUDE__: problems/frontend/expected/js-advanced-21/files.css.expected"
    },
    "js": {
      "template": "// 商品データ（カテゴリ付与）\nconst products = [\n  { id: 1, title: 'Pro Camera', price: 49800, category: 'camera' },\n  { id: 2, title: 'Light Stand', price: 3200, category: 'accessory' },\n  { id: 3, title: 'Mini Tripod', price: 1800, category: 'accessory' },\n  { id: 4, title: 'Pro Light', price: 9800, category: 'accessory' },\n  { id: 5, title: 'Compact Camera', price: 29800, category: 'camera' }\n];\n\nconst $search = document.getElementById('searchInput');\nconst $category = document.getElementById('categorySelect');\nconst $sort = document.getElementById('sortSelect');\nconst $apply = document.getElementById('applyBtn');\nconst $count = document.getElementById('countText');\nconst $list = document.getElementById('productList');\n\nfunction filterAndSort(items) {\n  const keyword = ($search.value || '').trim().toLowerCase();\n  const cat = $category.value;\n  const sort = $sort.value;\n\n  let arr = items.filter(p => {\n    const okKeyword = keyword.length === 0 || p.title.toLowerCase().includes(keyword);\n    const okCat = cat === 'all' || p.category === cat;\n    return okKeyword && okCat;\n  });\n\n  arr = arr.slice().sort((a, b) => {\n    if (sort === 'price-asc') return a.price - b.price;\n    if (sort === 'price-desc') return b.price - a.price;\n    return 0;\n  });\n  return arr;\n}\n\nfunction render(items) {\n  $list.innerHTML = '';\n  $count.textContent = String(items.length);\n  for (const p of items) {\n    const el = document.createElement('div');\n    el.className = 'product';\n\n    const t = document.createElement('div');\n    t.className = 'product-title';\n    t.textContent = p.title;\n\n    const price = document.createElement('div');\n    price.className = 'product-price';\n    price.textContent = `¥${p.price.toLocaleString()}`;\n\n    const cat = document.createElement('div');\n    cat.className = 'product-category';\n    cat.textContent = `カテゴリ: ${p.category}`;\n\n    el.appendChild(t);\n    el.appendChild(price);\n    el.appendChild(cat);\n    $list.appendChild(el);\n  }\n}\n\n$apply.addEventListener('click', () => {\n  render(filterAndSort(products));\n});\n\n// 初期表示\nrender(filterAndSort(products));\n",
      "expected": "__INCLUDE__: problems/frontend/expected/js-advanced-21/files.js.expected"
    }
  },
  "checks": [
    { "id": "doctype", "name": "DOCTYPE宣言", "type": "structure", "message": "DOCTYPE html宣言が必要です" },
    { "id": "html", "name": "<html>タグ", "type": "structure", "message": "<html>タグが必要です" },
    { "id": "head", "name": "<head>セクション", "type": "structure", "message": "<head>セクションが必要です" },
    { "id": "body", "name": "<body>セクション", "type": "structure", "message": "<body>セクションが必要です" },
    { "id": "title", "name": "<title>タグ", "type": "structure", "message": "<title>タグと内容が必要です" },
    { "id": "css-content", "name": "CSSスタイル", "type": "css", "message": "CSSでスタイルを設定してください" },
    { "id": "js-content", "name": "JavaScript", "type": "js", "message": "JavaScriptで動的な動作を実装してください" }
  ]
}

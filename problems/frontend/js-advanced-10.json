{
  "id": "js-advanced-10",
  "title": "関数基礎",
  "description": "JavaScript関数の基本概念と定義方法を理解し、シンプルな関数を作成できるようになります",
  "category": "javascript-advanced",
  "difficulty": 2,
  "instructions": [
    "function宣言の基本構文と使い方を学ぶ",
    "関数の呼び出し方法を習得する",
    "パラメータ（引数）の基本的な使い方を理解する",
    "戻り値（return）の基本概念を学ぶ"
  ],
  "files": {
    "html": {
      "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>課題実装</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n    <div class=\"container\">\n        <h1>課題を実装してください</h1>\n        <!-- ここに実装してください -->\n    </div>\n    \n    <script src=\"script.js\"></script>\n</body>\n</html>",
      "expected": "<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>ステップ17.5a - 関数基礎</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n    <div class=\"container\">\n        <h1>⚡ 関数基礎</h1>\n        <div class=\"step-info\">\n            <strong>ステップ17.5a - JavaScript関数の基本概念を学ぼう</strong>\n        </div>\n        \n        <div class=\"celebration\">⚡ 📚 ✨</div>\n        \n        <div class=\"info-box\">\n            <h3>📚 このステップで学ぶこと</h3>\n            <ul>\n                <li><strong>function宣言</strong>の基本構文と使い方</li>\n                <li><strong>関数の呼び出し</strong>方法</li>\n                <li><strong>パラメータ（引数）</strong>の基本的な使い方</li>\n                <li><strong>戻り値（return）</strong>の基本概念</li>\n            </ul>\n        </div>\n        \n        <div class=\"demo-section\">\n            <h3>⚡ 基本関数システム</h3>\n            \n            <div class=\"function-display\">\n                <div class=\"result-main\" id=\"result-display\">関数を実行してください</div>\n                <div class=\"function-status\" id=\"function-status\">関数待機中 - ボタンを押して実行してください</div>\n            </div>\n            \n            <div class=\"button-grid\">\n                <button class=\"function-btn btn-basic\" id=\"basic-btn\">\n                    👋 基本関数\n                </button>\n                \n                <button class=\"function-btn btn-param\" id=\"param-btn\">\n                    📝 パラメータ関数\n                </button>\n                \n                <button class=\"function-btn btn-return\" id=\"return-btn\">\n                    🔄 戻り値関数\n                </button>\n                \n                <button class=\"function-btn btn-simple-calc\" id=\"simple-calc-btn\">\n                    🧮 簡単な計算\n                </button>\n            </div>\n        </div>\n        \n        <div class=\"input-section\" id=\"input-section\">\n            <h3>📝 関数への入力</h3>\n            \n            <div class=\"input-group\">\n                <label for=\"name-input\">名前を入力してください:</label>\n                <input type=\"text\" id=\"name-input\" placeholder=\"例: 田中太郎\" value=\"ゲスト\">\n                <div class=\"input-hint\">パラメータ関数でこの名前を使います</div>\n            </div>\n            \n            <div class=\"input-group\">\n                <label for=\"number-input\">数値を入力してください:</label>\n                <input type=\"number\" id=\"number-input\" placeholder=\"例: 5\" value=\"5\" min=\"1\" max=\"100\">\n                <div class=\"input-hint\">戻り値関数と簡単な計算でこの数値を使います</div>\n            </div>\n        </div>\n        \n        <div class=\"info-box\">\n            <h3>🔧 関数の基本形</h3>\n            <div style=\"display: grid; grid-template-columns: 1fr 1fr; gap: 20px; margin: 15px 0;\">\n                <div style=\"background: #e8f5e8; padding: 15px; border-radius: 10px;\">\n                    <h4 style=\"margin-top: 0; color: #27ae60;\">パラメータなし関数</h4>\n                    <div class=\"code-example\">\nfunction sayHello() {\n    console.log(\"こんにちは！\");\n}\n\nsayHello(); // 関数を呼び出し\n                    </div>\n                    <p style=\"margin-bottom: 0;\">最もシンプルな関数の形</p>\n                </div>\n                <div style=\"background: #e3f2fd; padding: 15px; border-radius: 10px;\">\n                    <h4 style=\"margin-top: 0; color: #2196f3;\">パラメータあり関数</h4>\n                    <div class=\"code-example\">\nfunction greet(name) {\n    console.log(\"こんにちは、\" + name + \"さん\");\n}\n\ngreet(\"田中\"); // 引数を渡す\n                    </div>\n                    <p style=\"margin-bottom: 0;\">値を受け取って処理する関数</p>\n                </div>\n            </div>\n            <div style=\"background: #fff3e0; padding: 15px; border-radius: 10px; margin-top: 20px;\">\n                <h4 style=\"margin-top: 0; color: #ff9800;\">戻り値のある関数</h4>\n                <div class=\"code-example\">\nfunction double(number) {\n    return number * 2; // 結果を返す\n}\n\nlet result = double(5); // result には 10 が入る\n                </div>\n                <p style=\"margin-bottom: 0;\">計算結果を返す関数</p>\n            </div>\n        </div>\n        \n        <div class=\"stats-section\">\n            <h4>📊 関数実行統計</h4>\n            <div class=\"stats-grid\">\n                <div class=\"stat-item\">\n                    <div>基本関数実行回数</div>\n                    <div class=\"stat-number\" id=\"basic-calls\">0</div>\n                </div>\n                <div class=\"stat-item\">\n                    <div>パラメータ関数実行回数</div>\n                    <div class=\"stat-number\" id=\"param-calls\">0</div>\n                </div>\n                <div class=\"stat-item\">\n                    <div>戻り値関数実行回数</div>\n                    <div class=\"stat-number\" id=\"return-calls\">0</div>\n                </div>\n                <div class=\"stat-item\">\n                    <div>計算実行回数</div>\n                    <div class=\"stat-number\" id=\"calc-calls\">0</div>\n                </div>\n            </div>\n        </div>\n        \n        <div class=\"info-box\">\n            <h3>⚡ 実装されている関数</h3>\n            <ul>\n                <li><strong>👋 基本関数</strong>: パラメータなし、戻り値なしの最もシンプルな関数</li>\n                <li><strong>📝 パラメータ関数</strong>: 名前を受け取って個人的な挨拶をする関数</li>\n                <li><strong>🔄 戻り値関数</strong>: 数値の2乗を計算して結果を返す関数</li>\n                <li><strong>🧮 簡単な計算</strong>: 数値に対して簡単な計算を行う関数</li>\n            </ul>\n        </div>\n        \n        <div class=\"instruction\">\n            <h3>🚀 すべての関数を試してみよう！</h3>\n            <p>4つのボタンをすべてクリックして、異なる種類の関数の動作を確認してください。入力フィールドの値を変更して、パラメータによる結果の違いも確認しましょう。</p>\n            <p><strong>F12</strong>（MacはCmd+Option+I）で開発者ツールを開き、<strong>Console</strong>タブで関数の詳細な動作ログも確認できます！</p>\n        </div>\n        \n        <div class=\"next-step\">\n            <h3>🎓 次のステップ</h3>\n            <p>このステップをマスターしたら、<strong>17.5b-function-systems</strong>で関数を組み合わせた実用的なシステムを学習しましょう！</p>\n        </div>\n    </div>\n\n    <script src=\"script.js\"></script>\n</body>\n</html>"
    },
    "css": {
      "template": "/* 基本的なスタイル */\nbody {\n    font-family: Arial, sans-serif;\n    margin: 40px;\n    background: #f5f5f5;\n}\n\n.container {\n    max-width: 800px;\n    margin: 0 auto;\n    background: white;\n    padding: 20px;\n    border-radius: 10px;\n    box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n}\n\n/* ここに実装してください */",
      "expected": "body {\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif;\n    max-width: 1000px;\n    margin: 40px auto;\n    padding: 20px;\n    line-height: 1.6;\n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n    color: #2c3e50;\n    min-height: 100vh;\n}\n\n.container {\n    background: rgba(255, 255, 255, 0.95);\n    backdrop-filter: blur(10px);\n    border-radius: 20px;\n    padding: 40px;\n    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n}\n\nh1 {\n    color: #8e44ad;\n    text-align: center;\n    font-size: 2.5rem;\n    margin-bottom: 10px;\n}\n\n.step-info {\n    text-align: center;\n    margin-bottom: 30px;\n    opacity: 0.8;\n    color: #7f8c8d;\n    font-size: 1.1rem;\n}\n\n.demo-section {\n    background: linear-gradient(135deg, #8e44ad 0%, #3498db 100%);\n    color: white;\n    padding: 30px;\n    border-radius: 20px;\n    margin: 25px 0;\n}\n\n.function-display {\n    background: rgba(255, 255, 255, 0.15);\n    padding: 30px;\n    border-radius: 15px;\n    margin: 20px 0;\n    text-align: center;\n}\n\n.result-main {\n    font-size: 2.2rem;\n    font-weight: bold;\n    color: #FFE135;\n    margin: 20px 0;\n    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\n    min-height: 70px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.function-status {\n    font-size: 1.2rem;\n    margin: 15px 0;\n    padding: 10px;\n    background: rgba(255, 255, 255, 0.2);\n    border-radius: 10px;\n}\n\n.button-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n    gap: 15px;\n    margin: 25px 0;\n}\n\n.function-btn {\n    background: linear-gradient(135deg, #e74c3c 0%, #c0392b 100%);\n    color: white;\n    border: none;\n    padding: 15px 20px;\n    font-size: 1rem;\n    border-radius: 12px;\n    cursor: pointer;\n    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\n    transition: all 0.3s ease;\n    font-weight: bold;\n}\n\n.function-btn:hover {\n    transform: translateY(-3px);\n    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);\n}\n\n.function-btn:active {\n    transform: translateY(0);\n}\n\n.btn-basic { \n    background: linear-gradient(135deg, #3498db, #2980b9); \n}\n\n.btn-param { \n    background: linear-gradient(135deg, #27ae60, #229954); \n}\n\n.btn-return { \n    background: linear-gradient(135deg, #e67e22, #d35400); \n}\n\n.btn-simple-calc { \n    background: linear-gradient(135deg, #f39c12, #e67e22); \n}\n\n.input-section {\n    background: rgba(255, 255, 255, 0.9);\n    color: #2c3e50;\n    padding: 30px;\n    border-radius: 15px;\n    margin: 20px 0;\n}\n\n.input-group {\n    margin: 20px 0;\n}\n\n.input-group label {\n    display: block;\n    margin-bottom: 8px;\n    font-weight: bold;\n    color: #8e44ad;\n    font-size: 1.1rem;\n}\n\n.input-group input {\n    width: 100%;\n    padding: 12px;\n    border: 2px solid #bdc3c7;\n    border-radius: 8px;\n    font-size: 1rem;\n    transition: border-color 0.3s;\n}\n\n.input-group input:focus {\n    outline: none;\n    border-color: #8e44ad;\n}\n\n.input-hint {\n    font-size: 0.9rem;\n    color: #7f8c8d;\n    margin-top: 5px;\n    font-style: italic;\n}\n\n.info-box {\n    background: #f8f9fa;\n    padding: 25px;\n    border-radius: 15px;\n    margin: 20px 0;\n    border-left: 5px solid #8e44ad;\n}\n\n.info-box h3 {\n    color: #8e44ad;\n    margin-top: 0;\n}\n\n.code-example {\n    background: #2c3e50;\n    color: #ecf0f1;\n    padding: 15px;\n    border-radius: 8px;\n    font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\n    margin: 15px 0;\n    border: 1px solid #34495e;\n    font-size: 0.9rem;\n    line-height: 1.4;\n}\n\n.stats-section {\n    background: rgba(52, 73, 94, 0.1);\n    padding: 20px;\n    border-radius: 15px;\n    margin: 20px 0;\n}\n\n.stats-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));\n    gap: 15px;\n    margin: 15px 0;\n}\n\n.stat-item {\n    background: white;\n    padding: 15px;\n    border-radius: 10px;\n    text-align: center;\n    border: 2px solid #8e44ad;\n}\n\n.stat-number {\n    font-size: 1.8rem;\n    font-weight: bold;\n    color: #8e44ad;\n}\n\n.instruction {\n    background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);\n    color: white;\n    padding: 20px;\n    border-radius: 10px;\n    margin: 20px 0;\n}\n\n.next-step {\n    background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%);\n    color: #2c3e50;\n    padding: 20px;\n    border-radius: 10px;\n    margin: 20px 0;\n    text-align: center;\n}\n\n.celebration {\n    font-size: 3rem;\n    text-align: center;\n    margin: 20px 0;\n}"
    },
    "js": {
      "template": "// JavaScript実装エリア\n\n// ここに実装してください\nconsole.log('課題実装を開始してください');",
      "expected": "console.log(\"⚡ ステップ17.5a: 関数基礎を開始します！\");\nconsole.log(\"========================================\");\n\n// 統計用変数\nlet basicCalls = 0;\nlet paramCalls = 0;\nlet returnCalls = 0;\nlet calcCalls = 0;\n\n// DOM要素の取得\nconst resultDisplay = document.getElementById(\"result-display\");\nconst functionStatus = document.getElementById(\"function-status\");\nconst nameInput = document.getElementById(\"name-input\");\nconst numberInput = document.getElementById(\"number-input\");\n\n// 統計更新関数\nfunction updateStats() {\n    document.getElementById(\"basic-calls\").textContent = basicCalls;\n    document.getElementById(\"param-calls\").textContent = paramCalls;\n    document.getElementById(\"return-calls\").textContent = returnCalls;\n    document.getElementById(\"calc-calls\").textContent = calcCalls;\n}\n\n// 1. 基本関数（パラメータなし、戻り値なし）\nfunction basicGreeting() {\n    console.log(\"📖 基本関数を実行中...\");\n    \n    // メイン表示を更新\n    resultDisplay.textContent = \"こんにちは！基本関数です！\";\n    functionStatus.textContent = \"✅ 基本関数が実行されました\";\n    \n    console.log(\"✅ 基本関数実行完了\");\n}\n\n// 2. パラメータ付き関数\nfunction greetingWithName(name) {\n    console.log(`📖 パラメータ関数を実行中... (name: ${name})`);\n    \n    // 挨拶メッセージを作成\n    const message = `こんにちは、${name}さん！`;\n    \n    // 画面に表示\n    resultDisplay.textContent = message;\n    functionStatus.textContent = `✅ ${name}さんに挨拶しました`;\n    \n    console.log(`✅ パラメータ関数実行完了: ${message}`);\n    \n    // 戻り値を返す（この関数では使わないが、概念として）\n    return message;\n}\n\n// 3. 戻り値のある関数\nfunction calculateSquare(number) {\n    console.log(`📖 戻り値関数を実行中... (number: ${number})`);\n    \n    // 2乗を計算\n    const result = number * number;\n    const message = `${number}の2乗は${result}です`;\n    \n    // 画面に表示\n    resultDisplay.textContent = message;\n    functionStatus.textContent = `✅ 計算完了: ${number}² = ${result}`;\n    \n    console.log(`✅ 戻り値関数実行完了: ${result}`);\n    \n    // 計算結果を戻り値として返す\n    return result;\n}\n\n// 4. 簡単な計算関数\nfunction simpleCalculation(number) {\n    console.log(`📖 簡単な計算を実行中... (number: ${number})`);\n    \n    // いくつかの簡単な計算\n    const double = number * 2;\n    const triple = number * 3;\n    const plusTen = number + 10;\n    \n    const message = `${number} × 2 = ${double}`;\n    \n    // 画面に表示\n    resultDisplay.textContent = message;\n    functionStatus.textContent = `✅ 計算完了: ${number}を2倍、3倍、+10しました`;\n    \n    console.log(`✅ 簡単な計算実行完了:`);\n    console.log(`  ${number} × 2 = ${double}`);\n    console.log(`  ${number} × 3 = ${triple}`);\n    console.log(`  ${number} + 10 = ${plusTen}`);\n    \n    // 計算結果を戻り値として返す\n    return { double, triple, plusTen };\n}\n\n// ボタンイベントリスナー\n\n// 1. 基本関数ボタン\ndocument.getElementById(\"basic-btn\").addEventListener(\"click\", function() {\n    console.log(\"👋 基本関数ボタンがクリックされました\");\n    \n    basicCalls++;\n    basicGreeting(); // 基本関数を呼び出し\n    updateStats();\n});\n\n// 2. パラメータ関数ボタン\ndocument.getElementById(\"param-btn\").addEventListener(\"click\", function() {\n    console.log(\"📝 パラメータ関数ボタンがクリックされました\");\n    \n    paramCalls++;\n    \n    // 入力フィールドから名前を取得\n    const name = nameInput.value || \"ゲスト\";\n    greetingWithName(name); // 名前を引数として渡す\n    updateStats();\n});\n\n// 3. 戻り値関数ボタン\ndocument.getElementById(\"return-btn\").addEventListener(\"click\", function() {\n    console.log(\"🔄 戻り値関数ボタンがクリックされました\");\n    \n    returnCalls++;\n    \n    // 入力フィールドから数値を取得\n    const number = parseInt(numberInput.value) || 5;\n    \n    // 戻り値を受け取る\n    const squareResult = calculateSquare(number);\n    console.log(`戻り値として受け取った値: ${squareResult}`);\n    \n    updateStats();\n});\n\n// 4. 簡単な計算ボタン\ndocument.getElementById(\"simple-calc-btn\").addEventListener(\"click\", function() {\n    console.log(\"🧮 簡単な計算ボタンがクリックされました\");\n    \n    calcCalls++;\n    \n    // 入力フィールドから数値を取得\n    const number = parseInt(numberInput.value) || 5;\n    \n    // 戻り値を受け取る\n    const calcResults = simpleCalculation(number);\n    console.log(\"計算結果:\", calcResults);\n    \n    updateStats();\n});\n\n// 初期化\nupdateStats();\n\nconsole.log(\"✅ 関数基礎システムが初期化されました！\");\nconsole.log(\"⚡ 関数の基本概念:\");\nconsole.log(\"  - 関数定義: function 関数名() { }\");\nconsole.log(\"  - パラメータ: 関数に渡す値\");\nconsole.log(\"  - 戻り値: 関数が返す結果\");\nconsole.log(\"💡 各ボタンをクリックして、関数の動作を確認してください！\");\n\n// 実行時に自動でデモンストレーション\nsetTimeout(() => {\n    console.log(\"🎯 関数デモンストレーション:\");\n    console.log(\"  関数とは:\", \"特定の処理をまとめたもの\");\n    console.log(\"  利点:\", \"同じ処理を何度でも使える\");\n    console.log(\"🎪 すべての関数ボタンを試してみてください！\");\n}, 1000);"
    }
  },
  "expectedResult": {
    "basicFunction": "パラメータなし、戻り値なしの関数が動作する",
    "parameterFunction": "名前を受け取って挨拶する関数が動作する",
    "returnFunction": "計算結果を返す関数が動作する",
    "simpleCalculation": "数値を使った基本的な計算関数が動作する",
    "behavior": "4つの基本関数パターンが正しく動作する"
  },
  "checks": [
    {
      "id": "doctype",
      "name": "DOCTYPE宣言",
      "type": "structure",
      "message": "DOCTYPE html宣言が必要です"
    },
    {
      "id": "html",
      "name": "<html>タグ",
      "type": "structure",
      "message": "<html>タグが必要です"
    },
    {
      "id": "head",
      "name": "<head>セクション",
      "type": "structure",
      "message": "<head>セクションが必要です"
    },
    {
      "id": "body",
      "name": "<body>セクション",
      "type": "structure",
      "message": "<body>セクションが必要です"
    },
    {
      "id": "title",
      "name": "<title>タグ",
      "type": "structure",
      "message": "<title>タグと内容が必要です"
    },
    {
      "id": "css-content",
      "name": "CSSスタイル",
      "type": "css",
      "message": "CSSでスタイルを設定してください"
    },
    {
      "id": "js-content",
      "name": "JavaScript",
      "type": "js",
      "message": "JavaScriptで動的な動作を実装してください"
    }
  ]
}
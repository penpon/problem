{
  "id": "js-advanced-06",
  "title": "まとめ練習（検索+フィルタ+ソート統合）",
  "description": "これまで学んだmap, filter, sort, includes, イベント委譲を組み合わせて、本格的な商品検索システムを作ります。ECサイトの基本機能の集大成です。",
  "category": "javascript-advanced",
  "instructions": [
    "検索入力（#search）、カテゴリ選択（#category）、並び替え（#sort）のUIを配置する",
    "filter()で検索とカテゴリ絞り込みを実行する",
    "sort()で価格順に並び替える",
    "map()とjoin()でHTMLを生成し#listに表示する",
    "イベント委譲でカート追加ボタンを処理し、件数（#cart-count）を更新する"
  ],
  "implementationPoints": [
    "必須: filter()を2回使って検索とカテゴリの両方で絞り込むこと",
    "必須: sort()で価格の昇順・降順を切り替えること",
    "必須: map()とjoin()でHTML生成すること",
    "必須: イベント委譲で動的ボタンを処理すること",
    "推奨: 各操作（検索/フィルタ/ソート）で同じ描画関数を呼ぶこと"
  ],
  "files": {
    "html": {
      "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <title>まとめ練習</title>\n  <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n  <div class=\"container\">\n    <h1>商品検索システム</h1>\n    <div class=\"controls\">\n      <input id=\"search\" type=\"text\" placeholder=\"商品名で検索\" class=\"search-input\">\n      <select id=\"category\" class=\"category-select\">\n        <option value=\"all\">すべて</option>\n        <option value=\"家電\">家電</option>\n        <option value=\"文具\">文具</option>\n      </select>\n      <select id=\"sort\" class=\"sort-select\">\n        <option value=\"default\">デフォルト</option>\n        <option value=\"price-asc\">価格の安い順</option>\n        <option value=\"price-desc\">価格の高い順</option>\n      </select>\n      <div>カート: <span id=\"cart-count\">0</span>件</div>\n    </div>\n    <div id=\"list\"></div>\n  </div>\n  <script src=\"script.js\"></script>\n</body>\n</html>",
      "expected": "__INCLUDE__: problems/frontend/expected/js-advanced-06/files.html.expected"
    },
    "css": {
      "template": "body { font-family: sans-serif; margin: 16px; }\n.container { max-width: 900px; margin: 0 auto; }\n.controls { display: flex; gap: 12px; margin-bottom: 16px; flex-wrap: wrap; align-items: center; }\n.search-input, .category-select, .sort-select { padding: 8px; font-size: 14px; }\n#list { display: grid; gap: 12px; }\n.item { padding: 12px; border: 1px solid #ddd; border-radius: 6px; display: flex; justify-content: space-between; align-items: center; }\n.add-btn { padding: 6px 12px; background: #007bff; color: white; border: none; border-radius: 4px; cursor: pointer; }",
      "expected": "__INCLUDE__: problems/frontend/expected/js-advanced-06/files.css.expected"
    },
    "js": {
      "template": "// 商品データ（配列）\nconst products = [\n  { id: 1, name: 'ノートパソコン', category: '家電', price: 89800 },\n  { id: 2, name: 'ボールペン', category: '文具', price: 150 },\n  { id: 3, name: 'マウス', category: '家電', price: 1980 },\n  { id: 4, name: 'ノート', category: '文具', price: 200 },\n  { id: 5, name: 'キーボード', category: '家電', price: 4980 }\n];\n\nlet cartCount = 0;\n\n// TODO: 検索・カテゴリ・ソートを統合した描画関数を作成\n// TODO: filter() を2回使って検索とカテゴリで絞り込む\n// TODO: sort() で価格順に並び替える\n// TODO: map() と join('') でHTMLを生成\n// TODO: イベント委譲でカート追加を処理\n\nfunction renderProducts() {\n  // ここに実装してください\n}\n\nfunction setupEvents() {\n  // ここに実装してください\n}\n\nrenderProducts();\nsetupEvents();",
      "expected": "__INCLUDE__: problems/frontend/expected/js-advanced-06/files.js.expected"
    }
  },
  "expectedResult": {
    "behavior": "検索・カテゴリ・並び替えが連動して動作し、追加ボタンでカート件数が増える"
  },
  "checks": [
    {
      "id": "doctype",
      "name": "DOCTYPE宣言",
      "type": "structure",
      "message": "DOCTYPE html宣言が必要です"
    },
    {
      "id": "search-input",
      "name": "#search要素",
      "type": "html",
      "message": "#search 要素が必要です"
    },
    {
      "id": "category-select",
      "name": "#category要素",
      "type": "html",
      "message": "#category 要素が必要です"
    },
    {
      "id": "sort-select",
      "name": "#sort要素",
      "type": "html",
      "message": "#sort 要素が必要です"
    },
    {
      "id": "uses-filter",
      "name": "filter()使用",
      "type": "js",
      "message": "filter()メソッドを使用してください"
    },
    {
      "id": "uses-sort",
      "name": "sort()使用",
      "type": "js",
      "message": "sort()メソッドを使用してください"
    },
    {
      "id": "uses-map",
      "name": "map()使用",
      "type": "js",
      "message": "map()メソッドを使用してください"
    },
    {
      "id": "event-delegation",
      "name": "イベント委譲",
      "type": "js",
      "message": "イベント委譲を使用してください"
    }
  ],
  "hints": [
    "各操作（検索/カテゴリ/ソート）で同じrenderProducts()を呼びます",
    "検索: filter(p => p.name.includes(keyword))",
    "カテゴリ: filter(p => p.category === selected)",
    "ソート: sort((a,b) => a.price - b.price)",
    "イベント委譲: #list にclickイベントを1つだけ設定"
  ]
}

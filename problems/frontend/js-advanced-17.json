{
  "id": "js-advanced-17",
  "title": "基本データ管理",
  "description": "配列とオブジェクトを組み合わせた本格的なデータ管理システムを構築し、商品お気に入り機能を通じて実用的なWebアプリケーション開発技術を習得します",
  "category": "practical-projects",
  "difficulty": 4,
  "instructions": [
    "配列とオブジェクトを組み合わせたデータ構造を理解する",
    "データの追加・削除・表示の基本的なCRUD操作を学ぶ",
    "配列データから統計情報を計算・表示する方法を習得する",
    "重複チェック機能など実用的なデータ検証を実装する"
  ],
  "files": {
    "html": {
      "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>課題実装</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n    <div class=\"container\">\n        <h1>課題を実装してください</h1>\n        <!-- ここに実装してください -->\n    </div>\n    \n    <script src=\"script.js\"></script>\n</body>\n</html>",
      "expected": "<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>ステップ19.3 - 基本データ管理</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n    <div class=\"container\">\n        <h1>📊 基本データ管理</h1>\n        <div class=\"step-info\">\n            <strong>ステップ19.3 - 配列と変数を使った基本的なデータ管理</strong>\n        </div>\n        \n        <div class=\"celebration\">📊 💾 ✨</div>\n        \n        <div class=\"info-box\">\n            <h3>🎯 このステップで学ぶこと</h3>\n            <ul>\n                <li><strong>配列</strong>を使ったデータの追加・削除</li>\n                <li><strong>オブジェクト</strong>の基本的な操作</li>\n                <li>データの<strong>表示・更新</strong>機能</li>\n                <li><strong>簡単な統計</strong>の計算</li>\n            </ul>\n        </div>\n        \n        <div class=\"demo-section\">\n            <h3>🗂️ 商品お気に入り管理</h3>\n            <p>商品をお気に入りに追加・削除して、データ管理を体験しましょう！</p>\n            \n            <div class=\"product-grid\">\n                <div class=\"product-card\" data-id=\"1\">\n                    <div class=\"product-emoji\">👕</div>\n                    <h4>Tシャツ</h4>\n                    <p class=\"price\">¥2,980</p>\n                    <button class=\"fav-btn\" data-product=\"Tシャツ\" data-price=\"2980\">\n                        ⭐ お気に入り\n                    </button>\n                </div>\n                \n                <div class=\"product-card\" data-id=\"2\">\n                    <div class=\"product-emoji\">👖</div>\n                    <h4>ジーンズ</h4>\n                    <p class=\"price\">¥4,500</p>\n                    <button class=\"fav-btn\" data-product=\"ジーンズ\" data-price=\"4500\">\n                        ⭐ お気に入り\n                    </button>\n                </div>\n                \n                <div class=\"product-card\" data-id=\"3\">\n                    <div class=\"product-emoji\">👟</div>\n                    <h4>スニーカー</h4>\n                    <p class=\"price\">¥8,800</p>\n                    <button class=\"fav-btn\" data-product=\"スニーカー\" data-price=\"8800\">\n                        ⭐ お気に入り\n                    </button>\n                </div>\n                \n                <div class=\"product-card\" data-id=\"4\">\n                    <div class=\"product-emoji\">🎒</div>\n                    <h4>リュック</h4>\n                    <p class=\"price\">¥6,200</p>\n                    <button class=\"fav-btn\" data-product=\"リュック\" data-price=\"6200\">\n                        ⭐ お気に入り\n                    </button>\n                </div>\n            </div>\n        </div>\n        \n        <div class=\"favorites-section\">\n            <h3>💖 お気に入り商品一覧</h3>\n            <div class=\"favorites-list\" id=\"favorites-list\">\n                <p class=\"empty-message\">まだお気に入り商品がありません</p>\n            </div>\n            \n            <div class=\"controls\">\n                <button class=\"control-btn\" id=\"clear-btn\">🗑️ 全て削除</button>\n                <button class=\"control-btn\" id=\"show-stats-btn\">📊 統計表示</button>\n            </div>\n        </div>\n        \n        <div class=\"stats-section\" id=\"stats-section\">\n            <h4>📈 お気に入り統計</h4>\n            <div class=\"stats-grid\">\n                <div class=\"stat-card\">\n                    <div class=\"stat-label\">商品数</div>\n                    <div class=\"stat-number\" id=\"item-count\">0</div>\n                </div>\n                <div class=\"stat-card\">\n                    <div class=\"stat-label\">合計金額</div>\n                    <div class=\"stat-number\" id=\"total-price\">¥0</div>\n                </div>\n                <div class=\"stat-card\">\n                    <div class=\"stat-label\">平均価格</div>\n                    <div class=\"stat-number\" id=\"avg-price\">¥0</div>\n                </div>\n            </div>\n        </div>\n        \n        <div class=\"info-box\">\n            <h3>💡 データ管理の基本</h3>\n            <p>配列を使ってデータを管理する基本的な方法：</p>\n            \n            <div class=\"code-example\">\n// お気に入り商品を保存する配列\nlet favorites = [];\n\n// 商品オブジェクトを配列に追加\nfunction addToFavorites(name, price) {\n    let product = { name: name, price: price };\n    favorites.push(product);  // 配列に追加\n}\n\n// 配列から商品を削除\nfunction removeFromFavorites(name) {\n    favorites = favorites.filter(item => item.name !== name);\n}\n\n// 配列の要素数を確認\nlet count = favorites.length;\n            </div>\n        </div>\n        \n        <div class=\"instruction\">\n            <h3>🚀 データ管理を体験してみよう！</h3>\n            <p>商品のお気に入りボタンをクリックして、配列への追加・削除を体験してください。</p>\n            <p>統計表示で、配列データをどのように計算・表示するかも確認しましょう！</p>\n        </div>\n    </div>\n    \n    <script src=\"script.js\"></script>\n</body>\n</html>"
    },
    "css": {
      "template": "/* 基本的なスタイル */\nbody {\n    font-family: Arial, sans-serif;\n    margin: 40px;\n    background: #f5f5f5;\n}\n\n.container {\n    max-width: 800px;\n    margin: 0 auto;\n    background: white;\n    padding: 20px;\n    border-radius: 10px;\n    box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n}\n\n/* ここに実装してください */",
      "expected": "/* 基本スタイル */\nbody {\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    margin: 0;\n    padding: 20px;\n    background: linear-gradient(135deg, #fd79a8 0%, #fdcb6e 100%);\n    min-height: 100vh;\n    color: #333;\n}\n\n.container {\n    max-width: 1100px;\n    margin: 0 auto;\n    background: white;\n    padding: 30px;\n    border-radius: 15px;\n    box-shadow: 0 10px 30px rgba(0,0,0,0.2);\n}\n\nh1 {\n    text-align: center;\n    color: #2c3e50;\n    margin-bottom: 10px;\n    font-size: 2.5rem;\n}\n\n.step-info {\n    text-align: center;\n    background: #f8f9fa;\n    padding: 15px;\n    border-radius: 10px;\n    margin-bottom: 20px;\n    color: #495057;\n}\n\n.celebration {\n    text-align: center;\n    font-size: 3rem;\n    margin: 20px 0;\n}\n\n.info-box {\n    background: #fff3e0;\n    padding: 20px;\n    border-radius: 10px;\n    margin-bottom: 25px;\n    border-left: 4px solid #ff9800;\n}\n\n.info-box h3 {\n    margin-top: 0;\n    color: #f57c00;\n}\n\n.info-box ul {\n    margin: 15px 0;\n    padding-left: 20px;\n}\n\n.info-box li {\n    margin-bottom: 8px;\n}\n\n.demo-section {\n    background: #fff;\n    padding: 25px;\n    border-radius: 10px;\n    margin-bottom: 25px;\n    border: 1px solid #e0e0e0;\n}\n\n.product-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n    gap: 20px;\n    margin: 20px 0;\n}\n\n.product-card {\n    background: #f8f9fa;\n    padding: 20px;\n    border-radius: 10px;\n    text-align: center;\n    border: 1px solid #dee2e6;\n    transition: transform 0.3s ease;\n}\n\n.product-card:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 5px 15px rgba(0,0,0,0.1);\n}\n\n.product-emoji {\n    font-size: 3rem;\n    margin-bottom: 10px;\n}\n\n.product-card h4 {\n    margin: 10px 0;\n    color: #2c3e50;\n}\n\n.price {\n    font-size: 1.2rem;\n    font-weight: bold;\n    color: #e74c3c;\n    margin-bottom: 15px;\n}\n\n.fav-btn {\n    background: linear-gradient(135deg, #fd79a8, #e84393);\n    color: white;\n    border: none;\n    padding: 10px 20px;\n    border-radius: 8px;\n    cursor: pointer;\n    font-size: 0.9rem;\n    transition: all 0.3s ease;\n}\n\n.fav-btn:hover {\n    transform: scale(1.05);\n    box-shadow: 0 3px 10px rgba(232, 67, 147, 0.3);\n}\n\n.favorites-section {\n    background: #f1f8e9;\n    padding: 25px;\n    border-radius: 10px;\n    margin: 25px 0;\n    border: 1px solid #c8e6c9;\n}\n\n.favorites-section h3 {\n    margin-top: 0;\n    color: #2e7d32;\n}\n\n.favorites-list {\n    min-height: 60px;\n    margin-bottom: 20px;\n}\n\n.empty-message {\n    text-align: center;\n    color: #666;\n    font-style: italic;\n    padding: 20px;\n}\n\n.favorite-item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background: white;\n    padding: 15px;\n    border-radius: 8px;\n    margin-bottom: 10px;\n    border: 1px solid #a5d6a7;\n}\n\n.product-name {\n    font-weight: 500;\n    color: #2c3e50;\n}\n\n.product-price {\n    font-weight: bold;\n    color: #27ae60;\n}\n\n.remove-btn {\n    background: #e74c3c;\n    color: white;\n    border: none;\n    padding: 5px 15px;\n    border-radius: 5px;\n    cursor: pointer;\n    font-size: 0.8rem;\n    transition: background 0.3s ease;\n}\n\n.remove-btn:hover {\n    background: #c0392b;\n}\n\n.controls {\n    display: flex;\n    gap: 15px;\n    justify-content: center;\n}\n\n.control-btn {\n    background: linear-gradient(135deg, #74b9ff, #0984e3);\n    color: white;\n    border: none;\n    padding: 12px 25px;\n    border-radius: 8px;\n    cursor: pointer;\n    font-size: 1rem;\n    transition: all 0.3s ease;\n}\n\n.control-btn:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 5px 15px rgba(0,0,0,0.2);\n}\n\n.stats-section {\n    background: #e3f2fd;\n    padding: 20px;\n    border-radius: 10px;\n    margin: 25px 0;\n    border: 1px solid #90caf9;\n}\n\n.stats-section h4 {\n    margin-top: 0;\n    color: #1976d2;\n    text-align: center;\n}\n\n.stats-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n    gap: 15px;\n}\n\n.stat-card {\n    background: white;\n    padding: 15px;\n    border-radius: 8px;\n    text-align: center;\n    border: 1px solid #64b5f6;\n}\n\n.stat-label {\n    font-size: 0.9rem;\n    color: #1976d2;\n    margin-bottom: 5px;\n}\n\n.stat-number {\n    font-size: 1.5rem;\n    font-weight: bold;\n    color: #0d47a1;\n}\n\n.code-example {\n    background: #263238;\n    color: #e0f2f1;\n    padding: 20px;\n    border-radius: 8px;\n    font-family: 'Courier New', monospace;\n    white-space: pre-wrap;\n    overflow-x: auto;\n    margin: 15px 0;\n    line-height: 1.5;\n}\n\n.instruction {\n    background: #e8f5e9;\n    padding: 20px;\n    border-radius: 10px;\n    border-left: 4px solid #4caf50;\n}\n\n.instruction h3 {\n    margin-top: 0;\n    color: #2e7d32;\n}"
    },
    "js": {
      "template": "// JavaScript実装エリア\n\n// ここに実装してください\nconsole.log('課題実装を開始してください');",
      "expected": "console.log(\"📊 ステップ19.3: 基本データ管理を開始します！\");\n\n// お気に入り商品を保存する配列\nlet favorites = [];\n\n// DOM要素を取得\nlet favoritesList = document.getElementById(\"favorites-list\");\nlet statsSection = document.getElementById(\"stats-section\");\n\n// お気に入りリストを表示する関数\nfunction displayFavorites() {\n    // 配列が空の場合\n    if (favorites.length === 0) {\n        favoritesList.innerHTML = '<p class=\"empty-message\">まだお気に入り商品がありません</p>';\n        return;\n    }\n    \n    // 配列の内容をHTMLで表示\n    let html = '';\n    for (let i = 0; i < favorites.length; i++) {\n        let product = favorites[i];\n        html += `\n            <div class=\"favorite-item\">\n                <span class=\"product-name\">${product.name}</span>\n                <span class=\"product-price\">¥${product.price.toLocaleString()}</span>\n                <button class=\"remove-btn\" data-product=\"${product.name}\">削除</button>\n            </div>\n        `;\n    }\n    favoritesList.innerHTML = html;\n    \n    // 削除ボタンにイベントリスナーを追加\n    let removeButtons = document.querySelectorAll('.remove-btn');\n    for (let i = 0; i < removeButtons.length; i++) {\n        removeButtons[i].addEventListener('click', function() {\n            let productName = this.getAttribute('data-product');\n            removeFromFavorites(productName);\n        });\n    }\n}\n\n// 統計を表示する関数\nfunction displayStats() {\n    let itemCount = favorites.length;\n    let totalPrice = 0;\n    \n    // 配列をループして合計金額を計算\n    for (let i = 0; i < favorites.length; i++) {\n        totalPrice += favorites[i].price;\n    }\n    \n    // 平均価格を計算（商品がある場合のみ）\n    let avgPrice = itemCount > 0 ? Math.round(totalPrice / itemCount) : 0;\n    \n    // 統計を画面に表示\n    document.getElementById(\"item-count\").textContent = itemCount;\n    document.getElementById(\"total-price\").textContent = `¥${totalPrice.toLocaleString()}`;\n    document.getElementById(\"avg-price\").textContent = `¥${avgPrice.toLocaleString()}`;\n    \n    console.log(`統計更新: 商品数${itemCount}, 合計¥${totalPrice}, 平均¥${avgPrice}`);\n}\n\n// お気に入りに追加する関数\nfunction addToFavorites(name, price) {\n    // 既に追加されているかチェック\n    for (let i = 0; i < favorites.length; i++) {\n        if (favorites[i].name === name) {\n            alert(`${name}は既にお気に入りに追加されています`);\n            return;\n        }\n    }\n    \n    // 新しい商品オブジェクトを作成\n    let product = {\n        name: name,\n        price: price,\n        addedTime: new Date().toLocaleTimeString()\n    };\n    \n    // 配列に追加\n    favorites.push(product);\n    \n    console.log(`お気に入りに追加: ${name} (¥${price})`);\n    console.log(\"現在のお気に入り:\", favorites);\n    \n    // 表示を更新\n    displayFavorites();\n    displayStats();\n}\n\n// お気に入りから削除する関数\nfunction removeFromFavorites(name) {\n    // 削除前の配列の長さを記録\n    let beforeCount = favorites.length;\n    \n    // filter()を使って該当商品以外を残す\n    favorites = favorites.filter(function(product) {\n        return product.name !== name;\n    });\n    \n    // 削除されたかチェック\n    if (favorites.length < beforeCount) {\n        console.log(`お気に入りから削除: ${name}`);\n        console.log(\"現在のお気に入り:\", favorites);\n        \n        // 表示を更新\n        displayFavorites();\n        displayStats();\n    }\n}\n\n// 全て削除する関数\nfunction clearAllFavorites() {\n    if (favorites.length === 0) {\n        alert(\"削除する商品がありません\");\n        return;\n    }\n    \n    // 確認メッセージ\n    if (confirm(`${favorites.length}個の商品をすべて削除しますか？`)) {\n        favorites = []; // 配列を空にする\n        console.log(\"すべてのお気に入りを削除しました\");\n        \n        // 表示を更新\n        displayFavorites();\n        displayStats();\n    }\n}\n\n// お気に入りボタンのイベントリスナー\nlet favButtons = document.querySelectorAll('.fav-btn');\nfor (let i = 0; i < favButtons.length; i++) {\n    favButtons[i].addEventListener('click', function() {\n        let productName = this.getAttribute('data-product');\n        let productPrice = parseInt(this.getAttribute('data-price'));\n        \n        addToFavorites(productName, productPrice);\n    });\n}\n\n// 全削除ボタンのイベントリスナー\ndocument.getElementById(\"clear-btn\").addEventListener('click', function() {\n    clearAllFavorites();\n});\n\n// 統計表示ボタンのイベントリスナー\ndocument.getElementById(\"show-stats-btn\").addEventListener('click', function() {\n    displayStats();\n    alert(`現在のお気に入り数: ${favorites.length}個`);\n});\n\n// 初期表示\ndisplayFavorites();\ndisplayStats();\n\nconsole.log(\"✅ 基本データ管理システムが初期化されました！\");\nconsole.log(\"📊 配列操作: push(), filter(), length プロパティ\");\nconsole.log(\"💡 商品をお気に入りに追加して、配列の変化を体験してください！\");"
    }
  },
  "expectedResult": {
    "dataStructure": "配列とオブジェクトの組み合わせデータ構造が動作する",
    "crudOperations": "Create、Read、Delete操作が正しく動作する",
    "statistics": "合計金額・平均価格・商品数の統計が計算される",
    "duplicateCheck": "同じ商品の重複追加が防止される",
    "favorites": "お気に入り機能でデータ管理が動作する",
    "behavior": "本格的なデータ管理システムが完成する"
  },
  "checks": [
    {
      "id": "doctype",
      "name": "DOCTYPE宣言",
      "type": "structure",
      "message": "DOCTYPE html宣言が必要です"
    },
    {
      "id": "html",
      "name": "<html>タグ",
      "type": "structure",
      "message": "<html>タグが必要です"
    },
    {
      "id": "head",
      "name": "<head>セクション",
      "type": "structure",
      "message": "<head>セクションが必要です"
    },
    {
      "id": "body",
      "name": "<body>セクション",
      "type": "structure",
      "message": "<body>セクションが必要です"
    },
    {
      "id": "title",
      "name": "<title>タグ",
      "type": "structure",
      "message": "<title>タグと内容が必要です"
    },
    {
      "id": "css-content",
      "name": "CSSスタイル",
      "type": "css",
      "message": "CSSでスタイルを設定してください"
    },
    {
      "id": "js-content",
      "name": "JavaScript",
      "type": "js",
      "message": "JavaScriptで動的な動作を実装してください"
    }
  ]
}
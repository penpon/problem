{
  "id": "js-basic-10",
  "title": "内容変更",
  "description": "JavaScriptを使ってHTML要素の内容を動的に変更し、textContentとinnerHTMLの違いを理解します",
  "category": "javascript-dom",
  "difficulty": 2,
  "instructions": [
    "textContentでテキスト内容を変更する",
    "innerHTMLでHTML構造を含む内容を変更する",
    "ボタンクリックで要素の内容を動的に更新する",
    "複数の要素の内容を連動して変更する"
  ],
  "files": {
    "html": {
      "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>課題実装</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n    <div class=\"container\">\n        <h1>課題を実装してください</h1>\n        <!-- ここに実装してください -->\n    </div>\n    \n    <script src=\"script.js\"></script>\n</body>\n</html>",
      "expected": "<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>画面内容変更</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n    <h1>画面内容変更デモ</h1>\n    \n    <div class=\"demo-container\">\n        <!-- 1. テキスト内容変更 -->\n        <div class=\"demo-section\">\n            <h2>1. テキスト内容変更</h2>\n            <p id=\"demo-text\">ここのテキストが変わります</p>\n            <div class=\"button-group\">\n                <button id=\"text-button1\" class=\"demo-button\">挨拶メッセージ</button>\n                <button id=\"text-button2\" class=\"demo-button\">時刻表示</button>\n                <button id=\"text-button3\" class=\"demo-button\">ランダム名言</button>\n            </div>\n        </div>\n        \n        <!-- 2. HTML内容変更 -->\n        <div class=\"demo-section\">\n            <h2>2. HTML内容変更</h2>\n            <div id=\"html-content\">\n                <p>ここにHTML内容が追加されます</p>\n            </div>\n            <div class=\"button-group\">\n                <button id=\"html-button1\" class=\"demo-button\">リスト追加</button>\n                <button id=\"html-button2\" class=\"demo-button\">進捗表示</button>\n                <button id=\"reset-button\" class=\"demo-button reset\">リセット</button>\n            </div>\n        </div>\n        \n        <!-- 3. 画像変更 -->\n        <div class=\"demo-section\">\n            <h2>3. 画像変更</h2>\n            <img id=\"demo-image\" src=\"../shared/images/simple-product.svg\" alt=\"デモ画像\" class=\"demo-img\">\n            <div class=\"button-group\">\n                <button id=\"image-button1\" class=\"demo-button\">元の画像</button>\n                <button id=\"image-button2\" class=\"demo-button\">代替画像</button>\n            </div>\n        </div>\n        \n        <!-- 4. スタイル変更 -->\n        <div class=\"demo-section\">\n            <h2>4. スタイル変更</h2>\n            <div id=\"style-demo\" class=\"style-box\">\n                スタイルが変更されます\n            </div>\n            <div class=\"button-group\">\n                <button id=\"color-button\" class=\"demo-button\">色変更</button>\n                <button id=\"size-button\" class=\"demo-button\">サイズ変更</button>\n                <button id=\"border-button\" class=\"demo-button\">枠線変更</button>\n            </div>\n        </div>\n    </div>\n    \n    <script src=\"script.js\"></script>\n</body>\n</html>"
    },
    "css": {
      "template": "/* 基本的なスタイル */\nbody {\n    font-family: Arial, sans-serif;\n    margin: 40px;\n    background: #f5f5f5;\n}\n\n.container {\n    max-width: 800px;\n    margin: 0 auto;\n    background: white;\n    padding: 20px;\n    border-radius: 10px;\n    box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n}\n\n/* ここに実装してください */",
      "expected": "* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: 'Arial', sans-serif;\n    line-height: 1.6;\n    color: #333;\n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n    min-height: 100vh;\n    padding: 20px;\n}\n\nh1 {\n    text-align: center;\n    color: white;\n    margin-bottom: 30px;\n    font-size: 2rem;\n    text-shadow: 2px 2px 4px rgba(0,0,0,0.3);\n}\n\n.demo-container {\n    max-width: 800px;\n    margin: 0 auto;\n}\n\n.demo-section {\n    background: white;\n    margin-bottom: 30px;\n    padding: 25px;\n    border-radius: 15px;\n    box-shadow: 0 8px 32px rgba(0,0,0,0.1);\n    transition: transform 0.3s ease, box-shadow 0.3s ease;\n}\n\n.demo-section:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 12px 40px rgba(0,0,0,0.15);\n}\n\n.demo-section h2 {\n    color: #4a5568;\n    margin-bottom: 15px;\n    font-size: 1.3rem;\n    border-bottom: 2px solid #e2e8f0;\n    padding-bottom: 8px;\n}\n\n#demo-text {\n    background: #f7fafc;\n    padding: 15px;\n    border-radius: 8px;\n    border: 2px solid #e2e8f0;\n    margin-bottom: 15px;\n    font-size: 1.1rem;\n    min-height: 50px;\n    transition: all 0.3s ease;\n}\n\n#html-content {\n    background: #f7fafc;\n    padding: 15px;\n    border-radius: 8px;\n    border: 2px solid #e2e8f0;\n    margin-bottom: 15px;\n    min-height: 100px;\n    transition: all 0.3s ease;\n}\n\n.demo-img {\n    width: 200px;\n    height: 200px;\n    object-fit: cover;\n    border-radius: 12px;\n    margin-bottom: 15px;\n    transition: all 0.3s ease;\n    box-shadow: 0 4px 15px rgba(0,0,0,0.1);\n}\n\n.style-box {\n    background: #4299e1;\n    color: white;\n    padding: 30px;\n    text-align: center;\n    border-radius: 12px;\n    margin-bottom: 15px;\n    font-size: 1.2rem;\n    font-weight: bold;\n    transition: all 0.3s ease;\n    box-shadow: 0 4px 15px rgba(0,0,0,0.1);\n}\n\n.button-group {\n    display: flex;\n    gap: 10px;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n}\n\n.demo-button {\n    background: linear-gradient(45deg, #667eea, #764ba2);\n    color: white;\n    border: none;\n    padding: 12px 20px;\n    border-radius: 25px;\n    cursor: pointer;\n    font-size: 0.9rem;\n    font-weight: 500;\n    transition: all 0.3s ease;\n    box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);\n}\n\n.demo-button:hover {\n    transform: translateY(-3px);\n    box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);\n    background: linear-gradient(45deg, #5a67d8, #6b46c1);\n}\n\n.demo-button:active {\n    transform: translateY(-1px);\n}\n\n.demo-button.reset {\n    background: linear-gradient(45deg, #f56565, #e53e3e);\n    box-shadow: 0 4px 15px rgba(245, 101, 101, 0.3);\n}\n\n.demo-button.reset:hover {\n    background: linear-gradient(45deg, #e53e3e, #c53030);\n    box-shadow: 0 8px 25px rgba(245, 101, 101, 0.4);\n}\n\n/* アニメーション効果 */\n.fade-in {\n    animation: fadeIn 0.5s ease-in;\n}\n\n@keyframes fadeIn {\n    from {\n        opacity: 0;\n        transform: translateY(10px);\n    }\n    to {\n        opacity: 1;\n        transform: translateY(0);\n    }\n}\n\n.pulse {\n    animation: pulse 0.5s ease-in-out;\n}\n\n@keyframes pulse {\n    0% {\n        transform: scale(1);\n    }\n    50% {\n        transform: scale(1.05);\n    }\n    100% {\n        transform: scale(1);\n    }\n}\n\n/* レスポンシブデザイン */\n@media (max-width: 768px) {\n    .demo-container {\n        padding: 0 10px;\n    }\n    \n    .demo-section {\n        padding: 20px;\n        margin-bottom: 20px;\n    }\n    \n    .button-group {\n        justify-content: center;\n    }\n    \n    .demo-button {\n        padding: 10px 16px;\n        font-size: 0.85rem;\n    }\n    \n    .demo-img {\n        width: 150px;\n        height: 150px;\n    }\n    \n    h1 {\n        font-size: 1.5rem;\n    }\n}"
    },
    "js": {
      "template": "// JavaScript実装エリア\n\n// ここに実装してください\nconsole.log('課題実装を開始してください');",
      "expected": "// 17-change-content: 画面内容変更のデモ\n\n// ランダム名言のリスト\nconst quotes = [\n    \"明日は今日とは違う日。\",\n    \"成功は準備と機会が出会うところで生まれる。\",\n    \"夢は逃げない。逃げるのはいつも自分だ。\",\n    \"小さな一歩が大きな変化の始まり。\",\n    \"失敗は成功への階段。\"\n];\n\n// 色のリスト\nconst colors = ['#ff6b6b', '#4ecdc4', '#45b7d1', '#96ceb4', '#feca57', '#ff9ff3', '#54a0ff'];\n\n// DOMが読み込まれた後に実行\ndocument.addEventListener('DOMContentLoaded', function() {\n    \n    // === 1. テキスト内容変更 ===\n    \n    // 挨拶メッセージボタン\n    document.getElementById('text-button1').addEventListener('click', function() {\n        const textElement = document.getElementById('demo-text');\n        textElement.textContent = 'こんにちは！JavaScriptでテキストを変更しました！';\n        textElement.className = 'fade-in';\n        setTimeout(() => textElement.className = '', 500);\n    });\n    \n    // 時刻表示ボタン\n    document.getElementById('text-button2').addEventListener('click', function() {\n        const textElement = document.getElementById('demo-text');\n        const now = new Date();\n        textElement.textContent = `現在の時刻: ${now.toLocaleString()}`;\n        textElement.className = 'fade-in';\n        setTimeout(() => textElement.className = '', 500);\n    });\n    \n    // ランダム名言ボタン\n    document.getElementById('text-button3').addEventListener('click', function() {\n        const textElement = document.getElementById('demo-text');\n        const randomIndex = Math.floor(Math.random() * quotes.length);\n        textElement.textContent = `💡 ${quotes[randomIndex]}`;\n        textElement.className = 'fade-in';\n        setTimeout(() => textElement.className = '', 500);\n    });\n    \n    // === 2. HTML内容変更 ===\n    \n    // リスト追加ボタン\n    document.getElementById('html-button1').addEventListener('click', function() {\n        const htmlElement = document.getElementById('html-content');\n        htmlElement.innerHTML = `\n            <h3>✨ やることリスト</h3>\n            <ul style=\"padding-left: 20px; margin-top: 10px;\">\n                <li style=\"margin-bottom: 5px;\">HTMLを学習する ✅</li>\n                <li style=\"margin-bottom: 5px;\">CSSを学習する ✅</li>\n                <li style=\"margin-bottom: 5px;\">JavaScriptを学習する 📝</li>\n                <li style=\"margin-bottom: 5px;\">実用的なサイトを作る 🚀</li>\n            </ul>\n        `;\n        htmlElement.className = 'fade-in';\n        setTimeout(() => htmlElement.className = '', 500);\n    });\n    \n    // 進捗表示ボタン\n    document.getElementById('html-button2').addEventListener('click', function() {\n        const htmlElement = document.getElementById('html-content');\n        htmlElement.innerHTML = `\n            <div style=\"text-align: center;\">\n                <h3>🎯 学習の進捗</h3>\n                <div style=\"display: inline-block; background: #4299e1; color: white; padding: 15px 25px; border-radius: 10px; margin: 10px; font-weight: bold;\">HTML: 完了!</div>\n                <div style=\"display: inline-block; background: #48bb78; color: white; padding: 15px 25px; border-radius: 10px; margin: 10px; font-weight: bold;\">CSS: 完了!</div>\n                <div style=\"display: inline-block; background: #ed8936; color: white; padding: 15px 25px; border-radius: 10px; margin: 10px; font-weight: bold;\">JS: 学習中!</div>\n            </div>\n        `;\n        htmlElement.className = 'fade-in';\n        setTimeout(() => htmlElement.className = '', 500);\n    });\n    \n    // リセットボタン\n    document.getElementById('reset-button').addEventListener('click', function() {\n        const htmlElement = document.getElementById('html-content');\n        htmlElement.innerHTML = '<p>ここにHTML内容が追加されます</p>';\n        htmlElement.className = 'pulse';\n        setTimeout(() => htmlElement.className = '', 500);\n    });\n    \n    // === 3. 画像変更 ===\n    \n    // 元の画像ボタン\n    document.getElementById('image-button1').addEventListener('click', function() {\n        const imgElement = document.getElementById('demo-image');\n        imgElement.src = '../shared/images/simple-product.svg';\n        imgElement.alt = 'デモ画像';\n        imgElement.className = 'demo-img fade-in';\n        setTimeout(() => imgElement.className = 'demo-img', 500);\n    });\n    \n    // 代替画像ボタン\n    document.getElementById('image-button2').addEventListener('click', function() {\n        const imgElement = document.getElementById('demo-image');\n        // プレースホルダー画像サービスを使用\n        imgElement.src = 'https://via.placeholder.com/200x200/667eea/white?text=JavaScript';\n        imgElement.alt = 'JavaScript画像';\n        imgElement.className = 'demo-img fade-in';\n        setTimeout(() => imgElement.className = 'demo-img', 500);\n    });\n    \n    // === 4. スタイル変更 ===\n    \n    // 色変更ボタン\n    document.getElementById('color-button').addEventListener('click', function() {\n        const styleElement = document.getElementById('style-demo');\n        const randomColor = colors[Math.floor(Math.random() * colors.length)];\n        styleElement.style.backgroundColor = randomColor;\n        styleElement.style.transform = 'scale(1.1)';\n        styleElement.textContent = `色が ${randomColor} に変わりました！`;\n        \n        setTimeout(() => {\n            styleElement.style.transform = 'scale(1)';\n        }, 300);\n    });\n    \n    // サイズ変更ボタン\n    document.getElementById('size-button').addEventListener('click', function() {\n        const styleElement = document.getElementById('style-demo');\n        const currentScale = styleElement.style.transform || 'scale(1)';\n        const isLarge = currentScale.includes('1.2');\n        \n        if (isLarge) {\n            styleElement.style.transform = 'scale(1)';\n            styleElement.style.fontSize = '1.2rem';\n            styleElement.textContent = '通常のサイズに戻りました';\n        } else {\n            styleElement.style.transform = 'scale(1.2)';\n            styleElement.style.fontSize = '1.4rem';\n            styleElement.textContent = 'サイズが大きくなりました！';\n        }\n    });\n    \n    // 枠線変更ボタン\n    document.getElementById('border-button').addEventListener('click', function() {\n        const styleElement = document.getElementById('style-demo');\n        const borders = [\n            '3px solid #ff6b6b',\n            '5px dashed #4ecdc4',\n            '4px dotted #45b7d1',\n            '6px double #96ceb4',\n            '2px solid #feca57'\n        ];\n        \n        const randomBorder = borders[Math.floor(Math.random() * borders.length)];\n        styleElement.style.border = randomBorder;\n        styleElement.style.borderRadius = '15px';\n        styleElement.textContent = '枠線のスタイルが変わりました！';\n        \n        styleElement.className = 'style-box pulse';\n        setTimeout(() => styleElement.className = 'style-box', 500);\n    });\n});\n\n// ページ読み込み完了時の初期メッセージ\nconsole.log('🎯 ステップ17: 画面内容変更のスクリプトが読み込まれました！');\nconsole.log('💡 F12でコンソールを開いて、DOM操作の様子を確認してみましょう！');"
    }
  },
  "expectedResult": {
    "textContent": "テキスト内容が正しく変更される",
    "innerHTML": "HTML構造を含む内容が変更される",
    "dynamicUpdate": "ボタンクリックで内容がリアルタイム更新される",
    "behavior": "複数要素の内容が連動して変更される"
  },
  "checks": [
    {
      "id": "doctype",
      "name": "DOCTYPE宣言",
      "type": "structure",
      "message": "DOCTYPE html宣言が必要です"
    },
    {
      "id": "html",
      "name": "<html>タグ",
      "type": "structure",
      "message": "<html>タグが必要です"
    },
    {
      "id": "head",
      "name": "<head>セクション",
      "type": "structure",
      "message": "<head>セクションが必要です"
    },
    {
      "id": "body",
      "name": "<body>セクション",
      "type": "structure",
      "message": "<body>セクションが必要です"
    },
    {
      "id": "title",
      "name": "<title>タグ",
      "type": "structure",
      "message": "<title>タグと内容が必要です"
    },
    {
      "id": "css-content",
      "name": "CSSスタイル",
      "type": "css",
      "message": "CSSでスタイルを設定してください"
    },
    {
      "id": "js-content",
      "name": "JavaScript",
      "type": "js",
      "message": "JavaScriptで動的な動作を実装してください"
    }
  ]
}
{
  "id": "html-css-15_5",
  "title": "15.5: 最初のクリック",
  "description": "インタラクティブWebページの誕生 - ボタンクリックでJavaScript関数を実行し、ユーザーの操作に応答する",
  "category": "javascript-dom",
  "difficulty": 2,
  "instructions": [
    "let helloButton = document.getElementById(\"hello-button\");を追加してボタンを取得してください",
    "helloButton.addEventListener(\"click\", function() { });を追加してクリックイベントを設定してください",
    "function内にlet display = document.getElementById(\"message-display\");を追加してください",
    "function内にdisplay.textContent = \"🌟 こんにちは！ JavaScriptの世界へようこそ！\";を追加してください",
    "function内にconsole.log(\"🌟 Helloボタンがクリックされました！\");を追加してください",
    "totalClicksを増やすupdateClickStats(\"Helloボタン\");をfunction内に追加してください",
    "let totalClicks = 0;をscriptタグの始めに追加してください"
  ],
  "files": {
    "html": {
      "filename": "index.html",
      "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>ステップ15.5 - 最初のクリック</title>\n    <style>\n        body {\n            font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif;\n            max-width: 900px;\n            margin: 40px auto;\n            padding: 20px;\n            line-height: 1.6;\n            background: linear-gradient(135deg, #fa709a 0%, #fee140 100%);\n            color: #2c3e50;\n            min-height: 100vh;\n        }\n        \n        .container {\n            background: rgba(255, 255, 255, 0.95);\n            backdrop-filter: blur(10px);\n            border-radius: 20px;\n            padding: 40px;\n            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n        }\n        \n        h1 {\n            color: #e74c3c;\n            text-align: center;\n            font-size: 2.5rem;\n            margin-bottom: 10px;\n        }\n        \n        .step-info {\n            text-align: center;\n            margin-bottom: 30px;\n            opacity: 0.8;\n            color: #7f8c8d;\n        }\n        \n        .demo-section {\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            color: white;\n            padding: 30px;\n            border-radius: 15px;\n            margin: 25px 0;\n            text-align: center;\n        }\n        \n        .click-button {\n            background: linear-gradient(135deg, #ff6b6b 0%, #feca57 100%);\n            color: white;\n            border: none;\n            padding: 20px 40px;\n            font-size: 1.3rem;\n            border-radius: 50px;\n            cursor: pointer;\n            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\n            transition: all 0.3s ease;\n            margin: 10px;\n            font-weight: bold;\n        }\n        \n        .click-button:hover {\n            transform: translateY(-3px);\n            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);\n        }\n        \n        .click-button:active {\n            transform: translateY(0);\n        }\n        \n        .message-display {\n            background: rgba(255, 255, 255, 0.2);\n            padding: 20px;\n            border-radius: 10px;\n            margin: 20px 0;\n            font-size: 1.2rem;\n            font-weight: bold;\n            min-height: 60px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            border: 2px solid rgba(255, 255, 255, 0.3);\n        }\n        \n        .info-box {\n            background: #f8f9fa;\n            padding: 25px;\n            border-radius: 15px;\n            margin: 20px 0;\n            border-left: 5px solid #3498db;\n        }\n        \n        .highlight {\n            color: #e74c3c;\n            font-weight: bold;\n        }\n        \n        .code-example {\n            background: #2c3e50;\n            color: #ecf0f1;\n            padding: 15px;\n            border-radius: 8px;\n            font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\n            margin: 15px 0;\n            border: 1px solid #34495e;\n        }\n        \n        .instruction {\n            background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);\n            color: white;\n            padding: 20px;\n            border-radius: 10px;\n            margin: 20px 0;\n        }\n        \n        .celebration {\n            font-size: 3rem;\n            text-align: center;\n            margin: 20px 0;\n        }\n        \n        .stats {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n            gap: 15px;\n            margin: 20px 0;\n        }\n        \n        .stat-item {\n            background: rgba(255, 255, 255, 0.1);\n            padding: 15px;\n            border-radius: 10px;\n            text-align: center;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <h1>🖱️ 最初のクリック</h1>\n        <div class=\"step-info\">\n            <strong>ステップ15.5 - インタラクティブWebページの誕生</strong>\n        </div>\n        \n        <div class=\"celebration\">🎉 🖱️ ✨</div>\n        \n        <div class=\"info-box\">\n            <h3>📚 このステップで学ぶこと</h3>\n            <ul>\n                <li><strong>ボタンクリック</strong>でJavaScript関数を実行する</li>\n                <li><strong>addEventListener</strong>でイベントを設定する</li>\n                <li>ユーザーの操作に<strong>応答</strong>するWebページの作成</li>\n            </ul>\n        </div>\n        \n        <div class=\"demo-section\">\n            <h3>🎪 インタラクティブデモ</h3>\n            <p>下のボタンをクリックして、JavaScriptの魔法を体験しましょう！</p>\n            \n            <div class=\"message-display\" id=\"message-display\">\n                👋 ボタンをクリックしてみてください！\n            </div>\n            \n            <button class=\"click-button\" id=\"hello-button\">\n                🌟 Hello ボタン 🌟\n            </button>\n            \n            <button class=\"click-button\" id=\"color-button\">\n                🎨 色変更ボタン 🎨\n            </button>\n            \n            <button class=\"click-button\" id=\"time-button\">\n                🕐 時間表示ボタン 🕐\n            </button>\n            \n            <div class=\"stats\">\n                <div class=\"stat-item\">\n                    <div>クリック回数</div>\n                    <div id=\"click-count\" style=\"font-size: 2rem; font-weight: bold; color: #feca57;\">0</div>\n                </div>\n                <div class=\"stat-item\">\n                    <div>最後にクリックしたボタン</div>\n                    <div id=\"last-button\" style=\"font-size: 1.2rem; font-weight: bold;\">まだありません</div>\n                </div>\n            </div>\n        </div>\n        \n        <div class=\"info-box\">\n            <h3>🎯 addEventListener とは？</h3>\n            <p><strong>addEventListener</strong>は、HTML要素に「イベント」を設定するJavaScriptの機能です。</p>\n            \n            <div class=\"code-example\">\n// ボタンを取得\nlet button = document.getElementById(\"my-button\");\n\n// クリック時の動作を設定\nbutton.addEventListener(\"click\", function() {\n    alert(\"ボタンがクリックされました！\");\n});\n            </div>\n            \n            <p>この設定により、ボタンがクリックされた時に指定した処理が実行されます。</p>\n        </div>\n        \n        <div class=\"info-box\">\n            <h3>👀 実際のコードを見てみよう</h3>\n            <p>このページで使用されているコード（一部抜粋）：</p>\n            <div class=\"code-example\">\n// Helloボタンの処理\nlet helloButton = document.getElementById(\"hello-button\");\nhelloButton.addEventListener(\"click\", function() {\n    let display = document.getElementById(\"message-display\");\n    display.textContent = \"🌟 こんにちは！ JavaScriptの世界へようこそ！\";\n});\n            </div>\n        </div>\n        \n        <div class=\"instruction\">\n            <h3>🚀 体験してみよう！</h3>\n            <p>上の3つのボタンをそれぞれクリックして、どんな変化が起こるか確認してみてください。</p>\n            <p><strong>F12</strong>（MacはCmd+Option+I）で開発者ツールを開き、<strong>Console</strong>タブでクリック時のメッセージも確認できます！</p>\n        </div>\n    </div>\n    \n    <script>\n        console.log(\"🖱️ ステップ15.5: 最初のクリック体験を開始します！\");\n        console.log(\"=====================================\");\n        \n        // ここに指定されたJavaScriptコードを追加してください\n        \n        // クリック統計を更新する関数（参考用）\n        function updateClickStats(buttonName) {\n            totalClicks++;\n            document.getElementById(\"click-count\").textContent = totalClicks;\n            document.getElementById(\"last-button\").textContent = buttonName;\n            \n            console.log(\"📊 合計クリック数: \" + totalClicks);\n            console.log(\"📊 最後にクリック: \" + buttonName);\n        }\n        \n        // 2. 色変更ボタンの処理（参考用）\n        let colorButton = document.getElementById(\"color-button\");\n        colorButton.addEventListener(\"click\", function() {\n            console.log(\"🎨 色変更ボタンがクリックされました！\");\n            \n            let display = document.getElementById(\"message-display\");\n            display.textContent = \"🎨 カラフルに変身しました！\";\n            display.style.background = \"linear-gradient(135deg, #ff6b6b, #4ecdc4)\";\n            \n            updateClickStats(\"色変更ボタン\");\n        });\n        \n        // 3. 時間表示ボタンの処理（参考用）\n        let timeButton = document.getElementById(\"time-button\");\n        timeButton.addEventListener(\"click\", function() {\n            console.log(\"🕐 時間表示ボタンがクリックされました！\");\n            \n            let display = document.getElementById(\"message-display\");\n            let now = new Date();\n            let timeString = now.getHours() + \":\" + \n                           String(now.getMinutes()).padStart(2, '0') + \":\" + \n                           String(now.getSeconds()).padStart(2, '0');\n            \n            display.textContent = \"🕐 現在時刻: \" + timeString;\n            display.style.background = \"linear-gradient(135deg, #fa709a, #fee140)\";\n            \n            updateClickStats(\"時間表示ボタン\");\n        });\n        \n        console.log(\"✅ すべてのボタンイベントが設定されました！\");\n        console.log(\"💡 ボタンをクリックして、インタラクティブ機能を体験してください！\");\n    </script>\n</body>\n</html>",
      "expected": "<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>ステップ15.5 - 最初のクリック</title>\n    <style>\n        body {\n            font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif;\n            max-width: 900px;\n            margin: 40px auto;\n            padding: 20px;\n            line-height: 1.6;\n            background: linear-gradient(135deg, #fa709a 0%, #fee140 100%);\n            color: #2c3e50;\n            min-height: 100vh;\n        }\n        \n        .container {\n            background: rgba(255, 255, 255, 0.95);\n            backdrop-filter: blur(10px);\n            border-radius: 20px;\n            padding: 40px;\n            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n        }\n        \n        h1 {\n            color: #e74c3c;\n            text-align: center;\n            font-size: 2.5rem;\n            margin-bottom: 10px;\n        }\n        \n        .step-info {\n            text-align: center;\n            margin-bottom: 30px;\n            opacity: 0.8;\n            color: #7f8c8d;\n        }\n        \n        .demo-section {\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            color: white;\n            padding: 30px;\n            border-radius: 15px;\n            margin: 25px 0;\n            text-align: center;\n        }\n        \n        .click-button {\n            background: linear-gradient(135deg, #ff6b6b 0%, #feca57 100%);\n            color: white;\n            border: none;\n            padding: 20px 40px;\n            font-size: 1.3rem;\n            border-radius: 50px;\n            cursor: pointer;\n            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\n            transition: all 0.3s ease;\n            margin: 10px;\n            font-weight: bold;\n        }\n        \n        .click-button:hover {\n            transform: translateY(-3px);\n            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);\n        }\n        \n        .click-button:active {\n            transform: translateY(0);\n        }\n        \n        .message-display {\n            background: rgba(255, 255, 255, 0.2);\n            padding: 20px;\n            border-radius: 10px;\n            margin: 20px 0;\n            font-size: 1.2rem;\n            font-weight: bold;\n            min-height: 60px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            border: 2px solid rgba(255, 255, 255, 0.3);\n        }\n        \n        .info-box {\n            background: #f8f9fa;\n            padding: 25px;\n            border-radius: 15px;\n            margin: 20px 0;\n            border-left: 5px solid #3498db;\n        }\n        \n        .highlight {\n            color: #e74c3c;\n            font-weight: bold;\n        }\n        \n        .code-example {\n            background: #2c3e50;\n            color: #ecf0f1;\n            padding: 15px;\n            border-radius: 8px;\n            font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\n            margin: 15px 0;\n            border: 1px solid #34495e;\n        }\n        \n        .instruction {\n            background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);\n            color: white;\n            padding: 20px;\n            border-radius: 10px;\n            margin: 20px 0;\n        }\n        \n        .celebration {\n            font-size: 3rem;\n            text-align: center;\n            margin: 20px 0;\n        }\n        \n        .stats {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n            gap: 15px;\n            margin: 20px 0;\n        }\n        \n        .stat-item {\n            background: rgba(255, 255, 255, 0.1);\n            padding: 15px;\n            border-radius: 10px;\n            text-align: center;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <h1>🖱️ 最初のクリック</h1>\n        <div class=\"step-info\">\n            <strong>ステップ15.5 - インタラクティブWebページの誕生</strong>\n        </div>\n        \n        <div class=\"celebration\">🎉 🖱️ ✨</div>\n        \n        <div class=\"info-box\">\n            <h3>📚 このステップで学ぶこと</h3>\n            <ul>\n                <li><strong>ボタンクリック</strong>でJavaScript関数を実行する</li>\n                <li><strong>addEventListener</strong>でイベントを設定する</li>\n                <li>ユーザーの操作に<strong>応答</strong>するWebページの作成</li>\n            </ul>\n        </div>\n        \n        <div class=\"demo-section\">\n            <h3>🎪 インタラクティブデモ</h3>\n            <p>下のボタンをクリックして、JavaScriptの魔法を体験しましょう！</p>\n            \n            <div class=\"message-display\" id=\"message-display\">\n                👋 ボタンをクリックしてみてください！\n            </div>\n            \n            <button class=\"click-button\" id=\"hello-button\">\n                🌟 Hello ボタン 🌟\n            </button>\n            \n            <button class=\"click-button\" id=\"color-button\">\n                🎨 色変更ボタン 🎨\n            </button>\n            \n            <button class=\"click-button\" id=\"time-button\">\n                🕐 時間表示ボタン 🕐\n            </button>\n            \n            <div class=\"stats\">\n                <div class=\"stat-item\">\n                    <div>クリック回数</div>\n                    <div id=\"click-count\" style=\"font-size: 2rem; font-weight: bold; color: #feca57;\">0</div>\n                </div>\n                <div class=\"stat-item\">\n                    <div>最後にクリックしたボタン</div>\n                    <div id=\"last-button\" style=\"font-size: 1.2rem; font-weight: bold;\">まだありません</div>\n                </div>\n            </div>\n        </div>\n        \n        <div class=\"info-box\">\n            <h3>🎯 addEventListener とは？</h3>\n            <p><strong>addEventListener</strong>は、HTML要素に「イベント」を設定するJavaScriptの機能です。</p>\n            \n            <div class=\"code-example\">\n// ボタンを取得\nlet button = document.getElementById(\"my-button\");\n\n// クリック時の動作を設定\nbutton.addEventListener(\"click\", function() {\n    alert(\"ボタンがクリックされました！\");\n});\n            </div>\n            \n            <p>この設定により、ボタンがクリックされた時に指定した処理が実行されます。</p>\n        </div>\n        \n        <div class=\"info-box\">\n            <h3>👀 実際のコードを見てみよう</h3>\n            <p>このページで使用されているコード（一部抜粋）：</p>\n            <div class=\"code-example\">\n// Helloボタンの処理\nlet helloButton = document.getElementById(\"hello-button\");\nhelloButton.addEventListener(\"click\", function() {\n    let display = document.getElementById(\"message-display\");\n    display.textContent = \"🌟 こんにちは！ JavaScriptの世界へようこそ！\";\n});\n            </div>\n        </div>\n        \n        <div class=\"instruction\">\n            <h3>🚀 体験してみよう！</h3>\n            <p>上の3つのボタンをそれぞれクリックして、どんな変化が起こるか確認してみてください。</p>\n            <p><strong>F12</strong>（MacはCmd+Option+I）で開発者ツールを開き、<strong>Console</strong>タブでクリック時のメッセージも確認できます！</p>\n        </div>\n    </div>\n    \n    <script>\n        console.log(\"🖱️ ステップ15.5: 最初のクリック体験を開始します！\");\n        console.log(\"=====================================\");\n        \n        // クリック回数をカウントする変数\n        let totalClicks = 0;\n        \n        // 1. Helloボタンの処理\n        let helloButton = document.getElementById(\"hello-button\");\n        helloButton.addEventListener(\"click\", function() {\n            console.log(\"🌟 Helloボタンがクリックされました！\");\n            \n            let display = document.getElementById(\"message-display\");\n            display.textContent = \"🌟 こんにちは！ JavaScriptの世界へようこそ！\";\n            display.style.background = \"linear-gradient(135deg, #667eea, #764ba2)\";\n            \n            updateClickStats(\"Helloボタン\");\n        });\n        \n        // クリック統計を更新する関数（参考用）\n        function updateClickStats(buttonName) {\n            totalClicks++;\n            document.getElementById(\"click-count\").textContent = totalClicks;\n            document.getElementById(\"last-button\").textContent = buttonName;\n            \n            console.log(\"📊 合計クリック数: \" + totalClicks);\n            console.log(\"📊 最後にクリック: \" + buttonName);\n        }\n        \n        // 2. 色変更ボタンの処理（参考用）\n        let colorButton = document.getElementById(\"color-button\");\n        colorButton.addEventListener(\"click\", function() {\n            console.log(\"🎨 色変更ボタンがクリックされました！\");\n            \n            let display = document.getElementById(\"message-display\");\n            display.textContent = \"🎨 カラフルに変身しました！\";\n            display.style.background = \"linear-gradient(135deg, #ff6b6b, #4ecdc4)\";\n            \n            updateClickStats(\"色変更ボタン\");\n        });\n        \n        // 3. 時間表示ボタンの処理（参考用）\n        let timeButton = document.getElementById(\"time-button\");\n        timeButton.addEventListener(\"click\", function() {\n            console.log(\"🕐 時間表示ボタンがクリックされました！\");\n            \n            let display = document.getElementById(\"message-display\");\n            let now = new Date();\n            let timeString = now.getHours() + \":\" + \n                           String(now.getMinutes()).padStart(2, '0') + \":\" + \n                           String(now.getSeconds()).padStart(2, '0');\n            \n            display.textContent = \"🕐 現在時刻: \" + timeString;\n            display.style.background = \"linear-gradient(135deg, #fa709a, #fee140)\";\n            \n            updateClickStats(\"時間表示ボタン\");\n        });\n        \n        console.log(\"✅ すべてのボタンイベントが設定されました！\");\n        console.log(\"💡 ボタンをクリックして、インタラクティブ機能を体験してください！\");\n    </script>\n</body>\n</html>"
    }
  },
  "checks": [
    { "id": "total-clicks-variable", "name": "totalClicks変数の宣言", "type": "javascript", "message": "let totalClicks = 0;の宣言が必要です" },
    { "id": "get-hello-button", "name": "helloButton要素の取得", "type": "javascript", "message": "let helloButton = document.getElementById(\"hello-button\");が必要です" },
    { "id": "add-event-listener", "name": "クリックイベントの設定", "type": "javascript", "message": "helloButton.addEventListener(\"click\", function() { });が必要です" },
    { "id": "get-display-element", "name": "display要素の取得", "type": "javascript", "message": "function内にlet display = document.getElementById(\"message-display\");が必要です" },
    { "id": "change-display-content", "name": "メッセージ表示の変更", "type": "javascript", "message": "function内にdisplay.textContent = \"🌟 こんにちは！ JavaScriptの世界へようこそ！\";が必要です" },
    { "id": "console-log-click", "name": "クリックメッセージの出力", "type": "javascript", "message": "function内にconsole.log(\"🌟 Helloボタンがクリックされました！\");が必要です" },
    { "id": "update-click-stats", "name": "クリック統計の更新", "type": "javascript", "message": "function内にupdateClickStats(\"Helloボタン\");が必要です" }
  ],
  "hints": [
    "addEventListener()でボタンにイベントを設定",
    "\"click\"でクリックイベントを指定",
    "function() { }内にクリック時の処理を書く",
    "textContentで表示メッセージを変更",
    "コンソールでクリック時のメッセージも確認できる"
  ]
}
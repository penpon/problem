{
  "id": "js-advanced-19",
  "title": "基本的なページ交互作用",
  "description": "ボタンをクリックしたときの簡単な動きを作り、色の変化やホバー効果でページをより楽しくインタラクティブにします",
  "category": "practical-projects",
  "difficulty": 2,
  "instructions": [
    "商品詳細の表示・非表示切り替え機能を実装する",
    "マウスホバー効果で色が変わる仕組みを作る",
    "いいね機能でボタンを押すと数が増えるシステムを実装する",
    "操作したときにメッセージが出る簡単な通知機能を作る"
  ],
  "files": {
    "html": {
      "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>課題実装</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n    <div class=\"container\">\n        <h1>課題を実装してください</h1>\n        <!-- ここに実装してください -->\n    </div>\n    \n    <script src=\"script.js\"></script>\n</body>\n</html>",
      "expected": "<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>ステップ44: 基本的なページ交互作用</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n    <div class=\"container\">\n        <!-- 商品カード -->\n        <div class=\"product-card\">\n            <!-- 商品画像 -->\n            <div class=\"product-image\">👕</div>\n            \n            <!-- 商品情報 -->\n            <h2>おしゃれなTシャツ</h2>\n            <p class=\"price\">¥1,980</p>\n            \n            <!-- ボタン群 -->\n            <div class=\"buttons\">\n                <button class=\"like-btn\" id=\"likeBtn\">\n                    ❤️ いいね <span id=\"likeCount\">0</span>\n                </button>\n                \n                <button class=\"detail-btn\" id=\"detailBtn\">\n                    詳細を見る\n                </button>\n            </div>\n            \n            <!-- 商品詳細（最初は隠れている） -->\n            <div class=\"product-details\" id=\"productDetails\" style=\"display: none;\">\n                <h3>商品詳細</h3>\n                <p><strong>素材:</strong> コットン100%</p>\n                <p><strong>サイズ:</strong> S / M / L</p>\n                <p><strong>色:</strong> 白、黒、グレー</p>\n                <p><strong>特徴:</strong> 着心地が良く洗濯しやすい</p>\n            </div>\n        </div>\n        \n        <!-- メッセージ表示エリア -->\n        <div class=\"message-area\">\n            <h3>📝 操作メッセージ</h3>\n            <div class=\"message-display\" id=\"messageDisplay\">\n                ボタンを押すとメッセージが表示されます\n            </div>\n        </div>\n    </div>\n\n    <script src=\"script.js\"></script>\n</body>\n</html>"
    },
    "css": {
      "template": "/* 基本的なスタイル */\nbody {\n    font-family: Arial, sans-serif;\n    margin: 40px;\n    background: #f5f5f5;\n}\n\n.container {\n    max-width: 800px;\n    margin: 0 auto;\n    background: white;\n    padding: 20px;\n    border-radius: 10px;\n    box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n}\n\n/* ここに実装してください */",
      "expected": "/* 基本設定 */\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: 'Hiragino Sans', sans-serif;\n    background-color: #f0f2f5;\n    padding: 20px;\n}\n\n/* メインレイアウト */\n.container {\n    max-width: 800px;\n    margin: 0 auto;\n    display: flex;\n    gap: 30px;\n    flex-wrap: wrap;\n}\n\n/* 商品カード */\n.product-card {\n    background: white;\n    border-radius: 15px;\n    padding: 30px;\n    text-align: center;\n    box-shadow: 0 4px 12px rgba(0,0,0,0.1);\n    flex: 1;\n    min-width: 350px;\n}\n\n/* 商品画像 */\n.product-image {\n    width: 100px;\n    height: 100px;\n    background-color: #e3f2fd;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 40px;\n    margin: 0 auto 20px auto;\n}\n\n/* マウスを乗せると少し大きくなる */\n.product-image:hover {\n    transform: scale(1.1);\n    background-color: #bbdefb;\n}\n\n/* 商品タイトル */\nh2 {\n    color: #333;\n    margin-bottom: 10px;\n}\n\n/* 価格 */\n.price {\n    font-size: 24px;\n    color: #e74c3c;\n    font-weight: bold;\n    margin-bottom: 25px;\n}\n\n/* ボタン群 */\n.buttons {\n    display: flex;\n    gap: 15px;\n    justify-content: center;\n    margin-bottom: 20px;\n}\n\n/* いいねボタン */\n.like-btn {\n    background-color: #f8f9fa;\n    color: #666;\n    border: 2px solid #ddd;\n    padding: 12px 20px;\n    border-radius: 25px;\n    cursor: pointer;\n    font-size: 14px;\n    font-weight: bold;\n}\n\n/* いいねボタン: マウスを乗せた時 */\n.like-btn:hover {\n    background-color: #ffebee;\n    border-color: #e74c3c;\n    color: #e74c3c;\n}\n\n/* いいねボタン: 押した時 */\n.like-btn.liked {\n    background-color: #e74c3c;\n    color: white;\n    border-color: #e74c3c;\n}\n\n/* 詳細ボタン */\n.detail-btn {\n    background-color: #2196f3;\n    color: white;\n    border: none;\n    padding: 12px 20px;\n    border-radius: 25px;\n    cursor: pointer;\n    font-size: 14px;\n    font-weight: bold;\n}\n\n/* 詳細ボタン: マウスを乗せた時 */\n.detail-btn:hover {\n    background-color: #1976d2;\n    transform: translateY(-2px);\n}\n\n/* 商品詳細エリア */\n.product-details {\n    background-color: #f8f9fa;\n    border-radius: 10px;\n    padding: 20px;\n    text-align: left;\n    margin-top: 20px;\n}\n\n.product-details h3 {\n    color: #333;\n    margin-bottom: 15px;\n}\n\n.product-details p {\n    color: #666;\n    margin-bottom: 8px;\n    line-height: 1.5;\n}\n\n/* メッセージ表示エリア */\n.message-area {\n    background: white;\n    border-radius: 15px;\n    padding: 25px;\n    box-shadow: 0 4px 12px rgba(0,0,0,0.1);\n    flex: 1;\n    min-width: 300px;\n}\n\n.message-area h3 {\n    color: #333;\n    margin-bottom: 15px;\n}\n\n.message-display {\n    background-color: #e8f5e8;\n    padding: 15px;\n    border-radius: 8px;\n    border-left: 4px solid #4caf50;\n    color: #2e7d2e;\n    font-size: 14px;\n    line-height: 1.5;\n}\n\n/* すべてのボタンにスムーズな変化を追加 */\nbutton {\n    transition: all 0.3s ease;\n}\n\n/* 商品画像にもスムーズな変化を追加 */\n.product-image {\n    transition: all 0.3s ease;\n}"
    },
    "js": {
      "template": "// JavaScript実装エリア\n\n// ここに実装してください\nconsole.log('課題実装を開始してください');",
      "expected": "// ===== 基本的なページ交互作用の学習 =====\n\n// いいねの数を記録する変数\nlet likeCount = 0;\nlet isLiked = false;\n\n// 詳細表示の状態を記録する変数\nlet isDetailsShown = false;\n\n// メッセージを表示する関数\nfunction showMessage(message) {\n    const messageDisplay = document.getElementById('messageDisplay');\n    messageDisplay.textContent = message;\n    \n    // 少し時間が経ったら元のメッセージに戻る\n    setTimeout(function() {\n        messageDisplay.textContent = 'ボタンを押すとメッセージが表示されます';\n    }, 3000); // 3秒後\n}\n\n// いいねボタンが押された時の処理\nfunction handleLikeClick() {\n    const likeBtn = document.getElementById('likeBtn');\n    const likeCountDisplay = document.getElementById('likeCount');\n    \n    if (isLiked) {\n        // すでにいいねしている場合：いいねを取り消す\n        isLiked = false;\n        likeCount = likeCount - 1;\n        likeBtn.classList.remove('liked'); // 赤い色を削除\n        showMessage('いいねを取り消しました');\n    } else {\n        // まだいいねしていない場合：いいねする\n        isLiked = true;\n        likeCount = likeCount + 1;\n        likeBtn.classList.add('liked'); // 赤い色を追加\n        showMessage('❤️ いいねしました！ありがとうございます');\n    }\n    \n    // 画面の数字を更新\n    likeCountDisplay.textContent = likeCount;\n}\n\n// 詳細ボタンが押された時の処理\nfunction handleDetailClick() {\n    const detailBtn = document.getElementById('detailBtn');\n    const productDetails = document.getElementById('productDetails');\n    \n    if (isDetailsShown) {\n        // 詳細が表示されている場合：隠す\n        isDetailsShown = false;\n        productDetails.style.display = 'none';\n        detailBtn.textContent = '詳細を見る';\n        showMessage('商品詳細を隠しました');\n    } else {\n        // 詳細が隠れている場合：表示する\n        isDetailsShown = true;\n        productDetails.style.display = 'block';\n        detailBtn.textContent = '詳細を隠す';\n        showMessage('📝 商品詳細を表示しました');\n    }\n}\n\n// ページが読み込まれた時の初期設定\ndocument.addEventListener('DOMContentLoaded', function() {\n    // いいねボタンにクリックイベントを追加\n    const likeBtn = document.getElementById('likeBtn');\n    likeBtn.addEventListener('click', handleLikeClick);\n    \n    // 詳細ボタンにクリックイベントを追加\n    const detailBtn = document.getElementById('detailBtn');\n    detailBtn.addEventListener('click', handleDetailClick);\n    \n    // 最初のメッセージを表示\n    showMessage('ページが読み込まれました！ボタンを試してみてください');\n    \n    console.log('=== ステップ44: 基本的なページ交互作用 ===');\n    console.log('学習ポイント：');\n    console.log('1. ボタンクリックで表示・非表示を切り替え');\n    console.log('2. CSSクラスの追加・削除で見た目を変更');\n    console.log('3. 変数で状態を管理');\n    console.log('4. メッセージでユーザーに操作結果を伝える');\n});"
    }
  },
  "expectedResult": {
    "detailsToggle": "詳細表示・非表示が切り替えられる",
    "hoverEffects": "マウスホバーで色や見た目が変化する",
    "likeInteraction": "いいねボタンで数値が増減する",
    "messageDisplay": "操作時にわかりやすいメッセージが表示される",
    "visualFeedback": "ユーザーの操作に対する視覚的フィードバックが提供される",
    "behavior": "簡単だが楽しいインタラクティブな体験が完成する"
  },
  "checks": [
    {
      "id": "doctype",
      "name": "DOCTYPE宣言",
      "type": "structure",
      "message": "DOCTYPE html宣言が必要です"
    },
    {
      "id": "html",
      "name": "<html>タグ",
      "type": "structure",
      "message": "<html>タグが必要です"
    },
    {
      "id": "head",
      "name": "<head>セクション",
      "type": "structure",
      "message": "<head>セクションが必要です"
    },
    {
      "id": "body",
      "name": "<body>セクション",
      "type": "structure",
      "message": "<body>セクションが必要です"
    },
    {
      "id": "title",
      "name": "<title>タグ",
      "type": "structure",
      "message": "<title>タグと内容が必要です"
    },
    {
      "id": "css-content",
      "name": "CSSスタイル",
      "type": "css",
      "message": "CSSでスタイルを設定してください"
    },
    {
      "id": "js-content",
      "name": "JavaScript",
      "type": "js",
      "message": "JavaScriptで動的な動作を実装してください"
    }
  ]
}
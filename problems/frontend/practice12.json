{
  "id": "practice12",
  "title": "12: シンプルアニメーション",
  "description": "transitionとkeyframesを使った基本的なアニメーション効果",
  "category": "css-advanced",
  "difficulty": 3,
  "instructions": [
    ".basic-hoverクラスにtransition: all 0.3s easeを設定してください",
    ".basic-hover:hoverにtransform: scale(1.1)とbackground-color: #3498dbを設定してください",
    ".bounce-boxクラスにanimation: bounce 2s infinite easeを設定してください",
    ".fade-boxクラスにanimation: fade 1.5s infinite ease-in-outを設定してください",
    ".slide-boxクラスにanimation: slide 3s infinite linear、position: relativeを設定してください"
  ],
  "files": {
    "html": {
      "filename": "index.html",
      "template": "<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>簡単なアニメーション</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n    <h1>アニメーションの練習</h1>\n    \n    <h2>1. 基本的なtransition</h2>\n    <div class=\"hover-container\">\n        <div class=\"basic-hover\">基本のホバー効果</div>\n        <div class=\"color-change\">色が変わります</div>\n        <div class=\"size-change\">サイズが変わります</div>\n    </div>\n    \n    <h2>2. transform による変形</h2>\n    <div class=\"transform-container\">\n        <div class=\"move-box\">移動します</div>\n        <div class=\"rotate-box\">回転します</div>\n        <div class=\"scale-box\">拡大します</div>\n    </div>\n    \n    <h2>3. 複合的な変化</h2>\n    <div class=\"complex-container\">\n        <div class=\"complex-card\">\n            <h3>複合カード</h3>\n            <p>複数の効果が同時に変化します</p>\n        </div>\n        \n        <div class=\"floating-card\">\n            <h3>浮き上がるカード</h3>\n            <p>影と位置が変化します</p>\n        </div>\n    </div>\n    \n    <h2>4. @keyframes アニメーション</h2>\n    <div class=\"keyframes-container\">\n        <div class=\"bounce-box\">跳ねる動き</div>\n        <div class=\"fade-box\">点滅します</div>\n        <div class=\"slide-box\">左右に動きます</div>\n    </div>\n    \n    <h2>5. 実用例：ボタンアニメーション</h2>\n    <div class=\"button-container\">\n        <button class=\"primary-button\">メインボタン</button>\n        <button class=\"secondary-button\">サブボタン</button>\n        <button class=\"success-button\">成功ボタン</button>\n    </div>\n    \n    <h2>6. ローディングアニメーション</h2>\n    <div class=\"loading-container\">\n        <div class=\"spinner\"></div>\n        <div class=\"dots\">\n            <div class=\"dot\"></div>\n            <div class=\"dot\"></div>\n            <div class=\"dot\"></div>\n        </div>\n        <div class=\"progress-bar\">\n            <div class=\"progress\"></div>\n        </div>\n    </div>\n</body>\n</html>",
      "expected": "<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>簡単なアニメーション</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n    <h1>アニメーションの練習</h1>\n    \n    <h2>1. 基本的なtransition</h2>\n    <div class=\"hover-container\">\n        <div class=\"basic-hover\">基本のホバー効果</div>\n        <div class=\"color-change\">色が変わります</div>\n        <div class=\"size-change\">サイズが変わります</div>\n    </div>\n    \n    <h2>2. transform による変形</h2>\n    <div class=\"transform-container\">\n        <div class=\"move-box\">移動します</div>\n        <div class=\"rotate-box\">回転します</div>\n        <div class=\"scale-box\">拡大します</div>\n    </div>\n    \n    <h2>3. 複合的な変化</h2>\n    <div class=\"complex-container\">\n        <div class=\"complex-card\">\n            <h3>複合カード</h3>\n            <p>複数の効果が同時に変化します</p>\n        </div>\n        \n        <div class=\"floating-card\">\n            <h3>浮き上がるカード</h3>\n            <p>影と位置が変化します</p>\n        </div>\n    </div>\n    \n    <h2>4. @keyframes アニメーション</h2>\n    <div class=\"keyframes-container\">\n        <div class=\"bounce-box\">跳ねる動き</div>\n        <div class=\"fade-box\">点滅します</div>\n        <div class=\"slide-box\">左右に動きます</div>\n    </div>\n    \n    <h2>5. 実用例：ボタンアニメーション</h2>\n    <div class=\"button-container\">\n        <button class=\"primary-button\">メインボタン</button>\n        <button class=\"secondary-button\">サブボタン</button>\n        <button class=\"success-button\">成功ボタン</button>\n    </div>\n    \n    <h2>6. ローディングアニメーション</h2>\n    <div class=\"loading-container\">\n        <div class=\"spinner\"></div>\n        <div class=\"dots\">\n            <div class=\"dot\"></div>\n            <div class=\"dot\"></div>\n            <div class=\"dot\"></div>\n        </div>\n        <div class=\"progress-bar\">\n            <div class=\"progress\"></div>\n        </div>\n    </div>\n</body>\n</html>"
    },
    "css": {
      "filename": "style.css",
      "template": "/* 簡単なアニメーション - transitionとkeyframesの基本 */\n\n/* 基本スタイル */\nbody {\n    font-family: Arial, sans-serif;\n    margin: 0;\n    padding: 20px;\n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n    min-height: 100vh;\n    color: white;\n}\n\nh1 {\n    text-align: center;\n    color: white;\n    margin-bottom: 40px;\n    text-shadow: 2px 2px 4px rgba(0,0,0,0.3);\n}\n\nh2 {\n    color: #f8f9fa;\n    margin-top: 50px;\n    margin-bottom: 20px;\n    border-left: 4px solid #ffd700;\n    padding-left: 15px;\n}\n\nh3 {\n    margin-top: 0;\n    color: #2c3e50;\n}\n\n/* コンテナ */\n.hover-container, .transform-container, .complex-container, \n.keyframes-container, .button-container, .loading-container {\n    display: flex;\n    gap: 20px;\n    justify-content: center;\n    flex-wrap: wrap;\n    margin: 30px 0;\n}\n\n/* 1. 基本的なtransition */\n.basic-hover {\n    background-color: rgba(255,255,255,0.9);\n    color: #333;\n    padding: 20px;\n    border-radius: 8px;\n    cursor: pointer;\n    /* ここにtransition: all 0.3s easeを追加してください */\n}\n\n.basic-hover:hover {\n    /* ここにtransform: scale(1.1)とbackground-color: #3498dbを追加してください */\n    color: white;\n}\n\n.color-change {\n    background-color: #e74c3c;\n    color: white;\n    padding: 20px;\n    border-radius: 8px;\n    cursor: pointer;\n    transition: background-color 0.5s ease;\n}\n\n.color-change:hover {\n    background-color: #27ae60;\n}\n\n.size-change {\n    background-color: #9b59b6;\n    color: white;\n    padding: 20px;\n    border-radius: 8px;\n    cursor: pointer;\n    transition: transform 0.3s ease;\n}\n\n.size-change:hover {\n    transform: scale(1.1);\n}\n\n/* 2. transform による変形 */\n.move-box {\n    background-color: rgba(255,255,255,0.9);\n    color: #333;\n    padding: 20px;\n    border-radius: 8px;\n    cursor: pointer;\n    transition: transform 0.4s ease;\n}\n\n.move-box:hover {\n    transform: translateX(20px);\n}\n\n.rotate-box {\n    background-color: rgba(255,255,255,0.9);\n    color: #333;\n    padding: 20px;\n    border-radius: 8px;\n    cursor: pointer;\n    transition: transform 0.5s ease;\n}\n\n.rotate-box:hover {\n    transform: rotate(15deg);\n}\n\n.scale-box {\n    background-color: rgba(255,255,255,0.9);\n    color: #333;\n    padding: 20px;\n    border-radius: 8px;\n    cursor: pointer;\n    transition: transform 0.3s ease;\n}\n\n.scale-box:hover {\n    transform: scale(1.2);\n}\n\n/* 3. 複合的な変化 */\n.complex-card {\n    background-color: white;\n    color: #333;\n    padding: 25px;\n    border-radius: 15px;\n    cursor: pointer;\n    box-shadow: 0 4px 15px rgba(0,0,0,0.2);\n    transition: all 0.3s ease;\n    width: 200px;\n}\n\n.complex-card:hover {\n    transform: translateY(-10px) scale(1.05);\n    box-shadow: 0 8px 30px rgba(0,0,0,0.3);\n    background: linear-gradient(135deg, #ff6b6b, #4ecdc4);\n    color: white;\n}\n\n.floating-card {\n    background-color: white;\n    color: #333;\n    padding: 25px;\n    border-radius: 15px;\n    cursor: pointer;\n    box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n    transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n    width: 200px;\n}\n\n.floating-card:hover {\n    transform: translateY(-20px);\n    box-shadow: 0 20px 40px rgba(0,0,0,0.3);\n}\n\n/* 4. @keyframes アニメーション */\n@keyframes bounce {\n    0%, 100% { transform: translateY(0); }\n    50% { transform: translateY(-20px); }\n}\n\n.bounce-box {\n    background-color: #f39c12;\n    color: white;\n    padding: 20px;\n    border-radius: 8px;\n    /* ここにanimation: bounce 2s infinite easeを追加してください */\n}\n\n@keyframes fade {\n    0%, 100% { opacity: 1; }\n    50% { opacity: 0.3; }\n}\n\n.fade-box {\n    background-color: #e74c3c;\n    color: white;\n    padding: 20px;\n    border-radius: 8px;\n    /* ここにanimation: fade 1.5s infinite ease-in-outを追加してください */\n}\n\n@keyframes slide {\n    0%, 100% { transform: translateX(0); }\n    50% { transform: translateX(30px); }\n}\n\n.slide-box {\n    background-color: #2ecc71;\n    color: white;\n    padding: 20px;\n    border-radius: 8px;\n    /* ここにanimation: slide 3s infinite linearとposition: relativeを追加してください */\n}\n\n/* 5. ボタンアニメーション */\n.primary-button, .secondary-button, .success-button {\n    padding: 15px 30px;\n    border: none;\n    border-radius: 25px;\n    font-size: 16px;\n    cursor: pointer;\n    transition: all 0.3s ease;\n    margin: 5px;\n}\n\n.primary-button {\n    background: linear-gradient(135deg, #667eea, #764ba2);\n    color: white;\n}\n\n.primary-button:hover {\n    transform: translateY(-3px);\n    box-shadow: 0 10px 25px rgba(102, 126, 234, 0.4);\n}\n\n.secondary-button {\n    background: transparent;\n    color: white;\n    border: 2px solid white;\n}\n\n.secondary-button:hover {\n    background: white;\n    color: #764ba2;\n    transform: scale(1.05);\n}\n\n.success-button {\n    background: linear-gradient(135deg, #56ab2f, #a8e6cf);\n    color: white;\n}\n\n.success-button:hover {\n    background: linear-gradient(135deg, #a8e6cf, #56ab2f);\n    transform: scale(0.95);\n}\n\n/* 6. ローディングアニメーション */\n@keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n}\n\n.spinner {\n    width: 40px;\n    height: 40px;\n    border: 4px solid rgba(255,255,255,0.3);\n    border-top: 4px solid white;\n    border-radius: 50%;\n    animation: spin 1s linear infinite;\n}\n\n@keyframes dot-bounce {\n    0%, 100% { transform: translateY(0); }\n    50% { transform: translateY(-20px); }\n}\n\n.dots {\n    display: flex;\n    gap: 5px;\n}\n\n.dot {\n    width: 12px;\n    height: 12px;\n    background-color: white;\n    border-radius: 50%;\n    animation: dot-bounce 1.4s infinite;\n}\n\n.dot:nth-child(2) {\n    animation-delay: 0.2s;\n}\n\n.dot:nth-child(3) {\n    animation-delay: 0.4s;\n}\n\n@keyframes progress {\n    0% { width: 0%; }\n    100% { width: 100%; }\n}\n\n.progress-bar {\n    width: 200px;\n    height: 8px;\n    background-color: rgba(255,255,255,0.3);\n    border-radius: 4px;\n    overflow: hidden;\n}\n\n.progress {\n    height: 100%;\n    background: linear-gradient(90deg, #ffd700, #ff6b6b);\n    border-radius: 4px;\n    animation: progress 3s infinite;\n}",
      "expected": "/* 簡単なアニメーション - transitionとkeyframesの基本 */\n\n/* 基本スタイル */\nbody {\n    font-family: Arial, sans-serif;\n    margin: 0;\n    padding: 20px;\n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n    min-height: 100vh;\n    color: white;\n}\n\nh1 {\n    text-align: center;\n    color: white;\n    margin-bottom: 40px;\n    text-shadow: 2px 2px 4px rgba(0,0,0,0.3);\n}\n\nh2 {\n    color: #f8f9fa;\n    margin-top: 50px;\n    margin-bottom: 20px;\n    border-left: 4px solid #ffd700;\n    padding-left: 15px;\n}\n\nh3 {\n    margin-top: 0;\n    color: #2c3e50;\n}\n\n/* コンテナ */\n.hover-container, .transform-container, .complex-container, \n.keyframes-container, .button-container, .loading-container {\n    display: flex;\n    gap: 20px;\n    justify-content: center;\n    flex-wrap: wrap;\n    margin: 30px 0;\n}\n\n/* 1. 基本的なtransition */\n.basic-hover {\n    background-color: rgba(255,255,255,0.9);\n    color: #333;\n    padding: 20px;\n    border-radius: 8px;\n    cursor: pointer;\n    transition: all 0.3s ease;\n}\n\n.basic-hover:hover {\n    transform: scale(1.1);\n    background-color: #3498db;\n    color: white;\n}\n\n.color-change {\n    background-color: #e74c3c;\n    color: white;\n    padding: 20px;\n    border-radius: 8px;\n    cursor: pointer;\n    transition: background-color 0.5s ease;\n}\n\n.color-change:hover {\n    background-color: #27ae60;\n}\n\n.size-change {\n    background-color: #9b59b6;\n    color: white;\n    padding: 20px;\n    border-radius: 8px;\n    cursor: pointer;\n    transition: transform 0.3s ease;\n}\n\n.size-change:hover {\n    transform: scale(1.1);\n}\n\n/* 2. transform による変形 */\n.move-box {\n    background-color: rgba(255,255,255,0.9);\n    color: #333;\n    padding: 20px;\n    border-radius: 8px;\n    cursor: pointer;\n    transition: transform 0.4s ease;\n}\n\n.move-box:hover {\n    transform: translateX(20px);\n}\n\n.rotate-box {\n    background-color: rgba(255,255,255,0.9);\n    color: #333;\n    padding: 20px;\n    border-radius: 8px;\n    cursor: pointer;\n    transition: transform 0.5s ease;\n}\n\n.rotate-box:hover {\n    transform: rotate(15deg);\n}\n\n.scale-box {\n    background-color: rgba(255,255,255,0.9);\n    color: #333;\n    padding: 20px;\n    border-radius: 8px;\n    cursor: pointer;\n    transition: transform 0.3s ease;\n}\n\n.scale-box:hover {\n    transform: scale(1.2);\n}\n\n/* 3. 複合的な変化 */\n.complex-card {\n    background-color: white;\n    color: #333;\n    padding: 25px;\n    border-radius: 15px;\n    cursor: pointer;\n    box-shadow: 0 4px 15px rgba(0,0,0,0.2);\n    transition: all 0.3s ease;\n    width: 200px;\n}\n\n.complex-card:hover {\n    transform: translateY(-10px) scale(1.05);\n    box-shadow: 0 8px 30px rgba(0,0,0,0.3);\n    background: linear-gradient(135deg, #ff6b6b, #4ecdc4);\n    color: white;\n}\n\n.floating-card {\n    background-color: white;\n    color: #333;\n    padding: 25px;\n    border-radius: 15px;\n    cursor: pointer;\n    box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n    transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n    width: 200px;\n}\n\n.floating-card:hover {\n    transform: translateY(-20px);\n    box-shadow: 0 20px 40px rgba(0,0,0,0.3);\n}\n\n/* 4. @keyframes アニメーション */\n@keyframes bounce {\n    0%, 100% { transform: translateY(0); }\n    50% { transform: translateY(-20px); }\n}\n\n.bounce-box {\n    background-color: #f39c12;\n    color: white;\n    padding: 20px;\n    border-radius: 8px;\n    animation: bounce 2s infinite ease;\n}\n\n@keyframes fade {\n    0%, 100% { opacity: 1; }\n    50% { opacity: 0.3; }\n}\n\n.fade-box {\n    background-color: #e74c3c;\n    color: white;\n    padding: 20px;\n    border-radius: 8px;\n    animation: fade 1.5s infinite ease-in-out;\n}\n\n@keyframes slide {\n    0%, 100% { transform: translateX(0); }\n    50% { transform: translateX(30px); }\n}\n\n.slide-box {\n    background-color: #2ecc71;\n    color: white;\n    padding: 20px;\n    border-radius: 8px;\n    position: relative;\n    animation: slide 3s infinite linear;\n}\n\n/* 5. ボタンアニメーション */\n.primary-button, .secondary-button, .success-button {\n    padding: 15px 30px;\n    border: none;\n    border-radius: 25px;\n    font-size: 16px;\n    cursor: pointer;\n    transition: all 0.3s ease;\n    margin: 5px;\n}\n\n.primary-button {\n    background: linear-gradient(135deg, #667eea, #764ba2);\n    color: white;\n}\n\n.primary-button:hover {\n    transform: translateY(-3px);\n    box-shadow: 0 10px 25px rgba(102, 126, 234, 0.4);\n}\n\n.secondary-button {\n    background: transparent;\n    color: white;\n    border: 2px solid white;\n}\n\n.secondary-button:hover {\n    background: white;\n    color: #764ba2;\n    transform: scale(1.05);\n}\n\n.success-button {\n    background: linear-gradient(135deg, #56ab2f, #a8e6cf);\n    color: white;\n}\n\n.success-button:hover {\n    background: linear-gradient(135deg, #a8e6cf, #56ab2f);\n    transform: scale(0.95);\n}\n\n/* 6. ローディングアニメーション */\n@keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n}\n\n.spinner {\n    width: 40px;\n    height: 40px;\n    border: 4px solid rgba(255,255,255,0.3);\n    border-top: 4px solid white;\n    border-radius: 50%;\n    animation: spin 1s linear infinite;\n}\n\n@keyframes dot-bounce {\n    0%, 100% { transform: translateY(0); }\n    50% { transform: translateY(-20px); }\n}\n\n.dots {\n    display: flex;\n    gap: 5px;\n}\n\n.dot {\n    width: 12px;\n    height: 12px;\n    background-color: white;\n    border-radius: 50%;\n    animation: dot-bounce 1.4s infinite;\n}\n\n.dot:nth-child(2) {\n    animation-delay: 0.2s;\n}\n\n.dot:nth-child(3) {\n    animation-delay: 0.4s;\n}\n\n@keyframes progress {\n    0% { width: 0%; }\n    100% { width: 100%; }\n}\n\n.progress-bar {\n    width: 200px;\n    height: 8px;\n    background-color: rgba(255,255,255,0.3);\n    border-radius: 4px;\n    overflow: hidden;\n}\n\n.progress {\n    height: 100%;\n    background: linear-gradient(90deg, #ffd700, #ff6b6b);\n    border-radius: 4px;\n    animation: progress 3s infinite;\n}"
    }
  },
  "checks": [
    { "id": "basic-hover-transition", "name": "基本ホバートランジション", "type": "style", "message": ".basic-hoverにtransition: all 0.3s easeが必要です" },
    { "id": "basic-hover-transform", "name": "基本ホバー変形", "type": "style", "message": ".basic-hover:hoverにtransform: scale(1.1)が必要です" },
    { "id": "basic-hover-color", "name": "基本ホバー色変更", "type": "style", "message": ".basic-hover:hoverにbackground-color: #3498dbが必要です" },
    { "id": "bounce-animation", "name": "バウンスアニメーション", "type": "style", "message": ".bounce-boxにanimation: bounce 2s infinite easeが必要です" },
    { "id": "fade-animation", "name": "フェードアニメーション", "type": "style", "message": ".fade-boxにanimation: fade 1.5s infinite ease-in-outが必要です" },
    { "id": "slide-animation", "name": "スライドアニメーション", "type": "style", "message": ".slide-boxにanimation: slide 3s infinite linear、position: relativeが必要です" }
  ],
  "hints": [
    "transitionはプロパティの変化を滑らかにする",
    "@keyframesで独自のアニメーションパターンを定義",
    "transform: scale(1.1)で1.1倍に拡大",
    "infinite は無限にアニメーションを繰り返す",
    "ease, ease-in-out, linearは速度曲線の種類"
  ]
}
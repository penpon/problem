{
  "id": "practice10",
  "title": "練習問題10：アロー関数の基本",
  "description": "アロー関数を使って簡潔に関数を書いてみよう！",
  "instructions": [
    "アロー関数の記法 (=>) を理解してください。",
    "引数と戻り値を持つアロー関数の作り方を学んでください。",
    "従来の関数とアロー関数の違いを理解してください。"
  ],
  "template": "// 問題10: アロー関数の基本\\n// アロー関数を使って簡潔に関数を書いてみよう！\\n\\n// 1. greetアロー関数を定義してください（引数: name、戻り値: \\\"Hello, [name]!\\\"）\\nlet greet = /* ここにアロー関数を書く */;\\n\\n// 2. squareアロー関数を定義してください（引数: num、戻り値: num * num）\\nlet square = /* ここにアロー関数を書く */;\\n\\n// 3. showMessageアロー関数を定義してください（引数なし、「アロー関数を学習中です！」を表示）\\nlet showMessage = /* ここにアロー関数を書く */;\\n\\n// 4. 各アロー関数を呼び出してテストしてください\\nconsole.log(\\\"=== アロー関数のテスト ===\\\");\\n\\n// greet関数のテスト\\nlet greeting1 = greet(\\\"太郎\\\");\\nconsole.log(greeting1);\\n\\nlet greeting2 = greet(\\\"花子\\\");\\nconsole.log(greeting2);\\n\\n// square関数のテスト\\nlet result1 = square(4);\\nconsole.log(\\\"4の2乗: \\\" + result1);\\n\\nlet result2 = square(7);\\nconsole.log(\\\"7の2乗: \\\" + result2);\\n\\n// showMessage関数のテスト\\nshowMessage();",
  "testCases": [
    {
      "name": "基本ケース（アロー関数実行）",
      "variables": {},
      "expectedOutput": "=== アロー関数のテスト ===\\nHello, 太郎!\\nHello, 花子!\\n4の2乗: 16\\n7の2乗: 49\\nアロー関数を学習中です！"
    },
    {
      "name": "greetアロー関数チェック",
      "variables": {},
      "expectedOutput": "=== アロー関数のテスト ===\\nHello, 太郎!\\nHello, 花子!\\n4の2乗: 16\\n7の2乗: 49\\nアロー関数を学習中です！"
    },
    {
      "name": "squareアロー関数チェック",
      "variables": {},
      "expectedOutput": "=== アロー関数のテスト ===\\nHello, 太郎!\\nHello, 花子!\\n4の2乗: 16\\n7の2乗: 49\\nアロー関数を学習中です！"
    },
    {
      "name": "showMessageアロー関数チェック",
      "variables": {},
      "expectedOutput": "=== アロー関数のテスト ===\\nHello, 太郎!\\nHello, 花子!\\n4の2乗: 16\\n7の2乗: 49\\nアロー関数を学習中です！"
    },
    {
      "name": "計算結果確認（7の2乗=49）",
      "variables": {},
      "expectedOutput": "=== アロー関数のテスト ===\\nHello, 太郎!\\nHello, 花子!\\n4の2乗: 16\\n7の2乗: 49\\nアロー関数を学習中です！"
    }
  ],
  "expectedOutput": "=== アロー関数のテスト ===\\nHello, 太郎!\\nHello, 花子!\\n4の2乗: 16\\n7の2乗: 49\\nアロー関数を学習中です！",
  "testVariables": {},
  "points": 100
}
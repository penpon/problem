{
  "id": "practice6",
  "title": "練習問題6：関数の基本呼び出し",
  "description": "挨拶をする関数を定義して、複数回呼び出してみよう！",
  "instructions": [
    "関数の定義方法（function宣言）を理解してください。",
    "関数の呼び出し方法を理解してください。",
    "console.logを使ってメッセージを表示する方法を学んでください。"
  ],
  "template": "// 問題6: 関数の基本呼び出し\\n// 挨拶をする関数を定義して、複数回呼び出してみよう！\\n\\n// 1. greeting関数を定義してください（引数なし）\\nfunction greeting() {\\n    /* ここに「こんにちは！今日もがんばりましょう！」を表示するコードを書く */\\n}\\n\\n// 2. goodMorning関数を定義してください（引数なし）\\n/* ここにgoodMorning関数を定義する */\\n\\n// 3. 各関数を呼び出してください\\nconsole.log(\"=== 挨拶プログラム ===\");\\n/* ここでgoodMorning関数を呼び出す */\\n/* ここでgreeting関数を呼び出す */\\nconsole.log(\"今日も一日がんばってください！\");",
  "testCases": [
    {
      "name": "基本ケース（関数呼び出し）",
      "variables": {},
      "expectedOutput": "=== 挨拶プログラム ===\\nおはようございます！\\nこんにちは！今日もがんばりましょう！\\n今日も一日がんばってください！"
    },
    {
      "name": "関数定義チェック（greeting）",
      "variables": {},
      "expectedOutput": "=== 挨拶プログラム ===\\nおはようございます！\\nこんにちは！今日もがんばりましょう！\\n今日も一日がんばってください！"
    },
    {
      "name": "関数定義チェック（goodMorning）",
      "variables": {},
      "expectedOutput": "=== 挨拶プログラム ===\\nおはようございます！\\nこんにちは！今日もがんばりましょう！\\n今日も一日がんばってください！"
    },
    {
      "name": "全体の実行順序チェック",
      "variables": {},
      "expectedOutput": "=== 挨拶プログラム ===\\nおはようございます！\\nこんにちは！今日もがんばりましょう！\\n今日も一日がんばってください！"
    },
    {
      "name": "出力メッセージの正確性チェック",
      "variables": {},
      "expectedOutput": "=== 挨拶プログラム ===\\nおはようございます！\\nこんにちは！今日もがんばりましょう！\\n今日も一日がんばってください！"
    }
  ],
  "expectedOutput": "=== 挨拶プログラム ===\\nおはようございます！\\nこんにちは！今日もがんばりましょう！\\n今日も一日がんばってください！",
  "testVariables": {},
  "points": 100
}
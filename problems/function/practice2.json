{
  "id": "function/practice2",
  "title": "問題2：引数を持つ関数",
  "description": "名前を受け取って、個人的な挨拶をする関数を作成しよう！",
  "instructions": [
    "引数を持つ関数の定義方法を理解してください。",
    "引数を使って動的なメッセージを作成する方法を学んでください。",
    "関数に異なる値を渡して呼び出す方法を理解してください。"
  ],
  "template": "// 問題2: 引数を持つ関数\\n// 名前を受け取って、個人的な挨拶をする関数を作成しよう！\\n\\n// 1. personalGreeting関数を定義してください（引数: name）\\nfunction personalGreeting(name) {\\n    /* ここに「[name]さん、こんにちは！」を表示するコードを書く */\\n}\\n\\n// 2. introduceMyself関数を定義してください（引数: name）\\n/* ここにintroduceMyself関数を定義する */\\n\\n// 3. 関数を呼び出してテストしてください\\nconsole.log(\"=== 個人的な挨拶 ===\");\\n/* ここでpersonalGreeting関数を「太郎」で呼び出す */\\n/* ここでintroduceMyself関数を「花子」で呼び出す */\\n\\nconsole.log(\"\\n=== 別のパターン ===\");\\n/* ここでpersonalGreeting関数を「田中」で呼び出す */\\n/* ここでintroduceMyself関数を「佐藤」で呼び出す */",
  "testCases": [
    {
      "name": "基本ケース（太郎・花子）",
      "variables": {},
      "expectedOutput": "=== 個人的な挨拶 ===\\n太郎さん、こんにちは！\\n私の名前は花子です。\\n\\n=== 別のパターン ===\\n田中さん、こんにちは！\\n私の名前は佐藤です。"
    },
    {
      "name": "personalGreeting関数チェック",
      "variables": {},
      "expectedOutput": "=== 個人的な挨拶 ===\\n太郎さん、こんにちは！\\n私の名前は花子です。\\n\\n=== 別のパターン ===\\n田中さん、こんにちは！\\n私の名前は佐藤です。"
    },
    {
      "name": "introduceMyself関数チェック",
      "variables": {},
      "expectedOutput": "=== 個人的な挨拶 ===\\n太郎さん、こんにちは！\\n私の名前は花子です。\\n\\n=== 別のパターン ===\\n田中さん、こんにちは！\\n私の名前は佐藤です。"
    },
    {
      "name": "異なる名前での実行チェック",
      "variables": {},
      "expectedOutput": "=== 個人的な挨拶 ===\\n太郎さん、こんにちは！\\n私の名前は花子です。\\n\\n=== 別のパターン ===\\n田中さん、こんにちは！\\n私の名前は佐藤です。"
    },
    {
      "name": "全体実行順序チェック",
      "variables": {},
      "expectedOutput": "=== 個人的な挨拶 ===\\n太郎さん、こんにちは！\\n私の名前は花子です。\\n\\n=== 別のパターン ===\\n田中さん、こんにちは！\\n私の名前は佐藤です。"
    }
  ],
  "expectedOutput": "=== 個人的な挨拶 ===\\n太郎さん、こんにちは！\\n私の名前は花子です。\\n\\n=== 別のパターン ===\\n田中さん、こんにちは！\\n私の名前は佐藤です。",
  "testVariables": {},
  "points": 100
}
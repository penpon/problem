{
  "id": "function/practice17",
  "title": "練習問題24：関数とループ（復習）",
  "description": "銀行システムで使うループ処理を含む関数を作成して、繰り返し処理を学ぼう！",
  "instructions": [
    "ループ処理を含む関数の復習をしてください。",
    "実用的な金融システムでの計算処理を理解してください。",
    "累積計算と配列検索のアルゴリズムを学んでください。"
  ],
  "template": "// 問題24: 関数とループ（復習）\\n// 銀行システムで使うループ処理を含む関数を作成して、繰り返し処理を学ぼう！\\n\\n// 1. calculateInterest関数を定義してください（引数: principal, years、戻り値: 複利計算後の金額）\\nfunction calculateInterest(principal, years) {\\n    /* ここにfor文を使って複利計算するコードを書く */\\n    /* let amount = principal; から始めて、for文でamount = amount * 1.03を繰り返す */\\n}\\n\\n// 2. showAccountHistory関数を定義してください（引数: transactions）\\n/* ここにshowAccountHistory関数を定義する */\\n/* transactionsから1まで順番に「取引履歴 [番号]」を表示する */\\n\\n// 3. findMinBalance関数を定義してください（引数: balances、戻り値: 配列内の最小値）\\nfunction findMinBalance(balances) {\\n    /* ここにfor文を使って配列の最小値を見つけるコードを書く */\\n    /* let min = balances[0]; から始めて、for文で比較していく */\\n}\\n\\n// 4. 関数を呼び出してテストしてください\\nconsole.log(\"=== 銀行システム ===\");\\n\\n// calculateInterest関数のテスト\\nlet amount1 = /* ここでcalculateInterest関数を100000、3で呼び出す */;\\nconsole.log(\"10万円を3年間預けた場合: \" + Math.round(amount1) + \"円\");\\n\\nlet amount2 = /* ここでcalculateInterest関数を50000、5で呼び出す */;\\nconsole.log(\"5万円を5年間預けた場合: \" + Math.round(amount2) + \"円\");\\n\\n// showAccountHistory関数のテスト\\nconsole.log(\"\\\\n--- 取引履歴（5件） ---\");\\n/* ここでshowAccountHistory関数を5で呼び出す */;\\n\\nconsole.log(\"\\\\n--- 取引履歴（3件） ---\");\\n/* ここでshowAccountHistory関数を3で呼び出す */;\\n\\n// findMinBalance関数のテスト\\nlet testBalances1 = [150000, 80000, 120000, 200000, 90000];\\nlet min1 = /* ここでfindMinBalance関数をtestBalances1で呼び出す */;\\nconsole.log(\"\\\\n[150000, 80000, 120000, 200000, 90000]の最小残高: \" + min1 + \"円\");\\n\\nlet testBalances2 = [300000, 250000, 400000];\\nlet min2 = /* ここでfindMinBalance関数をtestBalances2で呼び出す */;\\nconsole.log(\"[300000, 250000, 400000]の最小残高: \" + min2 + \"円\");",
  "testCases": [
    {
      "name": "基本ケース（銀行システム）",
      "variables": {
        "testBalances1": [150000, 80000, 120000, 200000, 90000],
        "testBalances2": [300000, 250000, 400000]
      },
      "expectedOutput": "=== 銀行システム ===\\n10万円を3年間預けた場合: 109273円\\n5万円を5年間預けた場合: 57964円\\n\\n--- 取引履歴（5件） ---\\n取引履歴 5\\n取引履歴 4\\n取引履歴 3\\n取引履歴 2\\n取引履歴 1\\n\\n--- 取引履歴（3件） ---\\n取引履歴 3\\n取引履歴 2\\n取引履歴 1\\n\\n[150000, 80000, 120000, 200000, 90000]の最小残高: 80000円\\n[300000, 250000, 400000]の最小残高: 250000円"
    },
    {
      "name": "calculateInterest関数チェック",
      "variables": {
        "testBalances1": [150000, 80000, 120000, 200000, 90000],
        "testBalances2": [300000, 250000, 400000]
      },
      "expectedOutput": "=== 銀行システム ===\\n10万円を3年間預けた場合: 109273円\\n5万円を5年間預けた場合: 57964円\\n\\n--- 取引履歴（5件） ---\\n取引履歴 5\\n取引履歴 4\\n取引履歴 3\\n取引履歴 2\\n取引履歴 1\\n\\n--- 取引履歴（3件） ---\\n取引履歴 3\\n取引履歴 2\\n取引履歴 1\\n\\n[150000, 80000, 120000, 200000, 90000]の最小残高: 80000円\\n[300000, 250000, 400000]の最小残高: 250000円"
    },
    {
      "name": "showAccountHistory関数チェック",
      "variables": {
        "testBalances1": [150000, 80000, 120000, 200000, 90000],
        "testBalances2": [300000, 250000, 400000]
      },
      "expectedOutput": "=== 銀行システム ===\\n10万円を3年間預けた場合: 109273円\\n5万円を5年間預けた場合: 57964円\\n\\n--- 取引履歴（5件） ---\\n取引履歴 5\\n取引履歴 4\\n取引履歴 3\\n取引履歴 2\\n取引履歴 1\\n\\n--- 取引履歴（3件） ---\\n取引履歴 3\\n取引履歴 2\\n取引履歴 1\\n\\n[150000, 80000, 120000, 200000, 90000]の最小残高: 80000円\\n[300000, 250000, 400000]の最小残高: 250000円"
    },
    {
      "name": "findMinBalance関数チェック",
      "variables": {
        "testBalances1": [150000, 80000, 120000, 200000, 90000],
        "testBalances2": [300000, 250000, 400000]
      },
      "expectedOutput": "=== 銀行システム ===\\n10万円を3年間預けた場合: 109273円\\n5万円を5年間預けた場合: 57964円\\n\\n--- 取引履歴（5件） ---\\n取引履歴 5\\n取引履歴 4\\n取引履歴 3\\n取引履歴 2\\n取引履歴 1\\n\\n--- 取引履歴（3件） ---\\n取引履歴 3\\n取引履歴 2\\n取引履歴 1\\n\\n[150000, 80000, 120000, 200000, 90000]の最小残高: 80000円\\n[300000, 250000, 400000]の最小残高: 250000円"
    },
    {
      "name": "複利計算確認（100000×1.03^3）",
      "variables": {
        "testBalances1": [150000, 80000, 120000, 200000, 90000],
        "testBalances2": [300000, 250000, 400000]
      },
      "expectedOutput": "=== 銀行システム ===\\n10万円を3年間預けた場合: 109273円\\n5万円を5年間預けた場合: 57964円\\n\\n--- 取引履歴（5件） ---\\n取引履歴 5\\n取引履歴 4\\n取引履歴 3\\n取引履歴 2\\n取引履歴 1\\n\\n--- 取引履歴（3件） ---\\n取引履歴 3\\n取引履歴 2\\n取引履歴 1\\n\\n[150000, 80000, 120000, 200000, 90000]の最小残高: 80000円\\n[300000, 250000, 400000]の最小残高: 250000円"
    }
  ],
  "expectedOutput": "=== 銀行システム ===\\n10万円を3年間預けた場合: 109273円\\n5万円を5年間預けた場合: 57964円\\n\\n--- 取引履歴（5件） ---\\n取引履歴 5\\n取引履歴 4\\n取引履歴 3\\n取引履歴 2\\n取引履歴 1\\n\\n--- 取引履歴（3件） ---\\n取引履歴 3\\n取引履歴 2\\n取引履歴 1\\n\\n[150000, 80000, 120000, 200000, 90000]の最小残高: 80000円\\n[300000, 250000, 400000]の最小残高: 250000円",
  "testVariables": {
    "testBalances1": [150000, 80000, 120000, 200000, 90000],
    "testBalances2": [300000, 250000, 400000]
  },
  "points": 100
}